<Window x:Class="ScreenToGif.Windows.Options"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:n="clr-namespace:ScreenToGif.Controls"
        xmlns:c="clr-namespace:ScreenToGif.Util.Converters;assembly=ScreenToGif.Util"
        xmlns:t="clr-namespace:ScreenToGif.Util.Settings;assembly=ScreenToGif.Util"
        xmlns:e="clr-namespace:ScreenToGif.Domain.Enums;assembly=ScreenToGif.Domain"
        Title="{DynamicResource S.Options.Title}" Height="610" Width="800" MinWidth="680" MinHeight="460" 
        Background="{DynamicResource Panel.Background}" Icon="/Resources/Logo.ico" 
        SizeToContent="Width" WindowStartupLocation="CenterScreen" UseLayoutRounding="True" SnapsToDevicePixels="True"
        Loaded="Window_Loaded" Closing="Window_Closing">

    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Command.CheckCache}" CanExecute="Cache_CanExecute" Executed="CheckCache_Execute"/>
        <CommandBinding Command="{StaticResource Command.ClearCache}" CanExecute="Cache_CanExecute" Executed="ClearCache_Execute"/>
        <CommandBinding Command="{StaticResource Command.BrowseCache}" CanExecute="BrowseCache_CanExecute" Executed="BrowseCache_Execute"/>
        <CommandBinding Command="{StaticResource Command.BrowseLogs}" CanExecute="BrowseLogs_CanExecute" Executed="BrowseLogs_Execute"/>

        <CommandBinding Command="{StaticResource Command.RemoveAppDataSettings}" CanExecute="RemoveAppDataSettings_CanExecute" Executed="RemoveAppDataSettings_Executed"/>
        <CommandBinding Command="{StaticResource Command.OpenAppDataSettings}" CanExecute="RemoveAppDataSettings_CanExecute" Executed="OpenAppDataSettings_Execute"/>

        <CommandBinding Command="{StaticResource Command.CreateLocalSettings}" CanExecute="CreateLocalSettings_CanExecute" Executed="CreateLocalSettings_Execute"/>
        <CommandBinding Command="{StaticResource Command.OpenLocalSettings}" CanExecute="RemoveLocalSettings_CanExecute" Executed="OpenLocalSettings_Execute"/>
        <CommandBinding Command="{StaticResource Command.RemoveLocalSettings}" CanExecute="RemoveLocalSettings_CanExecute" Executed="RemoveLocalSettings_Execute"/>

        <CommandBinding Command="{StaticResource Command.BrowseFfmpeg}" CanExecute="BrowseFfmpeg_CanExecute" Executed="BrowseFfmpeg_Execute"/>
        <CommandBinding Command="{StaticResource Command.BrowseGifski}" CanExecute="BrowseGifski_CanExecute" Executed="BrowseGifski_Execute"/>
    </Window.CommandBindings>

    <Window.Resources>
        <c:InvertedVisibility x:Key="InvertedVisibility"/>
        <c:BoolAndToVisibility x:Key="BoolAndToVisibility"/>
        <c:BoolOrToVisibility x:Key="BoolOrToVisibility"/>
    </Window.Resources>

    <Grid DataContext="{x:Static t:UserSettings.All}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="90"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!--Options-->
            <StackPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" x:Name="OptionsStackPanel" Margin="0" MaxWidth="180" MinWidth="130">
                <StackPanel.Resources>
                    <Style BasedOn="{StaticResource {x:Type n:ExtendedRadioButton}}" TargetType="{x:Type n:ExtendedRadioButton}">
                        <Setter Property="Padding" Value="2,2,2,2"/>
                        <Setter Property="FontSize" Value="17"/>
                        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="ContentWidth" Value="24"/>
                        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    </Style>
                </StackPanel.Resources>

                <n:ExtendedRadioButton x:Name="AppRadio" Text="{DynamicResource S.Options.App}" Icon="{StaticResource Vector.Application}"/>
                <n:ExtendedRadioButton x:Name="RecorderRadio" Text="{DynamicResource S.Options.Recorder}" Icon="{StaticResource Vector.Record}" IsChecked="True"/>
                <n:ExtendedRadioButton x:Name="EditorRadio" Text="{DynamicResource S.Options.Editor}" Icon="{StaticResource Vector.Editor}"/>
                <n:ExtendedRadioButton x:Name="AutomaticRadio" Text="{DynamicResource S.Options.Tasks}" Icon="{StaticResource Vector.Encoder}"/>
                <n:ExtendedRadioButton x:Name="ShortcutsRadio" Text="{DynamicResource S.Options.Shortcuts}" Icon="{StaticResource Vector.Keyboard}"/>
                <n:ExtendedRadioButton x:Name="LanguageRadio" Text="{DynamicResource S.Options.Language}" Icon="{StaticResource Vector.Translate}"/>
                <n:ExtendedRadioButton x:Name="TempRadio" Text="{DynamicResource S.Options.Storage}" Icon="{StaticResource Vector.Temporary}"/>
                <n:ExtendedRadioButton x:Name="CloudRadioButton" Text="{DynamicResource S.Options.Upload}" Icon="{StaticResource Vector.Web}"/>
                <n:ExtendedRadioButton x:Name="ExtrasRadioButton" Text="{DynamicResource S.Options.Extras}" Icon="{StaticResource Vector.Extras}"/>
                <n:ExtendedRadioButton x:Name="DonateRadio" Text="{DynamicResource S.Options.Donate}" Icon="{StaticResource Vector.Money}"/>
                <n:ExtendedRadioButton x:Name="AboutRadio" Text="{DynamicResource S.Options.About}" Icon="{StaticResource Vector.Info}"/>
            </StackPanel>

            <n:StatusBand Grid.Row="0" Grid.Column="1" x:Name="StatusBand"/>

            <ScrollViewer Grid.Row="1" Grid.Column="1" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <!--Application-->
                    <Grid x:Name="ApplicationPanel" Visibility="{Binding IsChecked, ElementName=AppRadio, Converter={StaticResource Bool2Visibility}}" Loaded="ApplicationPanel_Loaded">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Expander Grid.Row="0" Header="{DynamicResource S.Options.App.Startup}" IsExpanded="True">
                            <StackPanel>
                                <WrapPanel Margin="0,0,5,5" HorizontalAlignment="Center">
                                    <Grid x:Name="StartupModeGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <n:ExtendedRadioButton Grid.Column="0" x:Name="StartManuallyCheckBox" ContentWidth="40" ContentHeight="40" Text="{DynamicResource S.Options.App.Startup.Mode.Manual}" Padding="5" IsChecked="True"
                                                               Icon="{StaticResource Vector.Cursor}" ToolTip="{DynamicResource S.Options.App.Startup.Mode.Manual.Info}"/>

                                        <n:ExtendedRadioButton Grid.Column="1" x:Name="StartAutomaticallyCheckBox" ContentWidth="40" ContentHeight="40" Text="{DynamicResource S.Options.App.Startup.Mode.Automatic}" Padding="5"
                                                               Icon="{StaticResource Vector.Play}" ToolTip="{DynamicResource S.Options.App.Startup.Mode.Automatic.Info}" 
                                                               Checked="StartAutomaticallyCheckBox_Checked" Unchecked="StartAutomaticallyCheckBox_Unchecked"/>
                                    </Grid>

                                    <Separator Width="1" Margin="3"/>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <n:ExtendedRadioButton Grid.Column="0" ContentWidth="40" ContentHeight="40" Text="{DynamicResource S.Options.App.Startup.Instance.Single}" Padding="5" Icon="{StaticResource Vector.View}" 
                                                               IsChecked="{Binding Path=SingleInstance, Mode=TwoWay}" ToolTip="{DynamicResource S.Options.App.Startup.Instance.Single.Info}"
                                                               Checked="Instance_Checked"/>
                                        <n:ExtendedRadioButton Grid.Column="1" ContentWidth="40" ContentHeight="40" Text="{DynamicResource S.Options.App.Startup.Instance.Multiple}" Padding="5" Icon="{StaticResource Vector.Views}" 
                                                               IsChecked="{Binding Path=SingleInstance, Mode=TwoWay, Converter={StaticResource InvertedBool}}" ToolTip="{DynamicResource S.Options.App.Startup.Instance.Multiple.Info}"
                                                               Checked="Instance_Checked"/>
                                    </Grid>
                                </WrapPanel>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.Startup.Tray}" Info="{DynamicResource S.Options.App.Startup.Tray.Info}"
                                                    Margin="15,3,5,3" VerticalAlignment="Top" IsChecked="{Binding Path=StartMinimized, Mode=TwoWay}" Checked="StartCheckBox_Checked"/>

                                <Grid Margin="15,0,5,5" Visibility="{Binding StartMinimized, Converter={StaticResource InvertedBoolToVisibility}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Text="{DynamicResource S.Options.App.Startup.Window}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,5,0" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" SelectedIndex="{Binding Path=StartUp, Mode=TwoWay}" MinWidth="120" VerticalAlignment="Center">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Startup}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Recorder}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Webcam}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Board}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Editor}"/>
                                    </ComboBox>

                                    <TextBlock Grid.Column="2" Text="{DynamicResource S.Options.App.Startup.Window.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" 
                                               Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </Grid>
                            </StackPanel>
                        </Expander>

                        <Expander Grid.Row="1" Header="{DynamicResource S.Options.App.Theme}" IsExpanded="True">
                            <Grid Margin="15,3,5,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{DynamicResource S.Options.App.Theme.Scheme}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,5,0" VerticalAlignment="Center"/>
                                <ComboBox Grid.Column="1" x:Name="AppThemeComboBox" Height="28" VerticalContentAlignment="Center" Padding="5,0" SelectedValuePath="Tag" 
                                          SelectedValue="{Binding Source={x:Static t:UserSettings.All}, Path=MainTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          SelectionChanged="AppThemeComboBox_SelectionChanged">

                                    <StackPanel Orientation="Horizontal" Tag="Light">
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FFFFFFFF" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFFAFAFA" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFF5F5F5" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFF9F9FF" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFFFFFFF" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FFEFEFEF" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Light}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0" 
                                               Foreground="{DynamicResource Element.Foreground}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Tag="Medium">
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FFEDEDED" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFE3E3E3" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFD6D6D6" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFD7D7E4" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFE8E8E8" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FFECECEC" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Medium}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0" 
                                               Foreground="{DynamicResource Element.Foreground}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Tag="Dark">
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FF202020" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FFE8E8E8" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF262626" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FFE8E8E8" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF2A2A2A" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FFE8E8E8" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF323130" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FFE8E8E8" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF323232" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FFE8E8E8" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FF343434" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FFE8E8E8" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Dark}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0" 
                                               Foreground="{DynamicResource Element.Foreground}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Tag="VeryDark">
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FF101010" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF161616" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF1A1A1A" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF222120" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF222222" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FF242424" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Label Content="{DynamicResource S.Options.App.Theme.Scheme.VeryDark}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0" 
                                               Foreground="{DynamicResource Element.Foreground}"/>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Tag="FollowSystem">
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FFFFFFFF" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFFAFAFA" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FFF5F5F5" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="Black" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF222120" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,0,1" Background="#FF222222" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FF242424" Width="20" Height="20" ToolTip="{DynamicResource S.Options.App.Theme.Scheme.Example}">
                                            <TextBlock Text="Aa" Foreground="#FF696969" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Label Content="{DynamicResource S.Options.App.Theme.Scheme.FollowSystem}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"
                                               Foreground="{DynamicResource Element.Foreground}"/>
                                    </StackPanel>
                                </ComboBox>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="2" Header="{DynamicResource S.Options.App.Tray}" IsExpanded="True">
                            <StackPanel>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.Tray.Show}" Margin="15,3,5,3" IsChecked="{Binding Path=ShowNotificationIcon, Mode=TwoWay}"
                                                    CheckedChanged="NotificationIconCheckBox_CheckedChanged"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.Tray.LeaveOpen}" Margin="30,3,5,3" IsChecked="{Binding Path=KeepOpen, Mode=TwoWay}"
                                                    Visibility="{Binding ShowNotificationIcon, Converter={StaticResource Bool2Visibility}}"/>

                                <Grid Margin="30,0,0,0" Visibility="{Binding ShowNotificationIcon, Converter={StaticResource Bool2Visibility}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!--Left-->
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Options.App.Tray.Interactions.Left}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,3,0" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding Path=LeftClickAction, Mode=TwoWay}" MinWidth="180" VerticalAlignment="Center">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Nothing}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Open}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Toggle}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Minimize}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Restore}"/>
                                    </ComboBox>

                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource S.Options.App.Tray.Interactions.Window}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0,3,0" VerticalAlignment="Center"
                                               Visibility="{Binding Path=LeftClickAction, Converter={StaticResource IntToVisibility}, ConverterParameter=1}"/>
                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource S.Options.App.Tray.Interactions.Else}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0,3,0" VerticalAlignment="Center"
                                               Visibility="{Binding Path=LeftClickAction, Converter={StaticResource InvertedIntToVisibility}, ConverterParameter=1}"/>

                                    <ComboBox Grid.Row="0" Grid.Column="3" SelectedIndex="{Binding Path=LeftOpenWindow, Mode=TwoWay}" MinWidth="120" VerticalAlignment="Center" Margin="0,3">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Open.None}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Startup}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Recorder}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Webcam}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Board}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Editor}"/>
                                    </ComboBox>

                                    <!--Double left-->
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource S.Options.App.Tray.Interactions.DoubleLeft}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,3,0" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" SelectedIndex="{Binding Path=DoubleLeftClickAction, Mode=TwoWay}" MinWidth="180" VerticalAlignment="Center" Margin="0,3">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Nothing}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Open}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Toggle}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Minimize}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Restore}"/>
                                    </ComboBox>

                                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{DynamicResource S.Options.App.Tray.Interactions.Window}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0,3,0" VerticalAlignment="Center"
                                               Visibility="{Binding Path=DoubleLeftClickAction, Converter={StaticResource IntToVisibility}, ConverterParameter=1}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{DynamicResource S.Options.App.Tray.Interactions.Else}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0,3,0" VerticalAlignment="Center"
                                               Visibility="{Binding Path=DoubleLeftClickAction, Converter={StaticResource InvertedIntToVisibility}, ConverterParameter=1}"/>

                                    <ComboBox Grid.Row="1" Grid.Column="3" SelectedIndex="{Binding Path=DoubleLeftOpenWindow, Mode=TwoWay}" MinWidth="120" VerticalAlignment="Center" Margin="0,3">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Open.None}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Startup}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Recorder}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Webcam}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Board}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Editor}"/>
                                    </ComboBox>

                                    <!--Middle-->
                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource S.Options.App.Tray.Interactions.Middle}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,3,0" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" SelectedIndex="{Binding Path=MiddleClickAction, Mode=TwoWay}" MinWidth="180" VerticalAlignment="Center" Margin="0,3">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Nothing}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Open}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Toggle}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Minimize}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Restore}"/>
                                    </ComboBox>

                                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{DynamicResource S.Options.App.Tray.Interactions.Window}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0,3,0" VerticalAlignment="Center"
                                               Visibility="{Binding Path=MiddleClickAction, Converter={StaticResource IntToVisibility}, ConverterParameter=1}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{DynamicResource S.Options.App.Tray.Interactions.Else}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0,3,0" VerticalAlignment="Center"
                                               Visibility="{Binding Path=MiddleClickAction, Converter={StaticResource InvertedIntToVisibility}, ConverterParameter=1}"/>

                                    <ComboBox Grid.Row="2" Grid.Column="3" SelectedIndex="{Binding Path=MiddleOpenWindow, Mode=TwoWay}" MinWidth="120" VerticalAlignment="Center" Margin="0,3">
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Tray.Interactions.Open.None}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Startup}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Recorder}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Webcam}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Board}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.App.Startup.Window.Editor}"/>
                                    </ComboBox>
                                </Grid>
                            </StackPanel>
                        </Expander>

                        <Expander Grid.Row="3" Header="{DynamicResource S.Options.App.General}" IsExpanded="True">
                            <StackPanel>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.General.WorkaroundQuota}" Info="{DynamicResource S.Options.App.General.WorkaroundQuota.Info}"
                                                    Margin="15,3,5,3" VerticalAlignment="Top" IsChecked="{Binding Path=WorkaroundQuota, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.General.NotifyWhileClosingApp}" Margin="15,3,5,3" IsChecked="{Binding Path=NotifyWhileClosingApp, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.General.DisableHardwareAcceleration}" Info="{DynamicResource S.Options.App.General.DisableHardwareAcceleration.Info}"
                                                    Margin="15,3,5,3" VerticalAlignment="Top" IsChecked="{Binding Path=DisableHardwareAcceleration, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.General.CheckForTranslationUpdates}" Info="{DynamicResource S.Options.App.General.CheckForTranslationUpdates.Info}"
                                                    Margin="15,3,5,3" VerticalAlignment="Top" IsChecked="{Binding Path=CheckForTranslationUpdates, Mode=TwoWay}"/>

                                <n:ExtendedCheckBox x:Name="UpdatesCheckBox" Text="{DynamicResource S.Options.App.General.CheckForUpdates}" Margin="15,3,5,3" IsChecked="{Binding Path=CheckForUpdates, Mode=TwoWay}"/>
                                <StackPanel Visibility="{Binding CheckForUpdates, Converter={StaticResource Bool2Visibility}}">
                                    <n:ExtendedCheckBox x:Name="PortableUpdateCheckBox" Text="{DynamicResource S.Options.App.General.PortableUpdate}" Info="{DynamicResource S.Options.App.General.PortableUpdate.Info}" 
                                                        Margin="30,3,5,3" IsChecked="{Binding Path=PortableUpdate, Mode=TwoWay}"/>
                                    <n:ExtendedCheckBox x:Name="AdminUpdateCheckBox" Text="{DynamicResource S.Options.App.General.ForceUpdateAsAdmin}" Margin="30,3,5,3" IsChecked="{Binding Path=ForceUpdateAsAdmin, Mode=TwoWay}"/>
                                    <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.General.UpdateOnClose}" Margin="30,3,5,3" IsChecked="{Binding Path=InstallUpdates, Mode=TwoWay}"/>
                                    <n:ExtendedCheckBox Text="{DynamicResource S.Options.App.General.PromptToInstall}" Margin="45,3,5,3" IsChecked="{Binding Path=PromptToInstall, Mode=TwoWay}"
                                                        Visibility="{Binding InstallUpdates, Converter={StaticResource Bool2Visibility}}"/>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </Grid>

                    <!--Recorder-->
                    <Grid x:Name="RecorderPanel" Visibility="{Binding IsChecked, ElementName=RecorderRadio, Converter={StaticResource Bool2Visibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Expander Grid.Row="0" Header="{DynamicResource S.Options.Recorder.Interface}" IsExpanded="True">
                            <Grid Margin="10,0,5,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="0" ContentHeight="46" ContentWidth="56" Text="{DynamicResource S.Options.Recorder.Interface.Old}" Padding="5" HorizontalAlignment="Right"
                                                       IsChecked="{Binding Path=NewRecorder, Mode=TwoWay, Converter={StaticResource InvertedBool}}" Icon="{StaticResource Vector.Recorder.Old}"/>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="1" ContentHeight="46" ContentWidth="56" Text="{DynamicResource S.Options.Recorder.Interface.New}" Padding="5" HorizontalAlignment="Left"
                                                       IsChecked="{Binding Path=NewRecorder, Mode=TwoWay}" Icon="{StaticResource Vector.Recorder.New}"/>

                                <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,3" Visibility="{Binding Path=NewRecorder, Mode=OneWay, Converter={StaticResource InvertedBoolToVisibility}}"
                                                    Text="{DynamicResource S.Options.Recorder.HideTitleBar}" IsChecked="{Binding Path=RecorderThinMode, Mode=TwoWay}"/>

                                <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Recorder.Magnifier}" 
                                                    Info="{DynamicResource S.Options.Recorder.Magnifier.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=Magnifier, Mode=TwoWay}"
                                                    Visibility="{Binding Path=NewRecorder, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>

                                <n:ExtendedCheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Recorder.AnimateBorder}" 
                                                    Info="{DynamicResource S.Options.Recorder.AnimateBorder.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=AnimateRecorderBorder, Mode=TwoWay}"
                                                    Visibility="{Binding Path=NewRecorder, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>

                                <n:ExtendedCheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Recorder.SelectionPanning}" 
                                                    Info="{DynamicResource S.Options.Recorder.SelectionPanning.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=EnableSelectionPanning, Mode=TwoWay}"
                                                    Visibility="{Binding Path=NewRecorder, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>

                                <n:ExtendedCheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Recorder.Compact}" 
                                                    Info="{DynamicResource S.Options.Recorder.Compact.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=RecorderCompactMode, Mode=TwoWay}"
                                                    Visibility="{Binding Path=NewRecorder, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>

                                <n:ExtendedCheckBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Recorder.DisplayDiscard}" 
                                                    Info="{DynamicResource S.Options.Recorder.DisplayDiscard.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=RecorderDisplayDiscard, Mode=TwoWay}"/>

                                <n:ExtendedCheckBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Recorder.SelectionImprovement}" 
                                                    Info="{DynamicResource S.Options.Recorder.SelectionImprovement.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=SelectionImprovement, Mode=TwoWay}"
                                                    Visibility="{Binding Path=NewRecorder, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="1" Header="{DynamicResource S.Options.Recorder.Frequency}" IsExpanded="True">
                            <Grid Margin="10,0,5,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="1" x:Name="ManualRadioButton" ContentHeight="26" ContentWidth="26"
                                                       Text="{DynamicResource S.Options.Recorder.Frequency.Manual}" Padding="5" Margin="0,0,0,5" TextWrapping="Wrap"
                                                       IsChecked="{Binding CaptureFrequency, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static e:CaptureFrequencies.Manual}}" 
                                                       Icon="{StaticResource Vector.Camera}" ToolTip="{DynamicResource S.Options.Recorder.Frequency.Manual.Info}"/>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="2" x:Name="InteractionRadioButton" ContentHeight="26" ContentWidth="26"
                                                       Text="{DynamicResource S.Options.Recorder.Frequency.Interaction}" Padding="5" Margin="0,0,0,5" TextWrapping="Wrap"
                                                       IsChecked="{Binding CaptureFrequency, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static e:CaptureFrequencies.Interaction}}" 
                                                       Icon="{StaticResource Vector.Cursor}" ToolTip="{DynamicResource S.Options.Recorder.Frequency.Interaction.Info}"/>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="3" x:Name="PerSecondRadioButton" ContentHeight="26" ContentWidth="26" 
                                                       Text="{DynamicResource S.Options.Recorder.Frequency.Second}" Padding="5" Margin="0,0,0,5" TextWrapping="Wrap"
                                                       IsChecked="{Binding CaptureFrequency, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static e:CaptureFrequencies.PerSecond}}" 
                                                       Icon="{StaticResource Vector.Delay}" ToolTip="{DynamicResource S.Options.Recorder.Frequency.Second.Info}"/>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="4" x:Name="PerMinuteRadioButton" ContentHeight="26" ContentWidth="26"
                                                       Text="{DynamicResource S.Options.Recorder.Frequency.Minute}" Padding="5" Margin="0,0,0,5" TextWrapping="Wrap"
                                                       IsChecked="{Binding CaptureFrequency, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static e:CaptureFrequencies.PerMinute}}" 
                                                       Icon="{StaticResource Vector.Delay.Minute}" ToolTip="{DynamicResource S.Options.Recorder.Frequency.Minute.Info}"/>

                                <n:ExtendedRadioButton Grid.Row="0" Grid.Column="5" x:Name="PerHourRadioButton" ContentHeight="26" ContentWidth="26"
                                                       Text="{DynamicResource S.Options.Recorder.Frequency.Hour}" Padding="5" Margin="0,0,0,5" TextWrapping="Wrap"
                                                       IsChecked="{Binding CaptureFrequency, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static e:CaptureFrequencies.PerHour}}"
                                                       Icon="{StaticResource Vector.Delay.Hour}" ToolTip="{DynamicResource S.Options.Recorder.Frequency.Hour.Info}"/>

                                <WrapPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="7" Margin="0,0,5,0" Visibility="{Binding ElementName=PerSecondRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource InvertedBoolToVisibility}, FallbackValue=Collapsed}">
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Frequency.Playback}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0" VerticalAlignment="Center"/>
                                    <n:IntegerUpDown Minimum="10" Maximum="25000" Value="{Binding Path=PlaybackDelayManual, Mode=TwoWay}" MinWidth="80" Visibility="{Binding ElementName=ManualRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:IntegerUpDown Minimum="10" Maximum="25000" Value="{Binding Path=PlaybackDelayInteraction, Mode=TwoWay}" MinWidth="80" Visibility="{Binding ElementName=InteractionRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:IntegerUpDown Minimum="10" Maximum="25000" Value="{Binding Path=PlaybackDelayMinute, Mode=TwoWay}" MinWidth="80" Visibility="{Binding ElementName=PerMinuteRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:IntegerUpDown Minimum="10" Maximum="25000" Value="{Binding Path=PlaybackDelayHour, Mode=TwoWay}" MinWidth="80" Visibility="{Binding ElementName=PerHourRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Frequency.Playback.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>
                                
                                <WrapPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="7" Margin="0,5,0,0"
                                           Visibility="{Binding ElementName=InteractionRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}, FallbackValue=Collapsed}">
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Frequency.Trigger}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0" VerticalAlignment="Center"/>
                                    <n:IntegerUpDown Minimum="0" Maximum="25000" Value="{Binding Path=TriggerDelayInteraction, Mode=TwoWay}" MinWidth="80" />
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Frequency.Trigger.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center"
                                               TextWrapping="WrapWithOverflow" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>

                                <WrapPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="7" Margin="0,5,0,0"
                                           Visibility="{Binding ElementName=ManualRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}, FallbackValue=Collapsed}">
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Frequency.Trigger}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0" VerticalAlignment="Center"/>
                                    <n:IntegerUpDown Minimum="0" Maximum="25000" Value="{Binding Path=TriggerDelayManual, Mode=TwoWay}" MinWidth="80" />
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Frequency.Trigger.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center"
                                               TextWrapping="WrapWithOverflow" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>
                                
                                <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="7" Text="{DynamicResource S.Options.Recorder.FixedFramerate}" 
                                                    Info="{DynamicResource S.Options.Recorder.FixedFramerate.Info}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=FixedFrameRate, Mode=TwoWay}"
                                                    Visibility="{Binding ElementName=PerSecondRadioButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource Bool2Visibility}, FallbackValue=Collapsed}"/>

                                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="7" Margin="0,0,5,0">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                            <Binding ElementName="PerSecondRadioButton" Path="IsChecked" Mode="OneWay"/>
                                            <Binding ElementName="PerMinuteRadioButton" Path="IsChecked" Mode="OneWay"/>
                                            <Binding ElementName="PerHourRadioButton" Path="IsChecked" Mode="OneWay"/>
                                        </MultiBinding>
                                    </Grid.Visibility>

                                    <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.CaptureChanges}" Info="{DynamicResource S.Options.Recorder.CaptureChanges.Info}" 
                                                        Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=OnlyCaptureChanges, Mode=TwoWay}"
                                                        Visibility="{Binding UseDesktopDuplication, Converter={StaticResource Bool2Visibility}}"/>
                                </Grid>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="2" Header="{DynamicResource S.Options.Recorder.Mode}" IsExpanded="True">
                            <StackPanel Margin="10,0,0,0">
                                <WrapPanel Margin="0,0,5,5" HorizontalAlignment="Center">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <n:ExtendedRadioButton Grid.Column="0" ContentWidth="36" ContentHeight="36" Text="BitBlt" Padding="5" IsChecked="{Binding Path=UseDesktopDuplication, Mode=TwoWay, Converter={StaticResource InvertedBool}}"
                                                               Icon="{StaticResource Vector.Gdi}" ToolTip="{DynamicResource S.Options.Recorder.Bitblt.Info}"/>

                                        <n:ExtendedRadioButton Grid.Column="1" ContentWidth="36" ContentHeight="40" Text="DirectX" Padding="5" IsChecked="{Binding Path=UseDesktopDuplication, Mode=TwoWay}"
                                                               Icon="{StaticResource Vector.DirectX}" ToolTip="{DynamicResource S.Options.Recorder.DirectX.Info}"/>
                                    </Grid>

                                    <Separator Width="1" Margin="3"/>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <n:ExtendedRadioButton Grid.Column="0" ContentWidth="36" ContentHeight="36" Text="{DynamicResource S.Options.Recorder.File}" Padding="5" Icon="{StaticResource Vector.ImageStack}" 
                                                               IsChecked="{Binding Path=UseMemoryCache, Mode=TwoWay, Converter={StaticResource InvertedBool}}" ToolTip="{DynamicResource S.Options.Recorder.File.Info}"/>
                                        <n:ExtendedRadioButton Grid.Column="1" ContentWidth="36" ContentHeight="36" Text="{DynamicResource S.Options.Recorder.Cache}" Padding="5" Icon="{StaticResource Vector.Cabinet}" 
                                                               IsChecked="{Binding Path=UseMemoryCache, Mode=TwoWay}" ToolTip="{DynamicResource S.Options.Recorder.Cache.Info}"/>
                                    </Grid>
                                </WrapPanel>

                                <WrapPanel Margin="0,0,5,5" Visibility="{Binding Path=UseMemoryCache, Mode=OneWay, Converter={StaticResource Bool2Visibility}}">
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Compression}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="CompressionComboBox" MinWidth="120" VerticalAlignment="Center"
                                              SelectedIndex="{Binding Path=CaptureCompression, Converter={StaticResource EnumToInt}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBoxItem Content="{DynamicResource S.Options.Recorder.Compression.Optimal}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.Recorder.Compression.Fastest}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.Recorder.Compression.NoCompression}"/>
                                    </ComboBox>

                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Compression.Optimal.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" 
                                               Foreground="{DynamicResource Element.Foreground.Gray150}" Visibility="{Binding ElementName=CompressionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=0}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Compression.Fastest.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" 
                                               Foreground="{DynamicResource Element.Foreground.Gray150}" Visibility="{Binding ElementName=CompressionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=1}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.Compression.NoCompression.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" 
                                               Foreground="{DynamicResource Element.Foreground.Gray150}" Visibility="{Binding ElementName=CompressionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=2}"/>
                                </WrapPanel>

                                <WrapPanel Margin="0,0,5,5" Visibility="{Binding Path=UseMemoryCache, Mode=OneWay, Converter={StaticResource Bool2Visibility}}">
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.CacheSize}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,0" VerticalAlignment="Center"/>
                                    <n:DoubleUpDown Minimum="1" Maximum="200" Value="{Binding Path=MemoryCacheSize, Mode=TwoWay}" MinWidth="80"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.CacheSize.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.PreventBlackFrames}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=PreventBlackFrames, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Recorder.PreventBlackFrames.Info}">
                                    <n:ExtendedCheckBox.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolAndToVisibility}">
                                            <Binding Path="UseMemoryCache" Mode="OneWay"/>
                                            <Binding Path="UseDesktopDuplication" Mode="OneWay" Converter="{StaticResource InvertedBool}"/>
                                        </MultiBinding>
                                    </n:ExtendedCheckBox.Visibility>
                                </n:ExtendedCheckBox>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.RecordMouse}" Margin="5,3" IsChecked="{Binding Path=ShowCursor, Mode=TwoWay}"/>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.ForceGarbageCollection}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=ForceGarbageCollection, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Recorder.ForceGarbageCollection.Info}"/>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.RemoteImprovement}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=RemoteImprovement, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Recorder.RemoteImprovement.Info}" Visibility="{Binding Path=UseDesktopDuplication, Mode=OneWay, Converter={StaticResource InvertedBoolToVisibility}}"/>
                            </StackPanel>
                        </Expander>

                        <Expander Grid.Row="3" Header="{DynamicResource S.Options.Recorder.Guidelines}" IsExpanded="False">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ExtendedToggleButton Grid.Row="0" Grid.Column="0" x:Name="GuidelineThirdsToggleButton" ContentHeight="30" ContentWidth="40" Style="{StaticResource Style.ToggleButton.NoBorder}"
                                                        Text="{DynamicResource S.Options.Recorder.Guidelines.RuleOfThirds}" Padding="10" Margin="0,0,0,5" HorizontalAlignment="Center" Icon="{StaticResource Vector.Guideline.Thirds}"
                                                        IsChecked="{Binding DisplayThirdsGuideline, Mode=TwoWay}" ToolTip="{DynamicResource S.Options.Recorder.Guidelines.RuleOfThirds.Info}"/>

                                <Grid Grid.Row="1" Grid.Column="0" IsEnabled="{Binding DisplayThirdsGuideline, Mode=OneWay}" HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Caption.Thickness}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <n:DoubleUpDown Grid.Row="0" Grid.Column="1" Margin="5,3" Value="{Binding ThirdsGuidelineThickness, Mode=TwoWay}" 
                                                    Minimum="0.5" Maximum="5" MinWidth="80" HorizontalAlignment="Left"/>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource S.Caption.Color}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <n:ColorBox Grid.Row="1" Grid.Column="1" Margin="5,3" SelectedColor="{Binding ThirdsGuidelineColor, Mode=TwoWay}" MinWidth="80" HorizontalAlignment="Left"/>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource S.Shapes.Shapes.Dashes}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <n:ExtendedTextBox Grid.Row="2" Grid.Column="1" Margin="5,3" AllowedCharacters="0123456789 " MinWidth="80" HorizontalAlignment="Left"
                                                       Text="{Binding ThirdsGuidelineStrokeDashArray}" ToolTip="{DynamicResource S.Shapes.Shapes.Dashes.Info}"/>
                                </Grid>

                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Text="{DynamicResource S.AndOr}" Foreground="{DynamicResource Element.Foreground.Medium}"/>

                                <Separator Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Width="1" HorizontalAlignment="Center"/>

                                <n:ExtendedToggleButton Grid.Row="0" Grid.Column="1" x:Name="GuidelineCrosshairToggleButton" ContentHeight="30" ContentWidth="40" Style="{StaticResource Style.ToggleButton.NoBorder}"
                                                        Text="{DynamicResource S.Options.Recorder.Guidelines.Crosshair}" Padding="10" Margin="0,0,0,5" HorizontalAlignment="Center" Icon="{StaticResource Vector.Guideline.Crosshair}"
                                                        IsChecked="{Binding DisplayCrosshairGuideline, Mode=TwoWay}" ToolTip="{DynamicResource S.Options.Recorder.Guidelines.Crosshair.Info}"/>

                                <Grid Grid.Row="1" Grid.Column="1" IsEnabled="{Binding DisplayCrosshairGuideline, Mode=OneWay}" HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Caption.Thickness}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <n:DoubleUpDown Grid.Row="0" Grid.Column="1" Margin="5,3" Value="{Binding CrosshairGuidelineThickness, Mode=TwoWay}" 
                                                    Minimum="0.5" Maximum="5" MinWidth="80" HorizontalAlignment="Left"/>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource S.Caption.Color}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <n:ColorBox Grid.Row="1" Grid.Column="1" Margin="5,3" SelectedColor="{Binding CrosshairGuidelineColor, Mode=TwoWay}" MinWidth="80" HorizontalAlignment="Left"/>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource S.Shapes.Shapes.Dashes}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <n:ExtendedTextBox Grid.Row="2" Grid.Column="1" Margin="5,3" AllowedCharacters="0123456789 " MinWidth="80" HorizontalAlignment="Left"
                                                       Text="{Binding CrosshairGuidelineStrokeDashArray}" ToolTip="{DynamicResource S.Shapes.Shapes.Dashes.Info}"/>
                                </Grid>

                                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,10,5,0" HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.Column="0" Width="15" Height="15" Background="{StaticResource Vector.Info}" Opacity="{DynamicResource Element.Opacity}"/>
                                    <TextBlock Grid.Column="1" Text="{DynamicResource S.Options.Recorder.Guidelines.Info}" Foreground="{DynamicResource Element.Foreground.Detail}" 
                                               Padding="3" TextWrapping="WrapWithOverflow"/>
                                </Grid>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="4" Header="{DynamicResource S.Options.Other}" IsExpanded="True">
                            <StackPanel Margin="10,0,0,0">
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.RememberSize}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=RecorderRememberSize, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.RememberPosition}" Margin="25,3,5,3" VerticalAlignment="Top" IsChecked="{Binding Path=RecorderRememberPosition, Mode=TwoWay}"
                                                    IsEnabled="{Binding RecorderRememberSize, Mode=OneWay}" UncheckOnDisable="True"/>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.PreStart}" Margin="5,3" IsChecked="{Binding Path=UsePreStart, Mode=TwoWay}"/>
                                <WrapPanel Margin="20,3,5,3" Visibility="{Binding UsePreStart, Converter={StaticResource Bool2Visibility}}">
                                    <n:IntegerUpDown Minimum="2" Maximum="15" MinWidth="50" Value="{Binding Source={x:Static t:UserSettings.All}, Path=PreStartValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.PreStart.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.CursorFollowing}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=CursorFollowing, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Recorder.CursorFollowing.Info}"/>

                                <WrapPanel Margin="20,3,5,3" Visibility="{Binding CursorFollowing, Converter={StaticResource Bool2Visibility}}">
                                    <n:IntegerUpDown Minimum="2" Maximum="100" MinWidth="50" Value="{Binding Source={x:Static t:UserSettings.All}, Path=FollowBuffer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.FollowMargin.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>
                                <WrapPanel Margin="20,3,5,3" Visibility="{Binding CursorFollowing, Converter={StaticResource Bool2Visibility}}">
                                    <n:IntegerUpDown Minimum="2" Maximum="100" MinWidth="50" Value="{Binding Source={x:Static t:UserSettings.All}, Path=FollowBufferInvisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Recorder.FollowMarginInvisible.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Recorder.NotifyRecordingDiscard}" Margin="5,3" VerticalAlignment="Top" IsChecked="{Binding Path=NotifyRecordingDiscard, Mode=TwoWay}"/>
                            </StackPanel>
                        </Expander>
                    </Grid>

                    <!--Editor-->
                    <StackPanel x:Name="EditorPanel" Visibility="{Binding IsChecked, ElementName=EditorRadio, Converter={StaticResource Bool2Visibility}}" Loaded="EditorPanel_Loaded">
                        <Expander Header="{DynamicResource S.Options.Editor.Previewer}" IsExpanded="True">
                            <StackPanel Margin="10,0,5,0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="{DynamicResource S.Options.App.Theme.Scheme}" Foreground="{DynamicResource Element.Foreground.Medium}" 
                                               Padding="2,0,5,0" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" Grid.Row="0" x:Name="ColorSchemesComboBox" Height="28" VerticalContentAlignment="Center" Padding="5,0" Margin="0,3" 
                                              SelectionChanged="ColorSchemesComboBox_SelectionChanged">
                                        <ComboBox.Items>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FFF5F5F5" Width="20" Height="20"/>
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FFF0F0F0" Width="20" Height="20"/>
                                                <Label Content="{DynamicResource S.Options.App.Theme.Scheme.VeryLight}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="White" Width="20" Height="20"/>
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FFD3D3D3" Width="20" Height="20"/>
                                                <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Light}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FF999999" Width="20" Height="20"/>
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FF666666" Width="20" Height="20"/>
                                                <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Medium}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FF323232" Width="20" Height="20"/>
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FF2D2D2D" Width="20" Height="20"/>
                                                <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Dark}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Background="#FFF5F5F5" Width="20" Height="20"/>
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Background="#FF2D2D2D" Width="20" Height="20"/>
                                                <Label Content="{DynamicResource S.Options.App.Theme.Scheme.FollowSystem}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <Separator Height="1"/>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="1,1,0,1" Width="20" Height="20">
                                                    <Label Content="?" Padding="0" HorizontalContentAlignment="Center" Foreground="{DynamicResource Element.Foreground.Medium}" FontSize="14"/>
                                                </Border>
                                                <Border BorderBrush="{DynamicResource Element.Border}" BorderThickness="0,1,1,1" Width="20" Height="20">
                                                    <Label Content="?" Padding="0" HorizontalContentAlignment="Center" FontSize="14" Foreground="{DynamicResource Element.Foreground}"/>
                                                </Border>
                                                <Label Content="{DynamicResource S.Options.App.Theme.Scheme.Custom}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                        </ComboBox.Items>
                                    </ComboBox>

                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{DynamicResource S.Options.Editor.Previewer.GridSize}" Foreground="{DynamicResource Element.Foreground.Medium}" 
                                               Padding="2,0,5,0" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" Grid.Row="1" x:Name="GridSizeComboBox" Height="28" Tag="Editor" VerticalContentAlignment="Center" Padding="5,0" Margin="0,3" 
                                              SelectionChanged="GridSizeComboBox_SelectionChanged">
                                        <ComboBox.Items>
                                            <StackPanel x:Name="VerySmallPanel" Orientation="Horizontal">
                                                <Label Content="10 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.VerySmall}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel x:Name="SmallPanel" Orientation="Horizontal">
                                                <Label Content="15 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.Small}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel x:Name="MediumSizePanel" Orientation="Horizontal">
                                                <Label Content="20 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.Medium}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel x:Name="LargePanel" Orientation="Horizontal">
                                                <Label Content="25 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.Large}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel x:Name="VeryLargePanel" Orientation="Horizontal">
                                                <Label Content="30 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.VeryLarge}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel x:Name="ILikeBigSquaresPanel" Orientation="Horizontal">
                                                <Label Content="50 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.ILikeBigSquares}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                            <StackPanel x:Name="ImBlindPanel" Orientation="Horizontal">
                                                <Label Content="100 pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.ImBlind}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0" FontWeight="Bold" FontSize="14"/>
                                            </StackPanel>
                                            <Separator/>
                                            <StackPanel x:Name="CustomSizePanel" Orientation="Horizontal">
                                                <Label Content="? pt" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" Width="41" HorizontalContentAlignment="Center" Padding="0,3"/>
                                                <Label Content="{DynamicResource S.Options.Editor.Previewer.GridSize.Custom}" Foreground="{DynamicResource Element.Foreground}" VerticalAlignment="Center" 
                                                       VerticalContentAlignment="Center" Padding="10,0,5,0"/>
                                            </StackPanel>
                                        </ComboBox.Items>
                                    </ComboBox>
                                </Grid>

                                <Grid Margin="0,3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ColorBox Grid.Column="0" x:Name="EvenColorBox" Height="40" SelectedColor="{Binding GridColor1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Tag="Editor"
                                                ToolTip="{DynamicResource S.Options.Editor.Previewer.EvenColor}" ToolTipService.Placement="Bottom" ColorChanged="ColorBox_ColorChanged"/>

                                    <n:ColorBox Grid.Column="1" x:Name="OddColorBox" Height="40" SelectedColor="{Binding GridColor2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Tag="Editor"
                                                ToolTip="{DynamicResource S.Options.Editor.Previewer.OddColor}" ToolTipService.Placement="Bottom" BorderThickness="0,1" ColorChanged="ColorBox_ColorChanged"/>

                                    <Border x:Name="GridSizeBorder" Grid.Column="2" BorderThickness="1" BorderBrush="{DynamicResource Element.Border}"
                                            Background="{StaticResource Checker.DrawingBrush}" Cursor="Hand" MouseLeftButtonDown="GridSizeBorder_MouseLeftButtonDown"
                                            ToolTip="{DynamicResource S.Options.Editor.Previewer.GridSize}" ToolTipService.Placement="Bottom"/>
                                </Grid>

                                <Grid x:Name="GridSizeGrid" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource Vector.WidthHeight}" Height="23" Width="23" Margin="3" Opacity="{DynamicResource Element.Opacity}"/>

                                    <TextBlock Grid.Column="1" Text="{DynamicResource S.Options.Editor.Previewer.GridSize.Height}" Padding="5" VerticalAlignment="Center" Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <n:IntegerUpDown Grid.Column="2" x:Name="GridHeightIntegerUpDown" Minimum="1" Maximum="1000" Margin="5,3" UpdateOnInput="True" Tag="Editor" ValueChanged="GridSizeIntegerUpDown_ValueChanged"/>

                                    <TextBlock Grid.Column="3" Text="{DynamicResource S.Options.Editor.Previewer.GridSize.Width}" Padding="5" VerticalAlignment="Center" Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <n:IntegerUpDown Grid.Column="4" x:Name="GridWidthIntegerUpDown" Minimum="1" Maximum="1000" Margin="5,3" UpdateOnInput="True" Tag="Editor" ValueChanged="GridSizeIntegerUpDown_ValueChanged"/>

                                    <n:ExtendedButton Grid.Column="6" Text="{DynamicResource S.Options.Editor.Previewer.GridSize.Apply}" Icon="{StaticResource Vector.Ok}" Style="{StaticResource Style.Button.Horizontal}" 
                                                      Padding="2" ContentWidth="14" ContentHeight="14" Click="ApplySizeButton_Click"/>
                                    <n:ExtendedButton Grid.Column="7" Text="{DynamicResource S.Cancel}" Icon="{StaticResource Vector.Cancel}" Style="{StaticResource Style.Button.Horizontal}" 
                                                      Padding="2" ContentWidth="14" ContentHeight="14" Click="CancelSizeButton_Click"/>
                                </Grid>
                            </StackPanel>
                        </Expander>

                        <Expander Header="{DynamicResource S.Options.Recorder.Interface}" IsExpanded="True">
                            <StackPanel Margin="10,0,5,0">
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.Interface.DisplayEncoder}" Margin="0,3" IsChecked="{Binding Path=DisplayEncoder, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.Interface.ExtendChrome}" Margin="0,3" IsChecked="{Binding Path=EditorExtendChrome, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.Interface.AutomaticallySizeOnContent}" Margin="0,3" IsChecked="{Binding Path=AutomaticallySizeOnContent, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.Interface.AutomaticallyFitImage}" Margin="0,3" IsChecked="{Binding Path=AutomaticallyFitImage, Mode=TwoWay}"/>
                            </StackPanel>
                        </Expander>

                        <Expander Header="{DynamicResource S.Options.App.General}" IsExpanded="True">
                            <StackPanel Margin="10,0,5,0">
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.NotifyFrameDeletion}" Margin="0,3" IsChecked="{Binding Path=NotifyFrameDeletion, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.NotifyProjectDiscard}" Margin="0,3" IsChecked="{Binding Path=NotifyProjectDiscard, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.NotifyWhileClosingEditor}" Margin="0,3" IsChecked="{Binding Path=NotifyWhileClosingEditor, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.TripleClickSelection}" Margin="0,3" IsChecked="{Binding Path=TripleClickSelection, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.DrawOutlineOutside}" Margin="0,3" IsChecked="{Binding Path=DrawOutlineOutside, Mode=TwoWay}"/>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.DropFramesDuringPreviewIfBehind}" Margin="0,3" IsChecked="{Binding Path=DropFramesDuringPreviewIfBehind, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Editor.General.DropFramesDuringPreviewIfBehind.Info}"/>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.LimitHistory}" Margin="0,3" VerticalAlignment="Top" IsChecked="{Binding Path=SetHistoryLimit, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Editor.General.LimitHistory.Info}"/>

                                <WrapPanel Margin="10,3,5,3" Visibility="{Binding SetHistoryLimit, Converter={StaticResource Bool2Visibility}}">
                                    <n:IntegerUpDown Minimum="0" Maximum="150" MinWidth="50" Value="{Binding Source={x:Static t:UserSettings.All}, Path=HistoryLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Editor.General.LimitHistory.Maximum}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" 
                                               Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.SyncPath.Folder}" Margin="0,3" VerticalAlignment="Top" IsChecked="{Binding Path=SyncPathFolder, Mode=TwoWay}"
                                                    Info="{DynamicResource S.Options.Editor.General.SyncPath.Folder.Info}"/>

                                <StackPanel Margin="10,0,5,0" IsEnabled="{Binding SyncPathFolder, Mode=OneWay}">
                                    <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.SyncPath.Filename}" Margin="0,3" VerticalAlignment="Top" IsChecked="{Binding Path=SyncPathFilename, Mode=TwoWay}"
                                                        Info="{DynamicResource S.Options.Editor.General.SyncPath.Filename.Info}"/>

                                    <n:ExtendedCheckBox Text="{DynamicResource S.Options.Editor.General.SyncPath.SameType}" Margin="0,3" VerticalAlignment="Top" IsChecked="{Binding Path=SyncPathForSameType, Mode=TwoWay}"
                                                        Info="{DynamicResource S.Options.Editor.General.SyncPath.SameType.Info}"/>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </StackPanel>

                    <!--Tasks-->
                    <Grid x:Name="TasksPanel" Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=AutomaticRadio}" Loaded="TasksPanel_Loaded">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.CommandBindings>
                            <CommandBinding Command="{StaticResource Command.MoveUp}" CanExecute="MoveUp_CanExecute" Executed="MoveUp_Executed"/>
                            <CommandBinding Command="{StaticResource Command.MoveDown}" CanExecute="MoveDown_CanExecute" Executed="MoveDown_Executed"/>
                            <CommandBinding Command="{StaticResource Command.Add}" CanExecute="Add_CanExecute" Executed="Add_Executed"/>
                            <CommandBinding x:Name="EditCommandBinding" Command="{StaticResource Command.Edit}" CanExecute="Remove_CanExecute" Executed="Edit_Executed"/>
                            <CommandBinding Command="{StaticResource Command.Remove}" CanExecute="Remove_CanExecute" Executed="Remove_Executed"/>
                        </Grid.CommandBindings>

                        <n:LabelSeparator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Tasks.List}"/>
                        <DataGrid Grid.Row="1" Grid.Column="0" Grid.RowSpan="6" x:Name="TasksDataGrid" Margin="10,5,5,5" MinHeight="60" SelectionMode="Single" SelectionUnit="FullRow" CanUserSortColumns="False"
                                  MouseDoubleClick="TasksDataGrid_MouseDoubleClick" PreviewKeyDown="TasksDataGrid_PreviewKeyDown">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="{DynamicResource S.Options.Tasks.List.Enabled}" Width="Auto" MinWidth="50">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <n:ExtendedCheckBox IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" Focusable="False" Margin="0,2,0,0" Padding="0"
                                                                Content="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Header="{DynamicResource S.Options.Tasks.List.Task}" Width="Auto" MinWidth="110" IsReadOnly="True" Binding="{Binding Kind, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="{DynamicResource S.Options.Tasks.List.Details}" Width="*" IsReadOnly="True" Binding="{Binding Details, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <n:ExtendedButton Grid.Row="1" Grid.Column="1" x:Name="UpButton" Margin="3,5" Icon="{StaticResource Vector.Arrow.Blue.Top}" ContentWidth="18" ContentHeight="18"
                                          Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.MoveUp}"
                                          ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                          ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                        <n:ExtendedButton Grid.Row="2" Grid.Column="1" x:Name="DownButton" Margin="3,5" Icon="{StaticResource Vector.Arrow.Blue.Bottom}" ContentWidth="18" ContentHeight="18"
                                          Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.MoveDown}"
                                          ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                          ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                        <n:ExtendedButton Grid.Row="3" Grid.Column="1" x:Name="AddButton" Margin="3,5" Icon="{StaticResource Vector.Add}" ContentWidth="18" ContentHeight="18"
                                          Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.Add}"
                                          ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                          ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                        <n:ExtendedButton Grid.Row="4" Grid.Column="1" x:Name="EditButton" Margin="3,5" Icon="{StaticResource Vector.Pen}" ContentWidth="18" ContentHeight="18"
                                          Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.Edit}"
                                          ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                          ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                        <n:ExtendedButton Grid.Row="5" Grid.Column="1" x:Name="RemoveButton" Margin="3,5" Icon="{StaticResource Vector.Remove}" ContentWidth="18" ContentHeight="18"
                                          Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.Remove}"
                                          ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                          ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                        <TextBlock Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Tasks.Info}" Padding="0" Margin="3" HorizontalAlignment="Center" TextWrapping="Wrap" 
                                   Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                    </Grid>

                    <!--Shortcuts-->
                    <StackPanel x:Name="ShortcutsPanel" Visibility="{Binding IsChecked, ElementName=ShortcutsRadio, Converter={StaticResource Bool2Visibility}}"
                                IsVisibleChanged="ShortcutsPanel_IsVisibleChanged">
                        <n:LabelSeparator Text="{DynamicResource S.Options.Shortcuts.Global}"/>
                        <Grid Margin="10,3,5,3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto" MinWidth="80"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Global.ScreenRecorder}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="0" Grid.Column="1" x:Name="RecorderKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding RecorderShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ModifierKeys="{Binding RecorderModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Globals_OnKeyChanged"/>
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Global.ScreenRecorder.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Global.WebcamRecorder}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="1" Grid.Column="1" x:Name="WebcamKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding WebcamRecorderShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ModifierKeys="{Binding WebcamRecorderModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Globals_OnKeyChanged"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Global.WebcamRecorder.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Global.BoardRecorder}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="2" Grid.Column="1" x:Name="BoardKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding BoardRecorderShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ModifierKeys="{Binding BoardRecorderModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Globals_OnKeyChanged"/>
                            <TextBlock Grid.Row="2" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Global.BoardRecorder.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Global.OpenEditor}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="3" Grid.Column="1" x:Name="EditorKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding EditorShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ModifierKeys="{Binding EditorModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Globals_OnKeyChanged"/>
                            <TextBlock Grid.Row="3" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Global.OpenEditor.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Global.OpenOptions}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="4" Grid.Column="1" x:Name="OptionsKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding OptionsShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ModifierKeys="{Binding OptionsModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Globals_OnKeyChanged"/>
                            <TextBlock Grid.Row="4" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Global.OpenOptions.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="5" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Global.Exit}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="5" Grid.Column="1" x:Name="ExitKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding ExitShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ModifierKeys="{Binding ExitModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Globals_OnKeyChanged"/>
                            <TextBlock Grid.Row="5" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Global.Exit.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                        </Grid>

                        <n:LabelSeparator Text="{DynamicResource S.Options.Shortcuts.Recorders}"/>
                        <Grid Margin="10,3,5,3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto" MinWidth="80"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Recorders.StartPause}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="0" Grid.Column="1" x:Name="StartKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding StartPauseShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ModifierKeys="{Binding StartPauseModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Recorders_OnKeyChanged"/>
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Recorders.StartPause.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Recorders.Stop}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="1" Grid.Column="1" x:Name="StopKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding StopShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ModifierKeys="{Binding StopModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Recorders_OnKeyChanged"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Recorders.Stop.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Recorders.Discard}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="2" Grid.Column="1" x:Name="DiscardKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding DiscardShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ModifierKeys="{Binding DiscardModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Recorders_OnKeyChanged"/>
                            <TextBlock Grid.Row="2" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Recorders.Discard.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Recorders.Follow}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="3" Grid.Column="1" x:Name="FollowKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      MainKey="{Binding FollowShortcut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ModifierKeys="{Binding FollowModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyChanged="Recorders_OnKeyChanged"/>
                            <TextBlock Grid.Row="3" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Recorders.Follow.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource S.Options.Shortcuts.Recorders.DisableFollow}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="5,4" VerticalAlignment="Center"/>
                            <n:KeyBox Grid.Row="4" Grid.Column="1" x:Name="DisableFollowKeyBox" Height="23" Margin="3" VerticalAlignment="Center" 
                                      ModifierKeys="{Binding DisableFollowModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" OnlyModifiers="True"
                                      KeyChanged="Recorders_OnKeyChanged"/>
                            <TextBlock Grid.Row="4" Grid.Column="2" Text="{DynamicResource S.Options.Shortcuts.Recorders.DisableFollow.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                        </Grid>
                    </StackPanel>

                    <!--Language-->
                    <Grid Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=LanguageRadio}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <n:LabelSeparator Text="{DynamicResource S.Options.Language.AppLanguage}" Margin="0,0,0,5"/>

                        <ListBox Grid.Row="1" x:Name="LanguagePanel" VerticalContentAlignment="Center" Margin="10,0,0,5" SelectionChanged="LanguagePanel_SelectionChanged">
                            <ListBox.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <ResourceDictionary Source="/Resources/Flags.xaml"/>
                                    </ResourceDictionary.MergedDictionaries>

                                    <c:TagToSelection x:Key="TagToSelection"/>
                                </ResourceDictionary>
                            </ListBox.Resources>

                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter/>
                                </ControlTemplate>
                            </ListBox.Template>

                            <n:ExtendedListBoxItem Icon="{StaticResource Vector.Info}" Tag="auto" Content="{DynamicResource S.Options.Language.AppLanguage.AutoDetect}" Author="{DynamicResource S.Options.Language.AppLanguage.AutoDetect.Author}" 
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=auto, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.SaudiArabia}" Tag="ar" Content="Arabic / العربية" Author="Alan"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=ar, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.China}" Tag="zh" Content="Chinese (Simplified) / 简体中文" Author="Joel Yang, HiSen, Jeffiy, EMLVIRUS, 王晨旭, Wen Peng"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=zh, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Taiwan}" Tag="zh-Hant" Content="Chinese (Traditional) / 繁體中文（台灣）" Author="Jerry Lum, Danfong Hsieh, Tse Zinno"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=zh-Hant, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.CzechRepublic}" Tag="cs" Content="Czech / Čeština" Author="PePav"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=cs, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Denmark}" Tag="da" Content="Danish / Dansk" Author="Regmos"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=da, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Netherlands}" Tag="nl" Content="Dutch / Nederlands" Author="Stephan Paternotte, Jasper Verweij"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=nl, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.UnitedKingdom}" Tag="en" Content="English" Author="Nicke Manarin" 
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=en, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Finland}" Tag="fi" Content="Finnish / Suomi" Author="VeikkoM"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=fi, Converter={StaticResource TagToSelection}}"/>
                            
                            <n:ExtendedListBoxItem Image="{StaticResource Flag.France}" Tag="fr" Content="French / Français" Author="Largo, Sébastien 'Tr4ncer' Villemain, Adrick"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=fr, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Germany}" Tag="de" Content="German / Deutsch" Author="Mr-Update, Andy Kleinert, PeterK., Christoph Voigt, Michael Reukauff"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=de, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Greece}" Tag="el" Content="Greek / Ελληνικά" Author="Χρήστος Μητσιάρης"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=el, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Israel}" Tag="he" Content="Hebrew / עברי" Author="Elishy"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=he, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Hungary}" Tag="hu" Content="Hungarian / Magyar" Author="László Földes, György Kőszeg"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=hu, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Italy}" Tag="it" Content="Italian / Italiano" Author="HispidaBytes, Michele Locati, Giovanni Rinaldin"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=it, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Japan}" Tag="ja" Content="Japanese / 日本語" Author="Tokinori Shimodaira, Seaeees, oxosi, Toshio, Winston, Chihiro Watanabe"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=ja, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.SouthKorea}" Tag="ko" Content="Korean / 한국어" Author="hoho, Manbok, Lytie"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=ko, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Poland}" Tag="pl" Content="Polish / Polski" Author="Michał Stojke, Sebastian Pietras, Jakub Bazgier" 
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=pl, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Brazil}" Tag="pt" Content="Portuguese / Português" Author="Nicke Manarin" 
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=pt, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Portugal}" Tag="pt-PT" Content="Portuguese (Portugal) / Português (Portugal)" Author="Duarte Ramos" 
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=pt-PT, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Turkey}" Tag="tr" Content="Turkish / Türkçe" Author="Volkan Dağdelen, seferciogluecce, Omer Mollamehmetoglu, Bekir"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=tr, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Argentina}" Tag="es-AR" Content="Spanish (Argentina) / Español (Argentina)" Author="KNTRO (kntro@msn.com)"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=es-AR, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Spain}" Tag="es" Content="Spanish / Español" Author="codedeep, Zabb"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=es, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.EastAfricanCommunity}" Tag="sw" Content="Swahili / Kiswahili" Author="Mara Gati Lucky"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=sw, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Sweden}" Tag="sv" Content="Swedish / Svenska" Author="Sopor, Andreas Johansson"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=sv, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Russia}" Tag="ru" Content="Russian / Русский" Author="wvxwxvw, Zoltanleo, Qwitriy, ralienpp, Nivalis, Yuri Komar, Vadim Velezhenko"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=ru, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Ukraine}" Tag="uk" Content="Ukrainian / українська" Author="Andrey Ìlečko"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=uk, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Flag.Vietnam}" Tag="vi" Content="Vietnamese / Tiếng Việt" Author="Đỗ Quang Hưng"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=vi, Converter={StaticResource TagToSelection}}"/>

                            <!--<n:ExtendedListBoxItem Image="{StaticResource Greece}" Tag="el" Content="Greek" Author="No Author"
                                                       ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=el, Converter={StaticResource TagToSelection}}"/>

                            <n:ExtendedListBoxItem Image="{StaticResource Romania}" Tag="ro" Content="Romanian" Author="No Author"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=ro, Converter={StaticResource TagToSelection}}"/>
 
                            <n:ExtendedListBoxItem Image="{StaticResource India}" Tag="ta" Content="Tamil" Author="No Author"
                                                   ContentWidth="25" ContentHeight="25" IsSelected="{Binding LanguageCode, ConverterParameter=ta, Converter={StaticResource TagToSelection}}"/>-->
                        </ListBox>

                        <TextBlock Grid.Row="2" x:Name="TranslateHyperlink" FontSize="12" FontFamily="Segoe UI Semilight" TextWrapping="WrapWithOverflow" Padding="2">
                            <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence1.1}" Foreground="{DynamicResource Element.Foreground}"/>
                            <Hyperlink Click="TranslateHyperlink_OnClick" ToolTip="{DynamicResource S.Options.Language.AppLanguage.Translate.ResourceLink.Tooltip}" Cursor="Hand">
                                <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence1.2}"/>
                            </Hyperlink>
                            <LineBreak/>
                            <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence2.1}" Foreground="{DynamicResource Element.Foreground}"/>
                            <Hyperlink Click="ImportHyperlink_OnClick" ToolTip="{DynamicResource S.Options.Language.AppLanguage.Translate.ImportLink.Tooltip}" Cursor="Hand">
                                <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence2.2}"/>
                            </Hyperlink>
                            <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence2.3}" Foreground="{DynamicResource Element.Foreground}"/>
                            <LineBreak/>
                            <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence3.1}" Foreground="{DynamicResource Element.Foreground}"/>
                            <Hyperlink Click="EmailHyperlink_OnClick" ToolTip="{DynamicResource S.Options.Language.AppLanguage.Translate.EmailLink.Tooltip}" Cursor="Hand">
                                <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence3.2}"/>
                            </Hyperlink>
                            <Run Text="{DynamicResource S.Options.Language.AppLanguage.Translate.Sentence3.3}" Foreground="{DynamicResource Element.Foreground}"/>
                        </TextBlock>
                    </Grid>

                    <!--Storage-->
                    <Grid x:Name="TempPanel" Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=TempRadio}" 
                          IsVisibleChanged="TempPanel_IsVisibleChanged">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Expander Grid.Row="0" Header="{DynamicResource S.Options.Storage.Status}" IsExpanded="True">
                            <Grid Margin="10,0,5,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Options.Storage.Status.Volume}" Padding="0" Margin="5,0" VerticalAlignment="Center" TextWrapping="Wrap" 
                                           Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" x:Name="VolumeTextBlock" Text="New Volume (C:)" Padding="0" Margin="0,0,5,0" VerticalAlignment="Center" TextWrapping="Wrap" 
                                           Foreground="{DynamicResource Element.Foreground.Gray112}"/>

                                <TextBlock Grid.Row="0" Grid.Column="2" x:Name="FreeSpaceTextBlock" Text="{DynamicResource S.Options.Storage.Status.FreeSpace}" Padding="0" Margin="5,0" VerticalAlignment="Center" HorizontalAlignment="Right"
                                           TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray112}"/>

                                <n:ExtendedProgressBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" x:Name="StatusProgressBar" Height="20" Value="50" Maximum="100" Margin="3" State="Info" ShowPercentage="True"/>

                                <n:ExtendedButton Grid.Row="1" Grid.Column="3" x:Name="CheckCacheButton" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Repeat}" ContentWidth="20" ContentHeight="20"
                                                  ToolTip="{DynamicResource S.Options.Storage.Status.Check}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Command="{StaticResource Command.CheckCache}"/>
                                <n:ExtendedButton Grid.Row="1" Grid.Column="4" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Delete.Folder}" ContentWidth="20" ContentHeight="20"
                                                  ToolTip="{DynamicResource S.Options.Storage.Status.Clear}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Command="{StaticResource Command.ClearCache}"/>

                                <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" x:Name="LowSpaceTextBlock" Text="{DynamicResource S.Options.Storage.Status.LowSpace}" Padding="0" Margin="5,3" 
                                           VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Brush.ProgressBar.Danger}" Visibility="Collapsed"/>

                                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="FilesTextBlock" Padding="0" Margin="5,3" Visibility="Collapsed"
                                           VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray112}">
                                    <Run x:Name="FoldersRun" Text="100 folders"/>
                                    <Run Text="•"/>
                                    <Run x:Name="FilesRun" Text="300 files"/>
                                    <Run Text="•"/>
                                    <Run x:Name="UsedSpaceRun" Text="10 GB in use"/>
                                </TextBlock>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="1" Header="{DynamicResource S.Options.Storage.Paths}" IsExpanded="True">
                            <Grid Margin="10,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Options.Storage.Paths.Cache}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,5,0" VerticalAlignment="Center"/>
                                <n:ExtendedTextBox Grid.Row="0" Grid.Column="1" x:Name="CacheTextBox" Margin="0,3" Text="{Binding TemporaryFolder, Source={x:Static t:UserSettings.All}, UpdateSourceTrigger=PropertyChanged}" 
                                                   IsEnabled="{Binding ElementName=CheckCacheButton, Path=IsEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" LostFocus="CacheTextBox_LostFocus"/>

                                <n:ExtendedButton Grid.Row="0" Grid.Column="2" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Open}" ContentWidth="20" ContentHeight="20"
                                                  ToolTip="{DynamicResource S.Options.Storage.Paths.Cache.Choose}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Click="ChooseCachePath_Click"/>
                                <n:ExtendedButton Grid.Row="0" Grid.Column="3" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Forward}" ContentWidth="20" ContentHeight="20"
                                                  ToolTip="{DynamicResource S.Options.Storage.Paths.Browse}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Command="{StaticResource Command.BrowseCache}"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource S.Options.Storage.Paths.Logs}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="2,0,5,0" VerticalAlignment="Center"/>
                                <n:ExtendedTextBox Grid.Row="1" Grid.Column="1" Margin="0,3" Text="{Binding LogsFolder, Source={x:Static t:UserSettings.All}}"/>

                                <n:ExtendedButton Grid.Row="1" Grid.Column="2" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Open}" ContentWidth="20" ContentHeight="20"
                                                  ToolTip="{DynamicResource S.Options.Storage.Paths.Logs.Choose}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Click="ChooseLogsPath_Click"/>
                                <n:ExtendedButton Grid.Row="1" Grid.Column="3" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Forward}" ContentWidth="20" ContentHeight="20"
                                                  ToolTip="{DynamicResource S.Options.Storage.Paths.Browse}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Command="{StaticResource Command.BrowseLogs}"/>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="2" Header="{DynamicResource S.Options.Storage.Settings}" IsExpanded="True">
                            <Grid Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Options.Storage.AppDataPath}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="3"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" x:Name="AppDataPathTextBlock" Text="..." Foreground="{DynamicResource Element.Foreground.Medium}" Padding="3" TextWrapping="Wrap" FontStyle="Italic"/>

                                <n:ExtendedButton Grid.Row="0" Grid.Column="3" x:Name="OpenAppDataButton" ToolTip="{DynamicResource S.Options.Storage.OpenSettingsFolder}" Style="{StaticResource Style.Button.NoText}"
                                                  Icon="{StaticResource Vector.Forward}" Padding="3" ContentWidth="18" ContentHeight="14" Command="{StaticResource Command.OpenAppDataSettings}"/>

                                <n:ExtendedButton Grid.Row="0" Grid.Column="4" x:Name="RemoveAppDataButton" ToolTip="{DynamicResource S.Options.Storage.RemoveSettings}" Style="{StaticResource Style.Button.NoText}"
                                                  Icon="{StaticResource Vector.Remove}" Padding="3" ContentWidth="18" ContentHeight="14" Command="{StaticResource Command.RemoveAppDataSettings}"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource S.Options.Storage.LocalPath}" Foreground="{DynamicResource Element.Foreground.Medium}" Padding="3"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" x:Name="LocalPathTextBlock" Text="..." Foreground="{DynamicResource Element.Foreground.Medium}" Padding="3" TextWrapping="Wrap" FontStyle="Italic"/>

                                <n:ExtendedButton Grid.Row="1" Grid.Column="2" x:Name="CreateLocalButton" ToolTip="{DynamicResource S.Options.Storage.CreateSettings}" Style="{StaticResource Style.Button.NoText}"
                                                  Icon="{StaticResource Vector.Add}" Padding="3" ContentHeight="18" ContentWidth="14" Command="{StaticResource Command.CreateLocalSettings}"/>

                                <n:ExtendedButton Grid.Row="1" Grid.Column="3" x:Name="OpenLocalButton" ToolTip="{DynamicResource S.Options.Storage.OpenSettingsFolder}" Style="{StaticResource Style.Button.NoText}"
                                                  Icon="{StaticResource Vector.Forward}" Padding="3" ContentWidth="18" ContentHeight="14" Command="{StaticResource Command.OpenLocalSettings}"/>

                                <n:ExtendedButton Grid.Row="1" Grid.Column="4" x:Name="RemoveLocalButton" ToolTip="{DynamicResource S.Options.Storage.RemoveSettings}" Style="{StaticResource Style.Button.NoText}"
                                                  Icon="{StaticResource Vector.Remove}" Padding="3" ContentWidth="18" ContentHeight="14" Command="{StaticResource Command.RemoveLocalSettings}"/>

                                <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" Text="{DynamicResource S.Options.Storage.SettingsInfo}" Foreground="{DynamicResource Element.Foreground.Medium}" 
                                           TextWrapping="Wrap" Padding="4,2" Margin="0,10,0,0"/>
                            </Grid>
                        </Expander>

                        <Expander Grid.Row="3" Header="{DynamicResource S.Options.Other}" IsExpanded="True">
                            <StackPanel>
                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Storage.DeleteEverything}" Margin="10,3,5,3"
                                                    IsChecked="{Binding Source={x:Static t:UserSettings.All}, Path=DeleteCacheWhenClosing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Storage.AskDeleteEverything}" Margin="30,3,5,3"
                                                    IsChecked="{Binding Source={x:Static t:UserSettings.All}, Path=AskDeleteCacheWhenClosing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Visibility="{Binding Source={x:Static t:UserSettings.All}, Path=DeleteCacheWhenClosing, Converter={StaticResource Bool2Visibility}}"/>

                                <n:ExtendedCheckBox Text="{DynamicResource S.Options.Storage.AutomaticRemoval}" Margin="10,3,5,3"
                                                    IsChecked="{Binding Source={x:Static t:UserSettings.All}, Path=AutomaticCleanUp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    ToolTip="{DynamicResource S.Options.Storage.AutomaticRemoval.Info}"/>

                                <WrapPanel Margin="30,3,5,3" Visibility="{Binding Source={x:Static t:UserSettings.All}, Path=AutomaticCleanUp, Converter={StaticResource Bool2Visibility}}">
                                    <n:IntegerUpDown Minimum="1" Maximum="30" MinWidth="50" Value="{Binding Source={x:Static t:UserSettings.All}, Path=AutomaticCleanUpDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{DynamicResource S.Options.Storage.AutomaticRemovalDays.Info}" Padding="0" Margin="5,0,0,0" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </WrapPanel>
                            </StackPanel>
                        </Expander>
                    </Grid>

                    <!--Cloud-->
                    <Grid x:Name="CloudGrid" Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=CloudRadioButton}" Loaded="CloudGrid_Loaded">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid.CommandBindings>
                            <CommandBinding Command="{StaticResource Command.Add}" CanExecute="AddUpload_CanExecute" Executed="AddUpload_Executed"/>
                            <CommandBinding x:Name="EditUploadCommandBinding" Command="{StaticResource Command.Edit}" CanExecute="Upload_CanExecute" Executed="EditUpload_Executed"/>
                            <CommandBinding Command="{StaticResource Command.Remove}" CanExecute="Upload_CanExecute" Executed="RemoveUpload_Executed"/>
                            <CommandBinding Command="{StaticResource Command.ViewHistory}" CanExecute="Upload_CanExecute" Executed="HistoryUpload_Executed"/>
                        </Grid.CommandBindings>

                        <Expander Grid.Row="0" Header="{DynamicResource S.Options.Upload.Proxy}" IsExpanded="True">
                            <DockPanel>
                                <Grid DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto" MinWidth="100"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto" MinWidth="160" MaxWidth="280"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="90"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{DynamicResource S.Options.Upload.Proxy.Mode}" VerticalAlignment="Center" Margin="5" Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <ComboBox Grid.Column="1" Margin="3" VerticalContentAlignment="Center" SelectedValuePath="Tag" SelectedValue="{Binding Source={x:Static t:UserSettings.All}, Path=ProxyMode}">
                                        <ComboBoxItem Content="{DynamicResource S.Options.Upload.Proxy.Mode.Disabled}" Tag="{x:Static e:ProxyTypes.Disabled}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.Upload.Proxy.Mode.Manual}" Tag="{x:Static e:ProxyTypes.Manual}"/>
                                        <ComboBoxItem Content="{DynamicResource S.Options.Upload.Proxy.Mode.System}" Tag="{x:Static e:ProxyTypes.System}"/>
                                    </ComboBox>

                                    <TextBlock Grid.Column="2" Text="{DynamicResource S.Options.Upload.Proxy.Host}" VerticalAlignment="Center" Margin="10,5,5,5" Visibility="{Binding ElementName=ProxyHostTextBox, Path=Visibility}"
                                               Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <n:ExtendedTextBox Grid.Column="3" x:Name="ProxyHostTextBox" Margin="5,3" VerticalContentAlignment="Center" TextWrapping="Wrap"
                                                       Text="{Binding ProxyHost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Visibility="{Binding ProxyMode, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static e:ProxyTypes.Manual}}"/>

                                    <TextBlock Grid.Column="4" Text="{DynamicResource S.Options.Upload.Proxy.Port}" VerticalAlignment="Center" Margin="10,5,5,5" Visibility="{Binding ElementName=ProxyHostTextBox, Path=Visibility}"
                                               Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <n:IntegerUpDown Grid.Column="5" Margin="5,3" Maximum="65535" Value="{Binding ProxyPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Visibility="{Binding ElementName=ProxyHostTextBox, Path=Visibility}"/>

                                    <TextBlock Grid.Column="2" Grid.ColumnSpan="5" Margin="5,3" Text="{DynamicResource S.Options.Upload.Proxy.Mode.System.Info}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                               Visibility="{Binding ProxyMode, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static e:ProxyTypes.System}}" 
                                               TextWrapping="Wrap" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                                </Grid>

                                <Grid DockPanel.Dock="Bottom" Visibility="{Binding ElementName=ProxyHostTextBox, Path=Visibility}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto" MinWidth="140" MaxWidth="200"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto" MinWidth="140" MaxWidth="200"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource S.Options.Upload.Proxy.User}" VerticalAlignment="Center" Margin="5" Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <n:ExtendedTextBox Grid.Row="0" Grid.Column="1" Margin="5,3" VerticalContentAlignment="Center" TextWrapping="Wrap"
                                                       Text="{Binding ProxyUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource S.Options.Upload.Proxy.Password}" VerticalAlignment="Center" Margin="10,5,5,5" Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                    <PasswordBox Grid.Row="0" Grid.Column="3" x:Name="ProxyPasswordBox" Margin="5,3" VerticalContentAlignment="Center"/>
                                </Grid>
                            </DockPanel>
                        </Expander>

                        <n:LabelSeparator Grid.Row="1" Text="{DynamicResource S.Options.Upload.Presets}"/>
                        <Grid Grid.Row="2" Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <DataGrid Grid.Row="0" Grid.Column="0" Grid.RowSpan="5" x:Name="UploadDataGrid" Margin="5" MinHeight="60" SelectionMode="Single" SelectionUnit="FullRow" CanUserSortColumns="False"
                                      MouseDoubleClick="UploadDataGrid_MouseDoubleClick" PreviewKeyDown="UploadDataGrid_PreviewKeyDown">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="{DynamicResource S.Options.Upload.Presets.Enabled}" Width="Auto" MinWidth="50">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <n:ExtendedCheckBox IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" Focusable="False" Margin="0,2,0,0" Padding="0"
                                                                    Content="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Header="{DynamicResource S.Options.Upload.Presets.Service}" Width="Auto" MinWidth="110" IsReadOnly="True" Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataGridTextColumn Header="{DynamicResource S.Options.Upload.Presets.Title}" Width="*" IsReadOnly="True" Binding="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DataGridTextColumn Header="{DynamicResource S.Options.Upload.Presets.Description}" Width="*" IsReadOnly="True" Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="1" x:Name="AddPresetButton" Margin="3,5" Icon="{StaticResource Vector.Add}" ContentWidth="18" ContentHeight="18"
                                              Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.Add}"
                                              ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                              ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                            <n:ExtendedButton Grid.Row="1" Grid.Column="1" x:Name="EditPresetButton" Margin="3,5" Icon="{StaticResource Vector.Pen}" ContentWidth="18" ContentHeight="18"
                                              Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.Edit}"
                                              ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                              ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                            <n:ExtendedButton Grid.Row="2" Grid.Column="1" x:Name="RemovePresetButton" Margin="3,5" Icon="{StaticResource Vector.Remove}" ContentWidth="18" ContentHeight="18"
                                              Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.Remove}"
                                              ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                              ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>

                            <n:ExtendedButton Grid.Row="3" Grid.Column="1" x:Name="HistoryPresetButton" Margin="3,5" Icon="{StaticResource Vector.Clock}" ContentWidth="18" ContentHeight="18"
                                              Style="{StaticResource Style.Button.NoText.Border}" MinWidth="30" MinHeight="30" Command="{StaticResource Command.ViewHistory}"
                                              ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureText}}" 
                                              ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <!--Extras-->
                    <Grid x:Name="ExtrasGrid" Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=ExtrasRadioButton}" Loaded="ExtrasGrid_Loaded">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="21"/>
                            <RowDefinition MinHeight="29" Height="Auto"/>
                            <RowDefinition Height="21"/>
                            <RowDefinition MinHeight="29" Height="Auto"/>
                            <RowDefinition Height="21"/>
                            <RowDefinition MinHeight="29" Height="Auto"/>
                            <RowDefinition Height="21"/>
                            <RowDefinition MinHeight="29" Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <n:LabelSeparator Grid.Row="0" Text="{DynamicResource S.Options.Extras.External}"/>
                        <Grid Grid.Row="1" Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:Card Grid.Column="0" x:Name="FfmpegImageCard" Header="FFmpeg" Margin="0" Click="FfmpegImageCard_Click"/>
                            <n:Card Grid.Column="1" x:Name="GifskiImageCard" Header="Gifski" Margin="0" Click="GifskiImageCard_Click"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="2" Text="{DynamicResource S.Options.Extras.FfmpegLocation}"/>
                        <Grid Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="FfmpegLocationTextBox" Margin="10,3,0,3" Text="{Binding FfmpegLocation, Source={x:Static t:UserSettings.All}, UpdateSourceTrigger=PropertyChanged}" 
                                               Tag="FFmpeg" LostKeyboardFocus="LocationTextBox_LostKeyboardFocus"/>

                            <n:ExtendedButton Grid.Column="1" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Open}" ContentWidth="20" ContentHeight="20"
                                              ToolTip="{DynamicResource S.Options.Extras.FfmpegLocation.Select}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Click="SelectFfmpeg_Click"/>

                            <n:ExtendedButton Grid.Column="2" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Forward}" ContentWidth="20" ContentHeight="20"
                                              ToolTip="{DynamicResource S.Options.Storage.Paths.Browse}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Command="{StaticResource Command.BrowseFfmpeg}"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="4" Text="{DynamicResource S.Options.Extras.GifskiLocation}"/>
                        <Grid Grid.Row="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedTextBox Grid.Column="0" x:Name="GifskiLocationTextBox" Margin="10,3,0,3" Text="{Binding GifskiLocation, Source={x:Static t:UserSettings.All}, UpdateSourceTrigger=PropertyChanged}" 
                                               Tag="Gifski" LostKeyboardFocus="LocationTextBox_LostKeyboardFocus"/>

                            <n:ExtendedButton Grid.Column="1" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Open}" ContentWidth="20" ContentHeight="20"
                                              ToolTip="{DynamicResource S.Options.Extras.GifskiLocation.Select}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Click="SelectGifski_Click"/>

                            <n:ExtendedButton Grid.Column="2" Style="{StaticResource Style.Button.NoText}" Icon="{StaticResource Vector.Forward}" ContentWidth="20" ContentHeight="20"
                                              ToolTip="{DynamicResource S.Options.Storage.Paths.Browse}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5" Command="{StaticResource Command.BrowseGifski}"/>
                        </Grid>

                        <StackPanel Grid.Row="9" Orientation="Horizontal">
                            <Border Background="{StaticResource Vector.Info}" Height="16" Width="16" Margin="2" Opacity="{DynamicResource Element.Opacity}"/>

                            <TextBlock Margin="2" VerticalAlignment="Center">
                                <Hyperlink NavigateUri="https://ffmpeg.org/legal.html" RequestNavigate="ExtrasHyperlink_OnRequestNavigate">
                                    <Run Text="{DynamicResource S.Options.Extras.License.Ffmpeg}"/>
                                </Hyperlink>
                                
                                <Run Text="/" Foreground="{DynamicResource Element.Foreground}"/>

                                <Hyperlink NavigateUri="https://github.com/ImageOptim/gifski/blob/master/LICENSE" RequestNavigate="ExtrasHyperlink_OnRequestNavigate">
                                    <Run Text="{DynamicResource S.Options.Extras.License.Gifski}"/>
                                </Hyperlink>
                                
                                <Run Text="/" Foreground="{DynamicResource Element.Foreground}"/>

                                <Hyperlink NavigateUri="https://github.com/sharpdx/SharpDX/blob/master/LICENSE" RequestNavigate="ExtrasHyperlink_OnRequestNavigate">
                                    <Run Text="{DynamicResource S.Options.Extras.License.SharpDx}"/>
                                </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </Grid>

                    <!--Donate-->
                    <Grid x:Name="DonateGrid" Visibility="{Binding IsChecked, ElementName=DonateRadio, Converter={StaticResource Bool2Visibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="21"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <n:LabelSeparator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="PaypalLabel" Text="Paypal"/>
                        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,0,0,5" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}" HorizontalAlignment="Center" MinWidth="500">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="DonateButton" Text="{DynamicResource S.Options.Donate.Donate.Dollar}" Margin="5" Icon="{StaticResource Vector.Money}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="18" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="DonateButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="{DynamicResource S.Options.Donate.Paypal.Dollar}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="1" x:Name="DonateEuroButton" Text="{DynamicResource S.Options.Donate.Donate.Euro}" Margin="5" Icon="{StaticResource Vector.Money}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="18" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="DonateEuroButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}" 
                                              ToolTipService.ToolTip="{DynamicResource S.Options.Donate.Paypal.Euro}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="2" x:Name="DonateOtherButton" Text="{DynamicResource S.Options.Donate.Donate}" Margin="5" Icon="{StaticResource Vector.Money}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="18" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="DonateOtherButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="{DynamicResource S.Options.Donate.Paypal.OwnCurrency}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="US$ - USA Dollar" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="1"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="€ - Euro" Foreground="{DynamicResource Element.Foreground.Gray150}" FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="1"/>

                            <ComboBox Grid.Row="1" Grid.Column="2" x:Name="CurrencyComboBox" HorizontalAlignment="Center" VerticalAlignment="Center" SelectedIndex="0"
                                      Margin="3" Foreground="{DynamicResource Element.Foreground.Gray150}">
                                <ComboBoxItem Content="AUD - Australian Dollar" Padding="2"/>
                                <ComboBoxItem Content="BRL - Brazilian Real" Padding="2"/>
                                <ComboBoxItem Content="CAD - Canadian Dollar" Padding="2"/>
                                <ComboBoxItem Content="CZK - Czech Koruna" Padding="2"/>
                                <ComboBoxItem Content="DKK - Danish Krone" Padding="2"/>
                                <ComboBoxItem Content="HKD - Hong Kong Dollar" Padding="2"/>
                                <ComboBoxItem Content="HUF - Hungarian Forint" Padding="2"/>
                                <ComboBoxItem Content="ILS - Israeli New Sheqel" Padding="2"/>
                                <ComboBoxItem Content="JPY - Japanese Yen" Padding="2"/>
                                <ComboBoxItem Content="MXN - Mexican Peso" Padding="2"/>
                                <ComboBoxItem Content="NOK - Norwegian Krone" Padding="2"/>
                                <ComboBoxItem Content="NZD - New Zealand Dollar " Padding="2"/>
                                <ComboBoxItem Content="PHP - Philippine Peso" Padding="2"/>
                                <ComboBoxItem Content="PLN - Polish Zloty" Padding="2"/>
                                <ComboBoxItem Content="GBP - Pound Sterling" Padding="2"/>
                                <ComboBoxItem Content="RUB - Russian Ruble" Padding="2"/>
                                <ComboBoxItem Content="SGD - Singapore Dollar" Padding="2"/>
                                <ComboBoxItem Content="SEK - Swedish Krona" Padding="2"/>
                                <ComboBoxItem Content="CHK - Swiss Franc" Padding="2"/>
                                <ComboBoxItem Content="TWD - Taiwan New Dollar" Padding="2"/>
                                <ComboBoxItem Content="THB - Thai Baht" Padding="2"/>
                            </ComboBox>

                            <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Text="Reference: screentogif • nicke@outlook.com.br" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" Padding="1"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="2" Grid.Column="0" Text="Patreon" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}"/>
                        <Grid Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="PatreonButton" Text="{DynamicResource S.Options.Donate.Subscribe}" Margin="5" Icon="{StaticResource Vector.Patreon}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="PatreonButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="https://www.patreon.com/nicke" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource S.Options.Donate.Subscribe.Patreon}" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" TextWrapping="Wrap"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="2" Grid.Column="1" Text="Flattr" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}"/>
                        <Grid Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="FlattrButton" Text="{DynamicResource S.Options.Donate.Subscribe}" Margin="5" Icon="{StaticResource Vector.Flattr}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="FlattrButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="https://flattr.com/@NickeManarin/domain/screentogif.com" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource S.Options.Donate.Subscribe.Flattr}" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" TextWrapping="Wrap"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="4" Grid.Column="0" Text="Steam" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}"/>
                        <Grid Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="SteamButton" Text="{DynamicResource S.Options.Donate.Gift}" Margin="5" Icon="{StaticResource Vector.Steam}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="SteamButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="http://steamcommunity.com/id/nickesm/wishlist" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="5" TextWrapping="Wrap">
                                <Run Text="{DynamicResource S.Options.Donate.Gift.Steam}"/>
                                <LineBreak/>
                                <Run Text="nicke@outlook.com.br"/>
                            </TextBlock>
                        </Grid>

                        <n:LabelSeparator Grid.Row="4" Grid.Column="1" Text="GOG Galaxy" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}"/>
                        <Grid Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="GogButton" Text="{DynamicResource S.Options.Donate.Gift}" Margin="5" Icon="{StaticResource Vector.Gog}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="GogButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="https://www.gog.com/u/Nickesm/wishlist" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="5" TextWrapping="Wrap">
                                <Run Text="{DynamicResource S.Options.Donate.Gift.Gog}"/>
                                <LineBreak/>
                                <Run Text="nicke@outlook.com.br"/>
                            </TextBlock>
                        </Grid>

                        <n:LabelSeparator Grid.Row="6" Grid.Column="0" Text="Ko-fi" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}"/>
                        <Grid Grid.Row="7" Grid.Column="0" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="KofiButton" Text="{DynamicResource S.Options.Donate.Donate}" Margin="5" Icon="{StaticResource Vector.Kofi}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="KofiButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="https://ko-fi.com/nickemanarin" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource S.Options.Donate.Kofi}" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="5" TextWrapping="Wrap"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="6" Grid.Column="1" Text="{DynamicResource S.Options.Donate.Crypto}" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}"/>
                        <Grid Grid.Row="7" Grid.Column="1" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="CryptoButton" Text="{DynamicResource S.Editor.Home.Copy}" Margin="5" Icon="{StaticResource Vector.Text}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="BitcoinCashCopy_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="1HN81cAwDo16tRtiYfkzvzFqikQUimM3S8" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <!--BitcoinCash: 1HN81cAwDo16tRtiYfkzvzFqikQUimM3S8-->
                            <!--Monero: 44yC9CkwHVfKPsKxg5RcA67GZEqiQH6QoBYtRKwkhDaE3tvRpiw1E5i6GShZYNsDq9eCtHnq49SrKjF4DG7NwjqWMoMueD4-->

                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource S.Options.Donate.Crypto.BitcoinCash}" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="5" TextWrapping="Wrap"/>
                        </Grid>

                        <n:LabelSeparator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{DynamicResource S.Options.Donate.Support}" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility, Converter={StaticResource InvertedVisibility}}"/>
                        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Visibility="{Binding ElementName=PaypalLabel, Path=Visibility, Converter={StaticResource InvertedVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:ExtendedButton Grid.Row="0" Grid.Column="0" x:Name="SupportButton" Text="screentogif.com/donate" Margin="5" Icon="{StaticResource Vector.Web}" 
                                              ContentHeight="20" ContentWidth="20" HorizontalAlignment="Stretch" MinWidth="120" MinHeight="40" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                              Foreground="#FF143A61" FontSize="14" FontWeight="SemiBold" FontStyle="Italic" Cursor="Hand"
                                              Click="SupportButton_Click" Style="{StaticResource Style.Button.Horizontal.Special}"
                                              ToolTipService.ToolTip="http://www.screentogif.com/donate" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource S.Options.Donate.Support.Visit}" Foreground="{DynamicResource Element.Foreground.Gray150}" 
                                       FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="5" TextWrapping="Wrap"/>
                        </Grid>
                    </Grid>

                    <!--About-->
                    <StackPanel x:Name="AboutPanel" Visibility="{Binding IsChecked, ElementName=AboutRadio, Converter={StaticResource Bool2Visibility}}">
                        <Grid HorizontalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Background="{StaticResource Vector.Logo}" Height="50" Width="60" Margin="10" HorizontalAlignment="Center" 
                                    Opacity="{DynamicResource Element.Opacity}"/>

                            <Label Grid.Row="0" Grid.Column="1" Content="ScreenToGif" FontSize="18" Margin="0,0,5,0" 
                                   HorizontalAlignment="Right" VerticalContentAlignment="Center" Foreground="{DynamicResource Element.Foreground}"/>

                            <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                                <Label Content="{DynamicResource S.Options.About.Version}" FontSize="18" VerticalContentAlignment="Center" Foreground="{DynamicResource Element.Foreground}"/>
                                <Label Content="{Binding Source={x:Static t:UserSettings.All}, Path=VersionText}" FontSize="18" VerticalContentAlignment="Center" Foreground="{DynamicResource Element.Foreground}"/>
                                <Label x:Name="CheckForUpdatesLabel" VerticalContentAlignment="Center">
                                    <Hyperlink Click="CheckForUpdatesLabel_Click">
                                        <Run Text="{DynamicResource S.Options.About.UpdateCheck}"/>
                                    </Hyperlink>
                                </Label>
                            </StackPanel>

                            <Label Grid.Row="1" Grid.Column="1" FontSize="16" HorizontalAlignment="Right" Cursor="Hand" Padding="3,5" VerticalContentAlignment="Center">
                                <Hyperlink NavigateUri="https://www.screentogif.com/" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    screentogif.com
                                </Hyperlink>
                            </Label>

                            <Label Grid.Row="1" Grid.Column="2" Content="{DynamicResource S.Options.About.Author}" FontSize="16" VerticalContentAlignment="Center" 
                                   Foreground="{DynamicResource Element.Foreground}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" x:Name="StoreTextBlock" Text="{DynamicResource S.Options.About.StoreVersion}" Foreground="#882200" Margin="5"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </Grid>

                        <n:LabelSeparator Text="{DynamicResource S.Options.About.Contact}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Email:" FontSize="12" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="{DynamicResource Element.Foreground}"/>
                            <TextBlock Grid.Row="0" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="mailto:nicke@outlook.com.br" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    nicke@outlook.com.br
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock Grid.Row="0" Grid.Column="2" Text="Discord:" FontSize="12" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="{DynamicResource Element.Foreground}"/>
                            <TextBlock Grid.Row="0" Grid.Column="3" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://discord.gg/XgEqDHX" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    <Run Text="{StaticResource S.Options.About.Contact.Discord}"/>
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Reddit:" FontSize="12" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="{DynamicResource Element.Foreground}"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://www.reddit.com/r/screentogif/" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    /r/ScreenToGif/
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock Grid.Row="1" Grid.Column="2" Text="Facebook:" FontSize="12" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="{DynamicResource Element.Foreground}"/>
                            <TextBlock Grid.Row="1" Grid.Column="3" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://www.facebook.com/ScreenToGif" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    <Run Text="{StaticResource S.Options.About.Contact.Facebook}"/>
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Twitter:" FontSize="12" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="{DynamicResource Element.Foreground}"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://twitter.com/NickeManarin" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    @NickeManarin
                                </Hyperlink>
                            </TextBlock>

                            <!--<TextBlock Grid.Row="2" Grid.Column="2" Text="Gitter:" FontSize="12" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="{DynamicResource Element.Foreground}"/>
                            <TextBlock Grid.Row="2" Grid.Column="3" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://gitter.im/ScreenToGif/Lobby" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    <Run Text="{StaticResource S.Options.About.Contact.Gitter}"/>
                                </Hyperlink>
                            </TextBlock>-->
                        </Grid>

                        <n:LabelSeparator Text="{DynamicResource S.Options.About.Technical}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.Options.About.Technical.License}" FontSize="12" VerticalContentAlignment="Center" Margin="15,0,0,0" Foreground="{DynamicResource Element.Foreground}"/>

                            <TextBlock Grid.Row="0" Grid.Column="1" FontSize="12" FontFamily="Segoe UI Semilight" HorizontalAlignment="Left" Padding="3,5">
                                <Hyperlink NavigateUri="https://github.com/NickeManarin/ScreenToGif/blob/master/LICENSE.txt" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" 
                                           Cursor="Hand" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    MS-PL
                                </Hyperlink>
                                <Run Text="/" Foreground="{DynamicResource Element.Foreground.Medium}"/>
                                <Hyperlink NavigateUri="https://tldrlegal.com/license/microsoft-public-license-(ms-pl)" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" 
                                           Cursor="Hand" RequestNavigate="Hyperlink_OnRequestNavigate">
                                    TL;DR Legal
                                </Hyperlink>
                                <Run Text="{DynamicResource S.Options.About.Technical.Free}" Foreground="{DynamicResource Element.Foreground.Gray150}"/>
                            </TextBlock>

                            <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.Options.About.Technical.SourceCode}" FontSize="12" VerticalContentAlignment="Center" Margin="15,0,0,0" Foreground="{DynamicResource Element.Foreground}"/>

                            <TextBlock Grid.Row="1" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://github.com/NickeManarin/ScreenToGif" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" 
                                           RequestNavigate="Hyperlink_OnRequestNavigate">
                                    github.com/NickeManarin/ScreenToGif
                                </Hyperlink>
                            </TextBlock>

                            <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource S.Options.About.Technical.Privacy}" FontSize="12" VerticalContentAlignment="Center" Margin="15,0,0,0" Foreground="{DynamicResource Element.Foreground}"/>

                            <TextBlock Grid.Row="2" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://www.screentogif.com/privacy-terms" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" 
                                           RequestNavigate="Hyperlink_OnRequestNavigate">
                                    screentogif.com/privacy-terms
                                </Hyperlink>
                            </TextBlock>
                        </Grid>

                        <n:LabelSeparator Text="{DynamicResource S.Options.About.ABigThanksTo}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Visual Studio:" FontSize="12" VerticalContentAlignment="Center" Margin="15,0,0,0" Foreground="{DynamicResource Element.Foreground}"/>

                            <Label Grid.Row="0" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="http://visualstudio.com/" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" 
                                           RequestNavigate="Hyperlink_OnRequestNavigate">
                                    visualstudio.com
                                </Hyperlink>
                            </Label>

                            <Label Grid.Row="1" Grid.Column="0" Content="ReSharper:" FontSize="12" VerticalContentAlignment="Center" Margin="15,0,0,0" Foreground="{DynamicResource Element.Foreground}"/>

                            <Label Grid.Row="1" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Cursor="Hand" Padding="3,5">
                                <Hyperlink NavigateUri="https://www.jetbrains.com/resharper" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=NavigateUri}" 
                                           RequestNavigate="Hyperlink_OnRequestNavigate">
                                    jetbrains.com/resharper
                                </Hyperlink>
                            </Label>

                            <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Content="{DynamicResource S.Options.About.ABigThanksTo.Everyone}" 
                                   FontSize="12" VerticalContentAlignment="Center" Margin="15,0,0,0" Foreground="{DynamicResource Element.Foreground}"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </ScrollViewer>
        </Grid>

        <Grid Grid.Row="1" Background="{DynamicResource Panel.Background.Level3}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto" MinWidth="110"/>
            </Grid.ColumnDefinitions>

            <n:ExtendedButton Grid.Column="2" x:Name="OkButton" Text="{DynamicResource S.Ok}" Margin="5" Padding="2,0" 
                              ContentHeight="18" ContentWidth="18" Icon="{StaticResource Vector.Ok}" Click="OkButton_Click"/>
        </Grid>
    </Grid>
</Window>
