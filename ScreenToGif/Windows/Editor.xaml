<Window x:Class="ScreenToGif.Windows.Editor" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:n="clr-namespace:ScreenToGif.Controls"
        xmlns:l="clr-namespace:ScreenToGif.Windows"
        xmlns:u="clr-namespace:ScreenToGif.Util"
        xmlns:c="clr-namespace:ScreenToGif.Util.Converters"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
        x:Name="EditorWindow" Title="{DynamicResource Editor.Title}" MinHeight="500" MinWidth="700" 
        Background="#FFF1F1F1" UseLayoutRounding="True" Icon="/Resources/Logo.ico"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}"
        Loaded="Window_Loaded" Closing="Window_Closing" Activated="Window_Activated" KeyUp="Window_KeyUp" Deactivated="Window_Deactivated">

    <Window.Resources>
        <c:DoubleToInt x:Key="DoubleToIntConverter"/>
        <c:InvertedBool x:Key="InvertedBoolConverter"/>
        <c:InvertedVisibility x:Key="InvertedVisibilityConverter"/>
        <c:MaximumValue x:Key="MaximumValueConverter"/>
        <c:DoubleTimesAHundredToInt x:Key="DoubleTimesAHundredToIntConverter"/>
        <c:UriToBitmap x:Key="UriToBitmapConverter"/>
        <c:PathToFilename x:Key="PathToFilenameConverter"/>
        <c:DoubleToThickness x:Key="DoubleToThicknessConverter"/>
        <c:SelectionToEditingMode x:Key="SelectionToEditingModeConverter"/>
        <c:SelectionToDrawingAttributes x:Key="SelectionToDrawingAttributesConverter"/>
        <c:SelectionToStylusShape x:Key="SelectionToStylusShapeConverter"/>
        <c:StylusTipToBool x:Key="StylusTipToBoolConverter"/>
        <c:RoutedCommandToInputGestureTextConverter x:Key="CommandToInputGestureTextConverter"/>
        <c:FontToSupportedGliph x:Key="FontToSupportedGliphConverter"/>
        <c:InvertedBool x:Key="InvertedBool"/>
        <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
        <c:EnumToBool x:Key="EnumToBool"/>
        <c:EnumToVisibility x:Key="EnumToVisibility"/>
        <c:IntToVisibility x:Key="IntToVisibility"/>
        <c:FormatConverter x:Key="FormatConverter"/>
        <c:BoolOrToVisibility x:Key="BoolOrToVisibility"/>
        <c:BoolAndToVisibility x:Key="BoolAndToVisibility"/>
        <c:BoolOrAndToVisibility x:Key="BoolOrAndToVisibility"/>

        <Storyboard x:Key="ShowPanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="280" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="280" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ShowExtendedPanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="300" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="300" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HidePanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideWelcomeBorderStoryboard">
            <DoubleAnimation Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=WelcomeGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:1" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowWelcomeBorderStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideOverlayGridStoryboard">
            <DoubleAnimation Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=OverlayGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:1" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowOverlayGridStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ShowHintStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1.5">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Opacity" From="{Binding ElementName=HintStackPanel,Path=Opacity}" To="0" BeginTime="0:0:7" Duration="0:0:3">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" BeginTime="0:0:7" Duration="0:0:3">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:3"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowPermanentHintStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1.5">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideHintStoryboard">
            <DoubleAnimation Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=HintStackPanel,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HintStackPanel" Storyboard.TargetProperty="Visibility" Duration="0:0:1">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <CollectionViewSource x:Key="MyFonts" x:Shared="False" 
                              Source="{Binding Source={x:Static Fonts.SystemFontFamilies}, Converter={StaticResource FontToSupportedGliphConverter}}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Source"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <DataTemplate x:Key="FontTemplate">
            <!--x:Shared="False"-->
            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                <TextBlock FontFamily="{Binding .}" FontSize="16" Text="{Binding .}" ToolTip="{Binding Path=.Source}" />
            </VirtualizingStackPanel>
        </DataTemplate>
    </Window.Resources>

    <Window.CommandBindings>
        <!--New-->
        <CommandBinding Command="u:Commands.NewRecording" CanExecute="NewRecording_CanExecute" Executed="NewRecording_Executed"/>
        <CommandBinding Command="u:Commands.NewWebcamRecording" CanExecute="NewRecording_CanExecute" Executed="NewWebcamRecording_Executed"/>
        <CommandBinding Command="u:Commands.NewBoardRecording" CanExecute="NewRecording_CanExecute" Executed="NewBoardRecording_Executed"/>
        <CommandBinding Command="u:Commands.NewAnimation" CanExecute="NewProject_CanExecute" Executed="NewProject_Executed"/>

        <!--Insert-->
        <CommandBinding Command="u:Commands.InsertRecording" CanExecute="Insert_CanExecute" Executed="InsertRecording_Executed"/>
        <CommandBinding Command="u:Commands.InsertWebcamRecording" CanExecute="Insert_CanExecute" Executed="InsertWebcamRecording_Executed"/>
        <CommandBinding Command="u:Commands.InsertBoardRecording" CanExecute="Insert_CanExecute" Executed="InsertBoardRecording_Executed"/>
        <CommandBinding Command="u:Commands.InsertFromMedia" CanExecute="InsertFromMedia_CanExecute" Executed="InsertFromMedia_Executed"/>

        <!--File-->
        <CommandBinding Command="u:Commands.SaveAs" CanExecute="File_CanExecute" Executed="SaveAs_Executed"/>
        <CommandBinding Command="u:Commands.Load" CanExecute="NewProject_CanExecute" Executed="Load_Executed"/>
        <CommandBinding Command="u:Commands.LoadRecent" CanExecute="NewProject_CanExecute" Executed="LoadRecent_Executed"/>
        <CommandBinding Command="u:Commands.DiscardProject" CanExecute="File_CanExecute" Executed="DiscardProject_Executed"/>

        <!--Action Stack-->
        <CommandBinding Command="Undo" CanExecute="Undo_CanExecute" Executed="Undo_Executed"/>
        <CommandBinding Command="u:Commands.Reset" CanExecute="Reset_CanExecute" Executed="Reset_Executed"/>
        <CommandBinding Command="Redo" CanExecute="Redo_CanExecute" Executed="Redo_Executed"/>

        <!--Clipboard-->
        <CommandBinding Command="Cut" CanExecute="ClipBoard_CanExecute" Executed="Cut_Executed"/>
        <CommandBinding Command="Copy" CanExecute="ClipBoard_CanExecute" Executed="Copy_Executed"/>
        <CommandBinding Command="Paste" CanExecute="Paste_CanExecute" Executed="Paste_Executed"/>
        <CommandBinding Command="u:Commands.ExploreClipboard" CanExecute="ClipBoardSelection_CanExecute" Executed="ExploreClipBoard_Executed"/>
        <CommandBinding Command="u:Commands.RemoveClipboardEntry" CanExecute="ClipBoardSelection_CanExecute" Executed="RemoveClipboard_Executed"/>

        <!--Zoom-->
        <CommandBinding Command="u:Commands.Zoom100" CanExecute="Zoom_CanExecute" Executed="Zoom100_Executed"/>
        <CommandBinding x:Name="SizeToContentCommand" Command="u:Commands.SizeToContent" CanExecute="Zoom_CanExecute" Executed="SizeToContent_Executed"/>
        <CommandBinding x:Name="FitImageCommand" Command="u:Commands.FitImage" CanExecute="Zoom_CanExecute" Executed="FitImage_Executed"/>

        <!--Select-->
        <CommandBinding Command="u:Commands.SelectAll" CanExecute="Selection_CanExecute" Executed="SelectAll_Executed"/>
        <CommandBinding Command="u:Commands.GoTo" CanExecute="Selection_CanExecute" Executed="GoTo_Executed"/>
        <CommandBinding Command="u:Commands.InverseSelection" CanExecute="Selection_CanExecute" Executed="InverseSelection_Executed"/>
        <CommandBinding Command="u:Commands.Unselect" CanExecute="Image_CanExecute" Executed="DeselectAll_Executed"/>

        <!--Playback-->
        <CommandBinding Command="u:Commands.FirstFrame" CanExecute="Playback_CanExecute" Executed="FirstFrame_Executed"/>
        <CommandBinding Command="u:Commands.PreviousFrame" CanExecute="Playback_CanExecute" Executed="PreviousFrame_Executed"/>
        <CommandBinding Command="u:Commands.Play" CanExecute="Playback_CanExecute" Executed="Play_Executed"/>
        <CommandBinding Command="u:Commands.NextFrame" CanExecute="Playback_CanExecute" Executed="NextFrame_Executed"/>
        <CommandBinding Command="u:Commands.LastFrame" CanExecute="Playback_CanExecute" Executed="LastFrame_Executed"/>

        <!--Frames-->
        <CommandBinding Command="Delete" CanExecute="Delete_CanExecute" Executed="Delete_Executed"/>
        <CommandBinding Command="u:Commands.DeletePrevious" CanExecute="DeletePrevious_CanExecute" Executed="DeletePrevious_Executed"/>
        <CommandBinding Command="u:Commands.DeleteNext" CanExecute="DeleteNext_CanExecute" Executed="DeleteNext_Executed"/>
        <CommandBinding Command="u:Commands.RemoveDuplicates" CanExecute="RemoveDuplicates_CanExecute" Executed="RemoveDuplicates_Executed"/>
        <CommandBinding Command="u:Commands.Reduce" CanExecute="Reduce_CanExecute" Executed="Reduce_Executed"/>

        <!--Reordering-->
        <CommandBinding Command="u:Commands.Reverse" CanExecute="Reordering_CanExecute" Executed="Reverse_Executed"/>
        <CommandBinding Command="u:Commands.Yoyo" CanExecute="Reordering_CanExecute" Executed="Yoyo_Executed"/>
        <CommandBinding Command="u:Commands.MoveLeft" CanExecute="Reordering_CanExecute" Executed="MoveLeft_Executed"/>
        <CommandBinding Command="u:Commands.MoveRight" CanExecute="Reordering_CanExecute" Executed="MoveRight_Executed"/>

        <!--Delay (Duration)-->
        <CommandBinding Command="u:Commands.OverrideDelay" CanExecute="Image_CanExecute" Executed="OverrideDelay_Executed"/>
        <CommandBinding Command="u:Commands.ChangeDelay" CanExecute="Image_CanExecute" Executed="IncreaseDecreaseDelay_Executed"/>
        <CommandBinding Command="u:Commands.ScaleDelay" CanExecute="Image_CanExecute" Executed="ScaleDelay_Executed"/>

        <!--Image-->
        <CommandBinding Command="u:Commands.Resize" CanExecute="Image_CanExecute" Executed="Resize_Executed"/>
        <CommandBinding Command="u:Commands.Crop" CanExecute="Image_CanExecute" Executed="Crop_Executed"/>
        <CommandBinding Command="u:Commands.FlipRotate" CanExecute="Image_CanExecute" Executed="FlipRotate_Executed"/>

        <CommandBinding Command="u:Commands.Caption" CanExecute="Image_CanExecute" Executed="Caption_Executed"/>
        <CommandBinding Command="u:Commands.FreeText" CanExecute="Image_CanExecute" Executed="FreeText_Executed"/>
        <CommandBinding Command="u:Commands.TitleFrame" CanExecute="Image_CanExecute" Executed="TitleFrame_Executed"/>
        <CommandBinding Command="u:Commands.KeyStrokes" CanExecute="Image_CanExecute" Executed="KeyStrokes_Executed"/>

        <CommandBinding Command="u:Commands.FreeDrawing" CanExecute="Image_CanExecute" Executed="FreeDrawing_Executed"/>
        <CommandBinding Command="u:Commands.MouseClicks" CanExecute="Image_CanExecute" Executed="MouseClicks_Executed"/>
        <CommandBinding Command="u:Commands.Watermark" CanExecute="Image_CanExecute" Executed="Watermark_Executed"/>
        <CommandBinding Command="u:Commands.Border" CanExecute="Image_CanExecute" Executed="Border_Executed"/>
        <CommandBinding Command="u:Commands.Obfuscate" CanExecute="Image_CanExecute" Executed="Obfuscate_Executed"/>
        <CommandBinding Command="u:Commands.Cinemagraph" CanExecute="Image_CanExecute" Executed="Cinemagraph_Executed"/>
        <CommandBinding Command="u:Commands.Progress" CanExecute="Image_CanExecute" Executed="Progress_Executed"/>

        <!--Transitions-->
        <CommandBinding Command="u:Commands.Fade" CanExecute="Transition_CanExecute" Executed="Fade_Executed"/>
        <CommandBinding Command="u:Commands.Slide" CanExecute="Transition_CanExecute" Executed="Slide_Executed"/>

        <!--Apply and Cancel-->
        <CommandBinding x:Name="OkCommandBinding2" Command="u:Commands.OkAction" CanExecute="PanelAction_CanExecute" Executed="Ok_Executed"/>
        <CommandBinding x:Name="CancelCommandBinding" Command="u:Commands.CancelAction" CanExecute="PanelAction_CanExecute" Executed="Cancel_Executed"/>

        <!--Frame list-->
        <CommandBinding Command="u:Commands.OpenImage" CanExecute="ListFramesSelection_CanExecute" Executed="OpenImage_Executed"/>
        <CommandBinding Command="u:Commands.ExploreFolder" CanExecute="ListFramesSelection_CanExecute" Executed="ExploreFolder_Executed"/>
        <CommandBinding Command="u:Commands.ExportImages" CanExecute="ListFramesSelection_CanExecute" Executed="ExportImages_Executed"/>
    </Window.CommandBindings>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="{DynamicResource Editor.Title}">
            <!--<TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo x:Name="NewRecordingThumbInfo" Command="u:Commands.NewRecording" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=NewRecordingButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,20,20"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Record.New}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo x:Name="NewWebcamRecordingThumbInfo" Command="u:Commands.NewWebcamRecording" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=NewWebcamRecordingButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,20,20"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Camera.New}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo x:Name="NewBoardRecordingThumbInfo" Command="u:Commands.NewBoardRecording" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=NewBoardRecordingButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,20,20"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Board.New}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo x:Name="NewFromMediaProjectThumbInfo" Command="u:Commands.NewFromMediaProject" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=OpenMediaProjectButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,20,20"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Open}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo Visibility="Hidden"/>

                    <ThumbButtonInfo x:Name="DiscardThumbInfo" Command="u:Commands.DiscardProject" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=DiscardProjectButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,20,20"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Remove}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>-->
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>

    <Grid x:Name="MainGrid" DataContext="{Binding ElementName=FrameListView, Path=SelectedItem}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <n:HideableTabControl Grid.Row="0" x:Name="RibbonTabControl" Effect="{StaticResource Shadow.Border.Tiny}" FontSize="13" IsTabStop="False" Focusable="False"
                              OptionsCommand="{Binding Source={StaticResource AppViewModel}, Path=OpenOptions}" FeedbackCommand="{Binding Source={StaticResource AppViewModel}, Path=OpenFeedback}"
                              TroubleshootCommand="{Binding Source={StaticResource AppViewModel}, Path=OpenTroubleshoot}" HelpCommand="{Binding Source={StaticResource AppViewModel}, Path=OpenHelp}">
            <n:AwareTabItem Header="{DynamicResource Editor.File}" Image="{StaticResource Vector.Save}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Invariant}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Content="{DynamicResource Editor.File.New}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="NewRecordingButton" Text="{DynamicResource Editor.File.New.Recording}" Content="{StaticResource Vector.Record.New}" 
							           MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.NewRecording" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="NewWebcamRecordingButton" Text="{DynamicResource Editor.File.New.Webcam}" Content="{StaticResource Vector.Camera.New}" 
							           MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.NewWebcamRecording" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="NewBoardRecordingButton" Text="{DynamicResource Editor.File.New.Board}" Content="{StaticResource Vector.Board.New}" 
							           MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.NewBoardRecording" Style="{StaticResource Style.Button.Vertical2}" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="3" Grid.Row="0" x:Name="NewAnimationButton" Text="{DynamicResource Editor.File.Blank}" Content="{StaticResource Vector.File.New}" 
							           MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.NewAnimation" Style="{StaticResource Style.Button.Vertical2}" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0"
                          IsEnabled="{Binding FilledList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:Editor}}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Content="{DynamicResource Editor.File.Insert}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="InsertRecordingButton" Text="{DynamicResource Editor.File.Insert.Recording}" Content="{StaticResource Vector.Record.Add}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.InsertRecording" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="InsertWebcamRecordingButton" Text="{DynamicResource Editor.File.Insert.Webcam}" Content="{StaticResource Vector.Camera.Add}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.InsertWebcamRecording" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="InsertBoardRecordingButton" Text="{DynamicResource Editor.File.New.Board}" Content="{StaticResource Vector.Board.Add}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.InsertBoardRecording" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="3" Grid.Row="0" x:Name="InsertImageButton" Text="{DynamicResource Editor.File.Insert.Media}"  Content="{StaticResource Vector.Open}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.InsertFromMedia" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="4" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Content="{DynamicResource Editor.File}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="SaveButton" Text="{DynamicResource Editor.File.Save}" Content="{StaticResource Vector.Save}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.SaveAs" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                       IsEnabled="{Binding FilledList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:Editor}}}"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="LoadButton" Text="{DynamicResource Editor.File.Load}" Content="{StaticResource Vector.Open}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.Load" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="RecentButton" Text="{DynamicResource Editor.File.LoadRecent}" Content="{StaticResource Vector.Project}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.LoadRecent" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="3" Grid.Row="0" x:Name="DiscardProjectButton" Text="{DynamicResource Editor.File.Discard}" Content="{StaticResource Vector.Remove}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.DiscardProject" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                       IsEnabled="{Binding FilledList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:Editor}}}"/>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Home}" Image="{StaticResource Vector.Editor}" IsSelected="True">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--Action Stack-->
                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Home.ActionStack}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="UndoButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Home.Undo}" Content="{StaticResource Vector.Undo}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="Undo"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="ResetButton" Grid.Row="0" Text="{DynamicResource Editor.Home.Reset}" Content="{StaticResource Vector.Repeat}"
                                           Padding="2" MinWidth="60" MaxSize="25" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.Reset"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="RedoButton" Grid.Row="1" Text="{DynamicResource Editor.Home.Redo}" Content="{StaticResource Vector.Redo}"
                                           Padding="2" MinWidth="60" MaxSize="25" Style="{StaticResource Style.Button.Horizontal}" Command="Redo"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <!--Clipboard-->
                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="{DynamicResource Editor.Home.Clipboard}" 
						           HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						           FontSize="12" Foreground="#FF707070"/>

                            <n:ImageButton Grid.Column="1" x:Name="ShowClipboardButton" Content="{StaticResource Vector.Launcher}"
						                   Margin="0,0,-2,-2" MinWidth="10" Padding="5,0" ContentHeight="8" Style="{StaticResource Style.Button.NoText}" Click="ShowClipboardButton_Click" 
                                           ToolTip="{DynamicResource Editor.Home.Clipboard.Show}" ToolTipService.Placement="Bottom"/>
                        </Grid>

                        <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="PasteButton" Text="{DynamicResource Editor.Home.Paste}" Content="{StaticResource Vector.Paste}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="Paste"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="CopyButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Home.Copy}" Content="{StaticResource Vector.Copy}"
						                   Padding="2" MinWidth="60" MaxSize="28" Style="{StaticResource Style.Button.Horizontal}" Command="Copy"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="CutButton" Grid.Row="1" Text="{DynamicResource Editor.Home.Cut}" Content="{StaticResource Vector.Cut}"
						                   Padding="2" MinWidth="60" MaxSize="28" Style="{StaticResource Style.Button.Horizontal}" Command="Cut"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <!--Zoom-->
                    <Grid Grid.Column="4" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Content="{DynamicResource Editor.Home.Zoom}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="Zoom100Button" Text="100%" Content="{StaticResource Vector.Fit}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.Zoom100" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="FitOnContentButton" Text="{DynamicResource Editor.Home.SizeToContent}" Content="{StaticResource Vector.SizeToContent}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.SizeToContent" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Column="2" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,5" IsEnabled="{Binding ElementName=Zoom100Button, Path=IsEnabled}">
                                <Viewbox Child="{StaticResource Vector.Zoom}" MaxWidth="22" MaxHeight="22" Style="{StaticResource ViewBoxStyle}"/>
                                <n:IntegerUpDown x:Name="ZoomNumericUpDown" Minimum="5" Maximum="500" Margin="5,0,0,0" MinWidth="60"
                                                 Value="{Binding Zoom, Converter={StaticResource IntToDecimalConverter}, ElementName=ZoomBoxControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="%" VerticalContentAlignment="Center" Padding="3,0"/>
                            </StackPanel>

                            <n:ImageButton Grid.Column="0" Grid.Row="1" x:Name="FitButton" Text="{DynamicResource Editor.Home.FitImage}" Content="{StaticResource Vector.PictureFit}" 
							               Margin="0" Padding="2" MinWidth="60" MaxSize="35" VerticalContentAlignment="Center"
							               Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.FitImage" 
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <!--Select-->
                    <Grid Grid.Column="6" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" x:Name="SelectLabel" Content="{DynamicResource Editor.Home.Select}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="SelectAllButton" Text="{DynamicResource Editor.Home.SelectAll}" Content="{StaticResource Vector.Cursor}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.SelectAll"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="1" x:Name="GoToButton" Text="{DynamicResource Editor.Home.GoTo}" Content="{StaticResource Vector.Forward}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.GoTo"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="2" Margin="0,1,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="InverseSelectionButton" Grid.Row="0" Text="{DynamicResource Editor.Home.Inverse}" Content="{StaticResource Vector.InverseSelection}"
                                           Padding="2" MinWidth="60" MaxSize="25" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.InverseSelection"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="DeselectButton" Grid.Row="1" Text="{DynamicResource Editor.Home.Deselect}" Content="{StaticResource Vector.Unselect}"
                                           Padding="2" MinWidth="60" MaxSize="25" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.Unselect"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="7" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Playback}" Image="{StaticResource Vector.Play}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Invariant}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" Content="{DynamicResource Editor.Playback.Playback}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="FirstButton" Text="{DynamicResource Editor.Playback.First}" Content="{StaticResource Vector.First.Green}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="38" Command="u:Commands.FirstFrame" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageRepeatButton Grid.Column="1" Grid.Row="0" x:Name="PreviousButton" Text="{DynamicResource Editor.Playback.Previous}" Content="{StaticResource Vector.Previous.Green}" 
                                             ContentHeight="28" ContentWidth="28" Command="u:Commands.PreviousFrame" Style="{StaticResource Style.RepeatButton.Vertical}" 
                                             ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                             ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="PlayButton" Text="{DynamicResource Editor.Playback.Play}" Content="{StaticResource Vector.Play}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.Play" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageRepeatButton Grid.Column="3" Grid.Row="0" x:Name="NextButton" Text="{DynamicResource Editor.Playback.Next}" Content="{StaticResource Vector.Next.Green}" 
                                             ContentHeight="28" ContentWidth="28" Command="u:Commands.NextFrame" Style="{StaticResource Style.RepeatButton.Vertical}"
                                             ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                             ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="4" Grid.Row="0" x:Name="LastButton" Text="{DynamicResource Editor.Playback.Last}" Content="{StaticResource Vector.Last.Green}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="38" Command="u:Commands.LastFrame" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Edit}" Image="{StaticResource Vector.Pen}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Content="{DynamicResource Editor.Edit.Frames}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="DeleteButton" Text="{DynamicResource Editor.Edit.Delete}" Content="{StaticResource Vector.RemoveImage}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="Delete"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="1" x:Name="DeleteDuplicatesButton" Text="{DynamicResource Editor.Edit.Frames.Duplicates}" Content="{StaticResource Vector.RemoveImage}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.RemoveDuplicates"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="2" x:Name="ReduceButton" Text="{DynamicResource Editor.Edit.Frames.Reduce}" Content="{StaticResource Vector.RemoveImage}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.Reduce"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="3">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="DeleteBeforeButton" Grid.Row="0" Text="{DynamicResource Editor.Edit.DeletePrevious}" Content="{StaticResource Vector.Delete.Before}"
						                   Padding="3,3,3,0" MinWidth="60" MaxSize="30" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.DeletePrevious"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="DeleteAfterButton" Grid.Row="1" Text="{DynamicResource Editor.Edit.DeleteNext}" Content="{StaticResource Vector.Delete.After}"
                                           Padding="3,3,3,0" MinWidth="60" MaxSize="30" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.DeleteNext"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Content="{DynamicResource Editor.Edit.Reordering}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <Grid Grid.Row="0" Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="ReverseOrderButton" Grid.Row="0" Text="{DynamicResource Editor.Edit.Reverse}" Content="{StaticResource Vector.Invert}"
						                   Padding="3,3,3,0" MaxSize="30" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.Reverse"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="YoyoOrderButton" Grid.Row="1" Text="{DynamicResource Editor.Edit.Yoyo}" Content="{StaticResource Vector.Yoyo}"
						                   Padding="3,3,3,0" MaxSize="30" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.Yoyo"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>

                        <n:ImageButton x:Name="MoveLeftButton" Grid.Row="0" Grid.Column="1" Text="{DynamicResource Editor.Edit.MoveLeft}" Content="{StaticResource Vector.MoveLeft}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.MoveLeft"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton x:Name="MoveRightButton" Grid.Row="0" Grid.Column="2" Text="{DynamicResource Editor.Edit.MoveRight}" Content="{StaticResource Vector.MoveRight}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.MoveRight"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="4" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Content="{DynamicResource Editor.Edit.Delay}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="OverrideDelayButton" Text="{DynamicResource Editor.Edit.Delay.Override}" Content="{StaticResource Vector.OverrideDelay}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.OverrideDelay" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="ChangeDelayButton" Text="{DynamicResource Editor.Edit.Delay.IncreaseDecrease}" Content="{StaticResource Vector.IncreaseDecreaseDelay}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.ChangeDelay" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        
                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="ScaleDelayButton" Text="{DynamicResource Editor.Edit.Delay.Scale}" Content="{StaticResource Vector.ScaleDelay}" 
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.ScaleDelay" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Image}" Image="{StaticResource Vector.Image}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Image.SizePosition}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="ResizeButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Image.Resize}" Content="{StaticResource Vector.Resize}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.Resize"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="CropButton" Grid.Row="0" Text="{DynamicResource Editor.Image.Crop}" Content="{StaticResource Vector.Crop}"
                                           Padding="2" MinWidth="60" MaxSize="25" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.Crop"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="FlipRotateButton" Grid.Row="1" Text="{DynamicResource Editor.Image.FlipRotate}" Content="{StaticResource Vector.FlipHorizontal}"
                                           Padding="2" MinWidth="60" MaxSize="25" Style="{StaticResource Style.Button.Horizontal}" Command="u:Commands.FlipRotate"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Content="{DynamicResource Editor.Image.Text}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="CaptionButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Image.Caption}" Content="{StaticResource Vector.Caption}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="28" Command="u:Commands.Caption" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton x:Name="KeypressButton" Grid.Row="0" Grid.Column="1" Text="{DynamicResource Editor.Image.KeyStrokes}" Content="{StaticResource Vector.Keyboard}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Command="u:Commands.KeyStrokes" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="FreeTextButton" Grid.Row="0" Text="{DynamicResource Editor.Image.FreeText}" Content="{StaticResource Vector.FreeText}"
                                           Padding="2" MinWidth="60" MaxSize="25" Command="u:Commands.FreeText" Style="{StaticResource Style.Button.Horizontal}"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="TitleFrameButton" Grid.Row="1" Text="{DynamicResource Editor.Image.TitleFrame}" Content="{StaticResource Vector.TitleFrame}"
                                           Padding="2" MinWidth="60" MaxSize="25" Command="u:Commands.TitleFrame" Style="{StaticResource Style.Button.Horizontal}"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" Margin="3,2"/>

                    <Grid Grid.Column="4" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="5" Content="{DynamicResource Editor.Image.Overlay}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="FreeDrawButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Image.FreeDrawing}" Content="{StaticResource Vector.FreeDrawing}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Command="u:Commands.FreeDrawing" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="1" x:Name="ProgressButton" Text="{DynamicResource Editor.Image.Progress}" Content="{StaticResource Vector.Progress}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Command="u:Commands.Progress" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="2" Text="{DynamicResource Editor.Image.Clicks}" Content="{StaticResource Vector.Cursor}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Command="u:Commands.MouseClicks" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        
                        <n:ImageButton Grid.Row="0" Grid.Column="3" x:Name="BorderButton" Text="{DynamicResource Editor.Image.Border}" Content="{StaticResource Vector.Border}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Command="u:Commands.Border" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="4" x:Name="ObfuscateButton" Text="{DynamicResource Editor.Image.Obfuscate}" Content="{StaticResource Vector.Obfuscate}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Command="u:Commands.Obfuscate" Style="{StaticResource Style.Button.Vertical2}"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="5">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="WatermarkButton" Grid.Row="0" Text="{DynamicResource Editor.Image.Watermark}" Content="{StaticResource Vector.Watermark}"
                                           Padding="2" MinWidth="60" MaxSize="25" Command="u:Commands.Watermark" Style="{StaticResource Style.Button.Horizontal}"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="CinemagraphButton" Grid.Row="1" Text="{DynamicResource Editor.Image.Cinemagraph}" Content="{StaticResource Vector.Cinemagraph}"
						                   Padding="2" MinWidth="60" MaxSize="25" Command="u:Commands.Cinemagraph" Style="{StaticResource Style.Button.Horizontal}"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" Margin="3,2"/>

                    <Grid Grid.Column="6" Margin="0,1,0,0" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Content="Filters" Padding="0" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="12" Foreground="#FF707070"/>

                        <n:DropDownButton Grid.Row="0" Grid.Column="0" x:Name="FilterButton"  Description="Filters" Content="{StaticResource Vector.Colors}" MaxSize="25" IsVertical="True"
                                          IsEnabled="{Binding ElementName=CropButton, Path=IsEnabled}">
                            <n:ImageMenuItem Header="Grayscale" Image="{StaticResource Vector.Video}" IsHitTestVisible="False" ContentHeight="20" ContentWidth="16"/>
                            <n:ImageMenuItem Header="Blur" Image="{StaticResource Vector.Video}" IsHitTestVisible="False" ContentHeight="20" ContentWidth="16"/>
                            <n:ImageMenuItem Header="Sepia" Image="{StaticResource Vector.Video}" IsHitTestVisible="False" ContentHeight="20" ContentWidth="16"/>
                        </n:DropDownButton>
                    </Grid>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Transitions}" Image="{StaticResource Vector.Fade}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="1" Grid.ColumnSpan="2" x:Name="StylesLabel" Content="{DynamicResource Editor.Transitions.Styles}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Row="0"  Grid.Column="0" x:Name="FadeTransitionButton" Text="{DynamicResource Editor.Transitions.Fade}" Content="{StaticResource Vector.Fade}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.Fade"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="1" x:Name="SlideTransitionButton" Text="{DynamicResource Editor.Transitions.Slide}" Content="{StaticResource Vector.Slide}"
                                       MinWidth="55" ContentHeight="28" ContentWidth="32" Style="{StaticResource Style.Button.Vertical2}" Command="u:Commands.Slide"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Statistics}" Image="{StaticResource Vector.Info}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Invariant}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="8" Content="{DynamicResource Editor.Statistics.General}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <Viewbox Grid.Row="0" Grid.Column="0" Child="{StaticResource Vector.Number}" Height="18" Width="18" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource Editor.Statistics.FrameCount}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" Foreground="Black"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ElementName=FrameListView, Path=Items.Count}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Viewbox Grid.Row="2" Grid.Column="0" Child="{StaticResource Vector.Clock}" Height="18" Width="18" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{DynamicResource Editor.Statistics.TotalDuration}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" Foreground="Black"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding ElementName=EditorWindow, Path=TotalDuration, StringFormat='{}{0:mm\\:ss\\.fff} m'}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Viewbox Grid.Row="0" Grid.Column="3" Child="{StaticResource Vector.WidthHeight}" Height="18" Width="18" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="0" Grid.Column="4" Text="{DynamicResource Editor.Statistics.FrameSize}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" Foreground="Black"/>
                        <TextBlock Grid.Row="1" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0:0.#} × {1:0.#}">
                                    <Binding ElementName="EditorWindow" Path="FrameSize.Width" Mode="OneWay"/>
                                    <Binding ElementName="EditorWindow" Path="FrameSize.Height" Mode="OneWay"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Viewbox Grid.Row="2" Grid.Column="3" Child="{StaticResource Vector.Delay}" Height="18" Width="18" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Grid.Column="4" Text="{DynamicResource Editor.Statistics.AverageDuration}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" Foreground="Black"/>
                        <TextBlock Grid.Row="3" Grid.Column="4" Text="{Binding ElementName=EditorWindow, Path=AverageDelay, StringFormat=0.# ms}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        <Viewbox Grid.Row="0" Grid.Column="6" Child="{StaticResource Vector.Fit}" Height="18" Width="18" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="0" Grid.Column="7" Text="{DynamicResource Editor.Statistics.FrameDpi}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0" Foreground="Black"/>
                        <TextBlock Grid.Row="1" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} DPI / {1} %">
                                    <Binding ElementName="EditorWindow" Path="FrameDpi" Mode="OneWay"/>
                                    <Binding ElementName="EditorWindow" Path="FrameScale" Mode="OneWay"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0" MinWidth="150">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Statistics.SelectedFrame}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <Viewbox Grid.Row="0" Grid.Column="0">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <n:CircularProgressBar StrokeThickness="2" Percentage="100" SegmentColor="Gray" Radius="24"/>
                                <n:CircularProgressBar StrokeThickness="2" Maximum="10010" Minimum="10" Value="{Binding Delay, UpdateSourceTrigger=PropertyChanged}" SegmentColor="#FFE28A73" Radius="24"/>
                                <n:CircularProgressBar StrokeThickness="22" Percentage="100" SegmentColor="#FFF0F1F1" Radius="10" />
                                <n:CircularProgressBar StrokeThickness="22" Maximum="10010" Minimum="10" Value="{Binding Delay, UpdateSourceTrigger=PropertyChanged}" SegmentColor="#FFE28A73" Radius="10" />
                            </Grid>
                        </Viewbox>

                        <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} ms">
                                    <Binding Path="Delay" Mode="OneWay" FallbackValue="0" UpdateSourceTrigger="PropertyChanged"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Grid>
            </n:AwareTabItem>
        </n:HideableTabControl>

        <!--Hack for the extended title bar-->
        <Grid Grid.Row="1" Grid.RowSpan="3" Background="#FFF1F1F1"/>

        <!--Middle of the Window-->
        <Grid Grid.Row="1" x:Name="MiddleGrid" Background="{StaticResource Checker.DrawingBrush}" 
              IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <n:StatusList Grid.Row="0" x:Name="StatusList"/>

            <n:ZoomBox Grid.Row="1" Grid.Column="0" x:Name="ZoomBoxControl" Background="Transparent" ClipToBounds="True" Focusable="False" IsTabStop="False"
                       AllowDrop="True" Drop="Control_Drop" DragEnter="Control_DragEnter" PreviewMouseWheel="ZoomBox_MouseWheel">
                <n:ZoomBox.ContextMenu>
                    <ContextMenu>
                        <n:ImageMenuItem x:Name="PlayMenuItem" Header="{DynamicResource Editor.Playback.Play}" Image="{StaticResource Vector.Play}" ContentHeight="16" ContentWidth="16" Command="u:Commands.Play"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Editor.Home.Undo}" Image="{StaticResource Vector.Undo}" ContentHeight="16" ContentWidth="16" Command="Undo"/>
                        <n:ImageMenuItem Header="{DynamicResource Editor.Home.Redo}" Image="{StaticResource Vector.Redo}" ContentHeight="16" ContentWidth="16" Command="Redo"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Context.SaveAs}" Image="{StaticResource Vector.Gif}" ContentHeight="16" ContentWidth="16" Command="u:Commands.SaveAs"/>
                        <n:ImageMenuItem Header="{DynamicResource Recorder.Discard}" Image="{StaticResource Vector.Remove}" ContentHeight="16" ContentWidth="16" Command="u:Commands.DiscardProject"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Context.RemoveFrames}" Image="{StaticResource Vector.RemoveImage}" ContentHeight="16" ContentWidth="16" Command="Delete"/>
                    </ContextMenu>
                </n:ZoomBox.ContextMenu>
            </n:ZoomBox>

            <ScrollViewer Grid.Row="1" Grid.Column="0" x:Name="MainScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                          PreviewMouseWheel="ZoomBox_MouseWheel" Visibility="{Binding Path=Visibility, ElementName=OverlayGrid}">
                <Grid x:Name="OverlayGrid" Visibility="Collapsed" Opacity="0">

                    <Label x:Name="OverlayLabel" Content="{DynamicResource Preview}" VerticalAlignment="Top" HorizontalAlignment="Left" 
                           FontSize="16" FontWeight="Light" Foreground="#FF347E4B" Effect="{StaticResource Shadow.Foreground.Small}"/>

                    <AdornerDecorator Visibility="{Binding ElementName=CropGrid, Path=Visibility}">
                        <Grid x:Name="CropAreaGrid" VerticalAlignment="Center" HorizontalAlignment="Center" 
                              Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                              Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                              Visibility="{Binding ElementName=CropGrid, Path=Visibility}"/>
                    </AdornerDecorator>

                    <Grid x:Name="CaptionOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Visibility="{Binding ElementName=CaptionGrid, Path=Visibility}">
                        <n:TextPath x:Name="CaptionOverlayLabel" FontFamily="{Binding ElementName=CaptionFontComboBox, Path=SelectedItem}" 
                                    FontStyle="{Binding ElementName=CaptionFontStyleComboBox, Path=SelectedValue}"
                                    FontWeight="{Binding ElementName=CaptionFontWeightComboBox, Path=SelectedValue}"
                                    FontSize="{Binding ElementName=CaptionFontSizeNumericUpDown, Path=Value}"
                                    Fill="{Binding ElementName=CaptionFontColorBox, Path=SelectedBrush}"
                                    Stroke="{Binding ElementName=CaptionOutlineColorBox, Path=SelectedBrush}"
                                    StrokeThickness="{Binding ElementName=CaptionOutlineThicknessNumericUpDown, Path=Value}"
                                    VerticalAlignment="{Binding ElementName=CaptionVerticalAligmentComboBox, Path=SelectedValue}"
                                    HorizontalAlignment="{Binding ElementName=CaptionHorizontalAligmentComboBox, Path=SelectedValue}"
                                    Margin="{Binding ElementName=CaptionMarginNumericUpDown, Path=Value}"
                                    Text="{Binding ElementName=CaptionTextBox, Path=Text}"/>
                    </Grid>

                    <n:MoveResizeControl x:Name="FreeTextOverlayControl" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                                         Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                                         Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                                         Visibility="{Binding ElementName=FreeTextGrid, Path=Visibility}">
                        <TextBlock x:Name="FreeTextTextBlock" Padding="0"
                                   Text="{Binding ElementName=FreeTextTextBox, Path=Text}" 
                                   FontFamily="{Binding ElementName=FreeTextFontComboBox, Path=SelectedItem}" 
                                   FontStyle="{Binding ElementName=FreeTextFontStyleComboBox, Path=SelectedValue}"
                                   FontWeight="{Binding ElementName=FreeTextFontWeightComboBox, Path=SelectedValue}"
                                   FontSize="{Binding ElementName=FreeTextFontSizeNumericUpDown, Path=Value}"
                                   Foreground="{Binding ElementName=FreeTextFontColorBox, Path=SelectedBrush}"/>
                    </n:MoveResizeControl>

                    <Grid x:Name="TitleFrameOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                          Visibility="{Binding ElementName=TitleFrameGrid, Path=Visibility}" 
                          Background="{Binding ElementName=TitleFrameBackgroundColorBox, Path=SelectedBrush}">
                        <TextBlock x:Name="TitleFrameTextBlock" Padding="0"
                                   Text="{Binding ElementName=TitleFrameTextBox, Path=Text}" 
                                   FontFamily="{Binding ElementName=TitleFrameFontComboBox, Path=SelectedItem}" 
                                   FontStyle="{Binding ElementName=TitleFrameFontStyleComboBox, Path=SelectedValue}"
                                   FontWeight="{Binding ElementName=TitleFrameFontWeightComboBox, Path=SelectedValue}"
                                   FontSize="{Binding ElementName=TitleFrameFontSizeNumericUpDown, Path=Value}"
                                   Foreground="{Binding ElementName=TitleFrameFontColorBox, Path=SelectedBrush}"
                                   VerticalAlignment="{Binding ElementName=TitleFrameVerticalAligmentComboBox, Path=SelectedValue}"
                                   HorizontalAlignment="{Binding ElementName=TitleFrameHorizontalAligmentComboBox, Path=SelectedValue}"
                                   Margin="{Binding ElementName=TitleFrameMarginNumericUpDown, Path=Value}"/>
                    </Grid>

                    <Grid x:Name="KeyStrokesOverlayGrid" ClipToBounds="True"
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}"
                          Visibility="{Binding ElementName=KeyStrokesGrid, Path=Visibility}">
                        <Grid x:Name="KeyStrokesInternalGrid" HorizontalAlignment="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesHorizontalAligment}" 
                              VerticalAlignment="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesVerticalAligment}"
                              Background="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesBackgroundColor, Converter={StaticResource ColorToBrush}}"
                              Margin="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesMargin}">
                            <n:TextPath x:Name="KeyStrokesLabel" Text="Control + C" VerticalAlignment="Stretch" HorizontalAlignment="Center"
                                        FontFamily="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontFamily}" 
                                        FontStyle="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontStyle}"
                                        FontWeight="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontWeight}"
                                        FontSize="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontSize}"
                                        Fill="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontColor, Converter={StaticResource ColorToBrush}}"
                                        Stroke="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesOutlineColor, Converter={StaticResource ColorToBrush}}"
                                        StrokeThickness="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesOutlineThickness}"
                                        Margin="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesPadding}"/>
                        </Grid>
                    </Grid>

                    <n:InkCanvasExtended x:Name="FreeDrawingInkCanvas" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                                         Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" MinWidth="10" 
                                         Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}" MinHeight="10"
                                         Visibility="{Binding ElementName=FreeDrawingGrid, Path=Visibility}" Background="Transparent"
                                         PreviewKeyDown="InkCanvas_PreviewKeyDown">

                        <n:InkCanvasExtended.EditingMode>
                            <MultiBinding Converter="{StaticResource SelectionToEditingModeConverter}">
                                <Binding ElementName="PenModeRadioButton" Path="IsChecked"/>
                                <Binding ElementName="EraserModeRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SelectorModeRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EditingMode>

                        <n:InkCanvasExtended.DefaultDrawingAttributes>
                            <MultiBinding Converter="{StaticResource SelectionToDrawingAttributesConverter}">
                                <Binding ElementName="FreeDrawingHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="FreeDrawingWidthNumericUpDown" Path="Value"/>
                                <Binding ElementName="FreeDrawingColorBox" Path="SelectedColor"/>
                                <Binding ElementName="FitToCurveCheckBox" Path="IsChecked"/>
                                <Binding ElementName="IsHighLighterCheckBox" Path="IsChecked"/>
                                <Binding ElementName="RectangleRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.DefaultDrawingAttributes>

                        <n:InkCanvasExtended.EraserShape>
                            <MultiBinding Converter="{StaticResource SelectionToStylusShapeConverter}">
                                <Binding ElementName="FreeDrawingEraserWidthNumericUpDown" Path="Value"/>
                                <Binding ElementName="FreeDrawingEraserHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="RectangleEraserRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EraserShape>
                    </n:InkCanvasExtended>

                    <n:MoveResizeControl x:Name="WatermarkOverlayCanvas" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True" CanResize="True"
                                         Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                                         Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                                         Visibility="{Binding ElementName=WatermarkGrid, Path=Visibility}"
                                         Top="{Binding ElementName=TopWatermarkDoubleUpDown, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"
                                         Left="{Binding ElementName=LeftWatermarkDoubleUpDown, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"
                                         ContentScale="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkSize}">
                        <Image x:Name="WatermarkImage" Stretch="Fill" RenderTransformOrigin="0.5,0.5"
                               Source="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkFilePath, Converter={StaticResource UriToBitmapConverter}}"
                               Opacity="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkOpacity}"/>
                    </n:MoveResizeControl>

                    <Border x:Name="BorderOverlayBorder" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                            Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                            Visibility="{Binding ElementName=BorderGrid, Path=Visibility}"
                            BorderBrush="{Binding ElementName=BorderColorBox, Path=SelectedBrush}">
                        <Border.BorderThickness>
                            <MultiBinding Converter="{StaticResource DoubleToThicknessConverter}">
                                <Binding ElementName="BorderLeftThicknessNumericUpDown" Path="Value"/>
                                <Binding ElementName="BorderTopThicknessNumericUpDown" Path="Value"/>
                                <Binding ElementName="BorderRightThicknessNumericUpDown" Path="Value"/>
                                <Binding ElementName="BorderBottomThicknessNumericUpDown" Path="Value"/>
                            </MultiBinding>
                        </Border.BorderThickness>
                    </Border>

                    <n:SelectControl x:Name="ObfuscateOverlaySelectControl" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                                     Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                                     Visibility="{Binding ElementName=ObfuscateGrid, Path=Visibility}" EmbeddedMode="True"/>

                    <Grid x:Name="ProgressOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" MinWidth="10" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}" MinHeight="10"
                          Visibility="{Binding ElementName=ProgressGrid, Path=Visibility}" Background="Transparent">

                        <Grid Visibility="{Binding ProgressType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static u:ProgressType.Bar}}">
                            <Rectangle Name="ProgressHorizontalRectangle" Height="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressThickness}"
                                       Visibility="{Binding ProgressOrientation, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static Orientation.Horizontal}}"
                                       Fill="{Binding ProgressColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}" 
                                       VerticalAlignment="{Binding ProgressVerticalAligment, Source={x:Static u:UserSettings.All}}" 
                                       HorizontalAlignment="{Binding ProgressHorizontalAligment, Source={x:Static u:UserSettings.All}}"/>

                            <Rectangle Name="ProgressVerticalRectangle" Width="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressThickness}"
                                       Visibility="{Binding ProgressOrientation, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static Orientation.Vertical}}"
                                       Fill="{Binding ProgressColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}" 
                                       VerticalAlignment="{Binding ProgressVerticalAligment, Source={x:Static u:UserSettings.All}}" 
                                       HorizontalAlignment="{Binding ProgressHorizontalAligment, Source={x:Static u:UserSettings.All}}"/>
                        </Grid>

                        <TextBlock Name="ProgressHorizontalTextBlock" Padding="2,0" 
                                   Background="{Binding ProgressColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}" 
                                   Foreground="{Binding ProgressFontColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}" 
                                   VerticalAlignment="{Binding ProgressVerticalAligment, Source={x:Static u:UserSettings.All}}" 
                                   HorizontalAlignment="{Binding ProgressHorizontalAligment, Source={x:Static u:UserSettings.All}}"
                                   Visibility="{Binding ProgressType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static u:ProgressType.Text}}"
                                   FontFamily="{Binding ElementName=ProgressFontComboBox, Path=SelectedItem}" 
                                   FontStyle="{Binding ElementName=ProgressFontStyleComboBox, Path=SelectedValue}"
                                   FontWeight="{Binding ElementName=ProgressFontWeightComboBox, Path=SelectedValue}"
                                   FontSize="{Binding ElementName=ProgressFontSizeNumericUpDown, Path=Value}"/>
                    </Grid>

                    <n:InkCanvasExtended x:Name="CinemagraphInkCanvas" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                                         Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" MinWidth="10" 
                                         Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}" MinHeight="10"
                                         Visibility="{Binding ElementName=CinemagraphGrid, Path=Visibility}" Background="Transparent"
                                         PreviewKeyDown="InkCanvas_PreviewKeyDown">

                        <n:InkCanvasExtended.EditingMode>
                            <MultiBinding Converter="{StaticResource SelectionToEditingModeConverter}">
                                <Binding ElementName="PenMode2RadioButton" Path="IsChecked"/>
                                <Binding ElementName="EraserMode2RadioButton" Path="IsChecked"/>
                                <Binding ElementName="SelectorMode2RadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EditingMode>

                        <n:InkCanvasExtended.DefaultDrawingAttributes>
                            <MultiBinding Converter="{StaticResource SelectionToDrawingAttributesConverter}">
                                <Binding ElementName="CinemagraphHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="CinemagraphWidthNumericUpDown" Path="Value"/>
                                <Binding Source="{x:Static u:UserSettings.All}" Path="CinemagraphColor"/>
                                <Binding ElementName="FitToCurve2CheckBox" Path="IsChecked"/>
                                <Binding Source="{x:Static u:UserSettings.All}" Path="CinemagraphIsHighlighter"/>
                                <Binding ElementName="Rectangle2RadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.DefaultDrawingAttributes>

                        <n:InkCanvasExtended.EraserShape>
                            <MultiBinding Converter="{StaticResource SelectionToStylusShapeConverter}">
                                <Binding ElementName="CinemagraphEraserWidthNumericUpDown" Path="Value"/>
                                <Binding ElementName="CinemagraphEraserHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="RectangleEraser2RadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EraserShape>
                    </n:InkCanvasExtended>
                </Grid>
            </ScrollViewer>

            <Grid Grid.Row="1" Grid.Column="0" x:Name="WelcomeGrid" Background="WhiteSmoke" Visibility="Visible" AllowDrop="True" Drop="Control_Drop" DragEnter="Control_DragEnter">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewRecording}" Image="{StaticResource Vector.Record.New}" ContentHeight="16" ContentWidth="16" Command="u:Commands.NewRecording"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewWebcamRecording}" Image="{StaticResource Vector.Camera.New}" ContentHeight="16" ContentWidth="16" Command="u:Commands.NewWebcamRecording"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewBoardRecording}" Image="{StaticResource Vector.Board.New}" ContentHeight="16" ContentWidth="16" Command="u:Commands.NewBoardRecording"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewBlankAnimation}" Image="{StaticResource Vector.File.New}" ContentHeight="16" ContentWidth="16" Command="u:Commands.NewAnimation"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewFromMediaProject}" Image="{StaticResource Vector.Open}" ContentHeight="16" ContentWidth="16" Command="u:Commands.Load"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock FontSize="28" Foreground="#FFC0C0C0" FontFamily="Segoe UI Semilight" HorizontalAlignment="Center" Effect="{StaticResource Shadow.Foreground.Small}"
                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=Version, StringFormat=ScreenToGif {0}}"/>

                    <Separator Height="1"/>

                    <TextBlock x:Name="WelcomeTextBlock" FontSize="16" Foreground="#FFC0C0C0" FontFamily="Segoe UI Semilight" HorizontalAlignment="Center" 
                               TextWrapping="Wrap" Effect="{StaticResource Shadow.Foreground.Small}"/>

                    <!--<TextBlock FontSize="16" Foreground="#FFC0C0C0" FontFamily="Segoe UI Semilight" HorizontalAlignment="Center" Effect="{StaticResource Shadow.Foreground.Small}">
                        <Hyperlink Command="u:Commands.LoadRecent" Cursor="Hand" TextDecorations="{x:Null}">
                            <Run>Open recent projects</Run>
                        </Hyperlink>
                    </TextBlock>-->

                    <TextBlock x:Name="SymbolTextBlock" Text=":D" Foreground="#FFD0D0D0" FontSize="40" FontFamily="Segoe UI Semilight" 
                               TextWrapping="WrapWithOverflow" VerticalAlignment="Center" HorizontalAlignment="Center" Effect="{StaticResource Shadow.Foreground.Small}"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" x:Name="ActionGrid" Width="0" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!--Title-->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.Column="0" x:Name="ActionViewBox" Margin="5,3,0,3" MinWidth="20" MaxHeight="20" Stretch="Uniform" 
                             Child="{StaticResource Vector.Info}" />

                    <Label Grid.Column="1" x:Name="ActionTitleLabel" Content="Title" Padding="5,0,0,0" VerticalAlignment="Center"/>

                    <n:ImageButton Grid.Column="2" x:Name="HideButton" Content="{DynamicResource Vector.Close}" ContentHeight="16" HorizontalContentAlignment="Center" HorizontalAlignment="Center"
                                   Style="{DynamicResource Style.Button.NoText}" MinWidth="30" Command="u:Commands.CancelAction">
                        <n:ImageButton.ToolTip>
                            <ToolTip Content="{DynamicResource Action.Hide}" Placement="Top" HorizontalOffset="-5"/>
                        </n:ImageButton.ToolTip>
                    </n:ImageButton>
                </Grid>

                <!--Content-->
                <ScrollViewer Grid.Row="1" x:Name="ActionScrollViewer" VerticalScrollBarVisibility="Auto">
                    <Grid x:Name="ActionInternalGrid">
                        <Grid x:Name="NewGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Size}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource ImportVideo.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="NewImageWidthNumericUpDown" Minimum="10" Maximum="2000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=NewAnimationWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="NewImageHeightNumericUpDown" Minimum="10" Maximum="2000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=NewAnimationHeight, Mode=TwoWay}"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Background}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Color}" VerticalAlignment="Center" Padding="0"/>
                                <n:ColorBox Grid.Row="1" Grid.Column="1" SelectedColor="{Binding NewAnimationColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,3"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="SaveGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Expander Grid.Row="0" Header="{DynamicResource S.SaveAs.Type}" IsExpanded="{Binding IsSaveTypeExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="GifRadioButton" Content="{StaticResource Vector.Gif}" Text="{DynamicResource S.SaveAs.Gif}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Gif}}"
                                                        Checked="SaveType_Checked"/>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ApngRadioButton" Content="{StaticResource Vector.Apng}" Text="{DynamicResource S.SaveAs.Apng}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Apng}}"
                                                        Checked="SaveType_Checked"/>

                                    <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="VideoRadioButton" Content="{StaticResource Vector.Video}" Text="{DynamicResource S.SaveAs.Video}"
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Video}}"
                                                        Checked="SaveType_Checked"/>

                                    <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="ProjectRadioButton" Content="{StaticResource Vector.Project}" Text="{DynamicResource S.SaveAs.Project}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Project}}"
                                                        Checked="SaveType_Checked"/>

                                    <n:ImageRadioButton Grid.Row="2" Grid.Column="0" x:Name="ImagesRadioButton" Content="{StaticResource Vector.ImageStack}" Text="{DynamicResource S.SaveAs.Images}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Images}}"
                                                        Checked="SaveType_Checked"/>

                                    <n:ImageRadioButton Grid.Row="2" Grid.Column="1" x:Name="PsdRadioButton" Content="{StaticResource Vector.ImageStack}" Text="{DynamicResource S.SaveAs.Psd}" 
                                                        IsChecked="{Binding SaveType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Photoshop}}"
                                                        Checked="SaveType_Checked" Visibility="Collapsed"/>
                                </Grid>
                            </Expander>


                            <n:LabelSeparator Grid.Row="1" x:Name="EncoderLabelSeparator" Text="{DynamicResource S.SaveAs.Encoder}" Height="27">
                                <n:LabelSeparator.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                        <Binding ElementName="GifRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="VideoRadioButton" Path="IsChecked"/>
                                    </MultiBinding>
                                </n:LabelSeparator.Visibility>
                            </n:LabelSeparator>
                            <WrapPanel Grid.Row="2" Margin="10,0,0,0" Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <n:ImageRadioButton x:Name="NewEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.ScreenToGif}" 
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.ScreenToGif}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.ScreenToGif.Tooltip}"/>
                                <Separator Width="1"/>
                                <n:ImageRadioButton x:Name="LegacyEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Legacy}" 
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.Legacy}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.Legacy.Tooltip}"/>
                                <Separator Width="1"/>
                                <n:ImageRadioButton x:Name="PaintNetEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.System}"
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.PaintNet}}"
                                                    ToolTip="{DynamicResource S.SaveAs.Encoder.System.Tooltip}"/>
                                <Separator Width="1"/>
                                <n:ImageRadioButton x:Name="FfmpegGifEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Ffmpeg}"
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.FFmpeg}}"/>
                                <Separator Width="1"/>
                                <n:ImageRadioButton x:Name="GifskiGifEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Gifski}"
                                                    IsChecked="{Binding GifEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.Gifski}}"/>
                            </WrapPanel>

                            <WrapPanel Grid.Row="2" Margin="10,0,0,0" Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <n:ImageRadioButton x:Name="SystemEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.System}"
                                                    IsChecked="{Binding VideoEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:VideoEncoderType.AviStandalone}}"
                                                    Checked="VideoEncoderRadioButton_Checked"/>
                                <Separator Width="1"/>
                                <n:ImageRadioButton x:Name="FfmpegEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.Encoder.Ffmpeg}"
                                                    IsChecked="{Binding VideoEncoder, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:VideoEncoderType.Ffmpg}}"
                                                    Checked="VideoEncoderRadioButton_Checked"/>
                            </WrapPanel>


                            <n:LabelSeparator Grid.Row="3" Text="{DynamicResource S.SaveAs.ImagesOptions}" Height="27" Visibility="{Binding ElementName=ImagesRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            <WrapPanel Grid.Row="4" Margin="10,0,0,0" Orientation="Vertical" Visibility="{Binding ElementName=ImagesRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <n:ExtendedCheckBox x:Name="ZipImagesCheckBox" Text="{DynamicResource S.SaveAs.ImageOptions.Zip}"
                                                    IsChecked="{Binding ZipImages, Source={x:Static u:UserSettings.All}}" Margin="3"
                                                    Checked="SaveType_Checked" Unchecked="SaveType_Checked"/>
                            </WrapPanel>


                            <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.GifOptions}" Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsGifOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.SaveAs.Quality}" VerticalAlignment="Center" Margin="10,3,3,3"
                                           Padding="0">
                                        <Label.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                                <Binding Path="IsChecked" ElementName="LegacyEncoderRadioButton"/>
                                                <Binding Path="IsChecked" ElementName="GifskiGifEncoderRadioButton"/>
                                            </MultiBinding>
                                        </Label.Visibility>
                                    </Label>

                                    <Slider Grid.Row="0" Grid.Column="1" x:Name="QualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                            Minimum="1" Maximum="20" Value="{Binding Quality, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" 
                                            SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                            Visibility="{Binding IsChecked, ElementName=LegacyEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <Slider Grid.Row="0" Grid.Column="1" x:Name="GifskiQualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                            Minimum="2" Maximum="100" Value="{Binding GifskiQuality, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" 
                                            SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                            Visibility="{Binding IsChecked, ElementName=GifskiGifEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.SaveAs.GifOptions.Colors}" VerticalAlignment="Center" Padding="0" Margin="10,3,3,3"
                                           Visibility="{Binding IsChecked, ElementName=NewEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:IntegerUpDown Grid.Row="1" Grid.Column="1" Margin="5" Width="80" Minimum="2" Maximum="256" HorizontalAlignment="Left" UpdateOnInput="True"
                                                     Value="{Binding MaximumColors, Source={x:Static u:UserSettings.All}, Mode=TwoWay}" ToolTip="{DynamicResource S.SaveAs.GifOptions.Colors.Info}"
                                                     Visibility="{Binding IsChecked, ElementName=NewEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <n:ExtendedCheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="LoopedCheckBox" Text="{DynamicResource S.SaveAs.GifOptions.LoopedGif}" 
                                                        IsChecked="{Binding Looped, Source={x:Static u:UserSettings.All}}" Margin="10,3,3,3">
                                        <n:ExtendedCheckBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                                <Binding Path="IsChecked" ElementName="NewEncoderRadioButton"/>
                                                <Binding Path="IsChecked" ElementName="LegacyEncoderRadioButton"/>
                                                <Binding Path="IsChecked" ElementName="PaintNetEncoderRadioButton"/>
                                            </MultiBinding>
                                        </n:ExtendedCheckBox.Visibility>
                                    </n:ExtendedCheckBox>

                                    <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Grid.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolAndToVisibility}">
                                                <Binding Path="IsChecked" ElementName="LoopedCheckBox"/>
                                                <Binding Path="IsChecked" ElementName="FfmpegGifEncoderRadioButton" Converter="{StaticResource InvertedBool}"/>
                                            </MultiBinding>
                                        </Grid.Visibility>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RepeatForeverCheckBox" Margin="20,3,3,3"
                                                            Text="{DynamicResource S.SaveAs.GifOptions.RepeatForever}" IsChecked="{Binding RepeatForever, Source={x:Static u:UserSettings.All}}"/>

                                        <n:IntegerUpDown Grid.Row="1" Grid.Column="0" x:Name="RepeatCountNumericUpDown" Margin="20,3,3,3" StepValue="1" Minimum="1" Maximum="100" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=RepeatCount, Mode=TwoWay}" MinWidth="45" 
                                                         IsEnabled="{Binding IsChecked, ElementName=RepeatForeverCheckBox, Converter={StaticResource InvertedBool}}"
                                                         Visibility="{Binding IsChecked, ElementName=GifskiGifEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}"/>
                                        <Label Margin="0,3" Grid.Column="1" Content="{DynamicResource S.SaveAs.GifOptions.RepeatCount}" Grid.Row="1" Foreground="#FF444444" 
                                               IsEnabled="{Binding IsChecked, ElementName=RepeatForeverCheckBox, Converter={StaticResource InvertedBool}}"
                                               Visibility="{Binding IsChecked, ElementName=GifskiGifEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}"/>
                                    </Grid>

                                    <n:ExtendedCheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" x:Name="DetectCheckBox" Margin="10,3,3,3" Text="{DynamicResource S.SaveAs.GifOptions.DetectUnchanged}" 
                                                        IsChecked="{Binding DetectUnchanged, Source={x:Static u:UserSettings.All}}">
                                        <n:ExtendedCheckBox.Visibility>
                                            <MultiBinding Converter="{StaticResource BoolOrToVisibility}">
                                                <Binding ElementName="NewEncoderRadioButton" Path="IsChecked"/>
                                                <Binding ElementName="LegacyEncoderRadioButton" Path="IsChecked"/>
                                            </MultiBinding>
                                        </n:ExtendedCheckBox.Visibility>
                                    </n:ExtendedCheckBox>

                                    <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding Visibility, ElementName=DetectCheckBox}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="PaintTransparentCheckBox" Text="{DynamicResource S.SaveAs.GifOptions.PaintWithDummy}" 
                                                            IsChecked="{Binding PaintTransparent, Source={x:Static u:UserSettings.All}}" Margin="20,3,3,3"
                                                            Visibility="{Binding IsChecked, ElementName=DetectCheckBox, Converter={StaticResource Bool2Visibility}}"/>

                                        <n:ImageButton Grid.Row="1" Text="{DynamicResource S.SaveAs.GifOptions.SelectDummyColor}" MaxSize="20" Margin="30,3,3,3"
                                                       Visibility="{Binding IsChecked, ElementName=PaintTransparentCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                       HorizontalAlignment="Left" MinHeight="25" Padding="2" Click="TransparentColorButton_Click">
                                            <n:ImageButton.Content>
                                                <Border Background="{Binding ChromaKey, Source={x:Static u:UserSettings.All}, Converter={StaticResource ColorToBrush}}" 
                                                        BorderThickness="1" BorderBrush="#FFABABAB" Height="20" Width="20"/>
                                            </n:ImageButton.Content>
                                        </n:ImageButton>
                                    </Grid>

                                    <Label Grid.Row="6" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0" Margin="10,3,3,3"
                                           Visibility="{Binding IsChecked, ElementName=FfmpegGifEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <n:ExtendedTextBox Grid.Row="6" Grid.Column="1" MinHeight="23" Margin="5,3" Text="{Binding Source={x:Static u:UserSettings.All}, Path=ExtraParametersGif}"
                                                       Visibility="{Binding IsChecked, ElementName=FfmpegGifEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow"/>
                                </Grid>
                            </Expander>


                            <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.ApngOptions}" Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsApngOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <n:ExtendedCheckBox Grid.Row="0" x:Name="LoopedApngCheckBox" Text="{DynamicResource S.SaveAs.GifOptions.LoopedApng}" 
                                                        IsChecked="{Binding Looped, Source={x:Static u:UserSettings.All}}" Margin="10,3,3,3"/>

                                    <Grid Grid.Row="1" Visibility="{Binding IsChecked, ElementName=LoopedApngCheckBox, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RepeatForeverApngCheckBox" Margin="20,3,3,3"
                                                            Text="{DynamicResource S.SaveAs.GifOptions.RepeatForever}" IsChecked="{Binding RepeatForever, Source={x:Static u:UserSettings.All}}"/>

                                        <n:IntegerUpDown Grid.Row="1" Grid.Column="0" x:Name="RepeatCountApngIntegerUpDown" Margin="20,3,3,3" StepValue="1" Minimum="1" Maximum="100" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=RepeatCount, Mode=TwoWay}" MinWidth="45" 
                                                         IsEnabled="{Binding IsChecked, ElementName=RepeatForeverApngCheckBox, Converter={StaticResource InvertedBool}}"/>
                                        <Label Margin="0,3" Grid.Column="1" Content="{DynamicResource S.SaveAs.GifOptions.RepeatCount}" Grid.Row="1" Foreground="#FF444444" 
                                               IsEnabled="{Binding IsChecked, ElementName=RepeatForeverApngCheckBox, Converter={StaticResource InvertedBool}}"/>
                                    </Grid>

                                    <n:ExtendedCheckBox Grid.Row="2" x:Name="DetectApngCheckBox" Margin="10,3,3,3" Text="{DynamicResource S.SaveAs.ApngOptions.DetectUnchanged}" 
                                                        IsChecked="{Binding DetectUnchanged, Source={x:Static u:UserSettings.All}}"/>

                                    <n:ExtendedCheckBox Grid.Row="3" x:Name="PaintTransparentApngCheckBox" Margin="20,3,3,3" Text="{DynamicResource S.SaveAs.ApngOptions.PaintTransparent}" 
                                                        IsChecked="{Binding PaintTransparent, Source={x:Static u:UserSettings.All}}" 
                                                        Visibility="{Binding IsChecked, ElementName=DetectApngCheckBox, Converter={StaticResource Bool2Visibility}}"/>
                                </Grid>
                            </Expander>


                            <Expander Grid.Row="3" Header="{DynamicResource S.SaveAs.VideoOptions}" Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}"
                                      IsExpanded="{Binding IsVideoOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.SaveAs.Quality}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                    <Slider Grid.Row="0" Grid.Column="1" x:Name="AviQualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                            Maximum="20000" Minimum="1" Value="{Binding AviQuality, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" 
                                            SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                            Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:ExtendedCheckBox Grid.Row="1" Grid.Column="1" x:Name="FlipVideoCheckBox" Text="{DynamicResource S.SaveAs.FlipVertically}"
                                                        IsChecked="{Binding FlipVideo, Mode=TwoWay, Source={x:Static u:UserSettings.All}}" Margin="3"
                                                        Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource S.SaveAs.VideoOptions.Fps}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="FpsNumericUpDown" Minimum="1" Maximum="60" Margin="5,3" MinWidth="80" 
                                                     HorizontalAlignment="Left" Value="{Binding Source={x:Static u:UserSettings.All}, Path=OutputFramerate, Mode=TwoWay}"
                                                     Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource S.SaveAs.Extras}" VerticalAlignment="Center" Padding="0"
                                           Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                    <n:ExtendedTextBox Grid.Row="3" Grid.Column="1" MinHeight="23" Margin="5,3" Text="{Binding Source={x:Static u:UserSettings.All}, Path=ExtraParameters}"
                                                       Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow"/>
                                </Grid>
                            </Expander>


                            <Expander Grid.Row="5" Header="{DynamicResource S.SaveAs.SaveOptions}" IsExpanded="{Binding IsSaveOptionsExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid>
                                    <Grid Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                        <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFileCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSave, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                            <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectToo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>

                                        <n:ExtendedCheckBox Grid.Row="2" x:Name="UploadFileCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.UploadFile}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=UploadFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <Grid Grid.Row="3">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="30"/>
                                            </Grid.ColumnDefinitions>

                                            <ComboBox Grid.Column="0" Name="UploadComboBox" Margin="20,3,3,3" Height="23" SelectedValuePath="Tag"
                                                      SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=LatestUploadService, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Visibility="{Binding IsChecked, ElementName=UploadFileCheckBox, Converter={StaticResource Bool2Visibility}}" ToolTip="{DynamicResource S.SaveAs.SaveOptions.UploadDestination}">
                                                <ComboBoxItem Tag="{x:Static u:UploadService.None}" Content="{DynamicResource S.Upload.Pick.Destination}"/>
                                                <ComboBoxItem Tag="{x:Static u:UploadService.ImgurAnonymous}" Content="{DynamicResource S.Upload.Imgur.Anonymous}"/>
                                                <ComboBoxItem Tag="{x:Static u:UploadService.Imgur}" Content="Imgur"/>
                                                <ComboBoxItem Tag="{x:Static u:UploadService.GyfcatAnonymous}" Content="{DynamicResource S.Upload.Gyfcat.Anonymous}"/>
                                                <ComboBoxItem Tag="{x:Static u:UploadService.Yandex}" Content="YandexDisk"/>
                                            </ComboBox>
                                        </Grid>

                                        <n:ExtendedCheckBox Grid.Row="4" x:Name="CopyFileCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboard}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                        <WrapPanel Grid.Row="5" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileCheckBox, Converter={StaticResource Bool2Visibility}}">
                                            <n:ImageRadioButton x:Name="CopyFileRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFolderPathRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFilePathRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyLinkRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.Link}"
                                                                IsChecked="{Binding LatestCopyType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.Link}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.Link.Info}"/>
                                        </WrapPanel>

                                        <n:ExtendedCheckBox Grid.Row="6" x:Name="CustomCommandsCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <n:ExtendedTextBox Grid.Row="7" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                           Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                                    </Grid>

                                    <Grid Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileApngCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocationApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                        <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFileApngCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                            <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectTooApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>

                                        <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFileApngCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardApng}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                        <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileApngCheckBox, Converter={StaticResource Bool2Visibility}}">
                                            <n:ImageRadioButton x:Name="CopyFileApngRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypeApng, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFolderPathApngRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypeApng, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFilePathApngRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypeApng, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                        </WrapPanel>

                                        <n:ExtendedCheckBox Grid.Row="4" x:Name="CustomCommandsApngCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommandsApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <n:ExtendedTextBox Grid.Row="5" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                           Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommandsApng, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsApngCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                                    </Grid>

                                    <Grid Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileVideoCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocationVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                        <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFileVideoCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                            <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectTooVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>

                                        <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFileVideoCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardVideo}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                        <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileVideoCheckBox, Converter={StaticResource Bool2Visibility}}">
                                            <n:ImageRadioButton x:Name="CopyFileVideoRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypeVideo, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFolderPathVideoRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypeVideo, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFilePathVideoRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypeVideo, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                        </WrapPanel>

                                        <n:ExtendedCheckBox Grid.Row="4" x:Name="CustomCommandsVideoCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommandsVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <n:ExtendedTextBox Grid.Row="5" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                           Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommandsVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsVideoCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                                    </Grid>

                                    <Grid Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileProjectCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="True" IsEnabled="False"/>

                                        <Grid Grid.Row="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveProject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>

                                        <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFileProjectCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardProject}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                        <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFileProjectCheckBox, Converter={StaticResource Bool2Visibility}}">
                                            <n:ImageRadioButton x:Name="CopyFileProjectRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypeProject, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFolderPathProjectRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypeProject, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFilePathProjectRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypeProject, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                        </WrapPanel>
                                    </Grid>

                                    <Grid Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFileImagesCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="True" IsEnabled="False"/>

                                        <Grid Grid.Row="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSaveImages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </Grid>

                                    <Grid Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <n:ExtendedCheckBox Grid.Row="0" x:Name="SaveFilePsdCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.PickFolder}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=PickLocationPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            CheckedChanged="SaveType_Checked"/>

                                        <Grid Grid.Row="1" Visibility="{Binding ElementName=SaveFilePsdCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <n:ExtendedCheckBox Grid.Row="0" Text="{DynamicResource S.SaveAs.SaveOptions.Overwrite}" Margin="20,3,3,3" 
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=OverwriteOnSavePhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                            <n:ExtendedCheckBox Grid.Row="1" Text="{DynamicResource S.SaveAs.SaveOptions.ProjectToo}" Margin="20,3,3,3"
                                                                IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveAsProjectTooPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>

                                        <n:ExtendedCheckBox Grid.Row="2" x:Name="CopyFilePsdCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=SaveToClipboardPhotoshop}" 
                                                            Checked="SaveToClipboard_CheckedChanged"/>

                                        <WrapPanel Grid.Row="3" Margin="20,0,0,0" Visibility="{Binding IsChecked, ElementName=CopyFilePsdCheckBox, Converter={StaticResource Bool2Visibility}}">
                                            <n:ImageRadioButton x:Name="CopyFilePsdRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File}" 
                                                                IsChecked="{Binding LatestCopyTypePhotoshop, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.File}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.File.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFolderPathPsdRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath}" 
                                                                IsChecked="{Binding LatestCopyTypePhotoshop, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FolderPath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FolderPath.Info}"/>
                                            <Separator Width="1"/>
                                            <n:ImageRadioButton x:Name="CopyFilePathPsdRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath}" 
                                                                IsChecked="{Binding LatestCopyTypePhotoshop, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:CopyType.FilePath}}"
                                                                ToolTip="{DynamicResource S.SaveAs.SaveOptions.CopyToClipboard.FilePath.Info}"/>
                                        </WrapPanel>

                                        <n:ExtendedCheckBox Grid.Row="4" x:Name="CustomCommandsPsdCheckBox" Text="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands}" Margin="10,3,3,3"
                                                            IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=ExecuteCustomCommandsPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <n:ExtendedTextBox Grid.Row="5" MinHeight="23" Margin="20,3,3,3" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                           Text="{Binding Source={x:Static u:UserSettings.All}, Path=CustomCommandsPhotoshop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                           Visibility="{Binding IsChecked, ElementName=CustomCommandsPsdCheckBox, Converter={StaticResource Bool2Visibility}}"
                                                           ToolTip="{DynamicResource S.SaveAs.SaveOptions.ExecuteCommands.Info}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <n:LabelSeparator Grid.Row="6" x:Name="FileLabelSeparator" Text="{DynamicResource S.SaveAs.File}">
                                <n:LabelSeparator.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolOrAndToVisibility}">
                                        <Binding ElementName="GifRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="SaveFileCheckBox" Path="IsChecked"/>
                                        <Binding ElementName="ApngRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="SaveFileApngCheckBox" Path="IsChecked"/>
                                        <Binding ElementName="VideoRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="SaveFileVideoCheckBox" Path="IsChecked"/>
                                        <Binding ElementName="ProjectRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="SaveFileProjectCheckBox" Path="IsChecked"/>
                                        <Binding ElementName="ImagesRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="SaveFileImagesCheckBox" Path="IsChecked"/>
                                        <Binding ElementName="PsdRadioButton" Path="IsChecked"/>
                                        <Binding ElementName="SaveFilePsdCheckBox" Path="IsChecked"/>
                                    </MultiBinding>
                                </n:LabelSeparator.Visibility>
                            </n:LabelSeparator>

                            <Grid Grid.Row="7" Margin="10,0,0,0" Visibility="{Binding ElementName=FileLabelSeparator, Path=Visibility}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputApngFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestApngOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputVideoFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestVideoOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputImagesFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestImageOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputProjectFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestProjectOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputPsdFolderTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestPhotoshopOutputFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                                       ToolTip="{DynamicResource S.SaveAs.File.Location}" TextWrapping="Wrap"
                                                       Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}"
                                                       TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ImageButton Grid.Column="1" Style="{StaticResource Style.Button.NoText}" Content="{StaticResource Vector.Open}" ContentWidth="20"
                                                   Click="ChooseLocation_Click" ToolTip="{DynamicResource S.SaveAs.File.Choose}"
                                                   ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>
                                </Grid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="25"/>
                                    </Grid.ColumnDefinitions>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputApngFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestApngFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputVideoFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestVideoFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputImagesFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestImageFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputProjectFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestProjectFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                                    <n:ExtendedTextBox Grid.Column="0" x:Name="OutputPsdFilenameTextBox" Text="{Binding Source={x:Static u:UserSettings.All}, Path=LatestPhotoshopFilename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                       MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" ToolTip="{DynamicResource S.SaveAs.File.Name}" ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"
                                                       Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}" TextWrapping="Wrap" TextChanged="FilenameTextBox_TextChanged"/>

                                    <ComboBox Grid.Column="1" Name="FileTypeComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.gif'}"
                                              Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                        <s:String>.gif</s:String>
                                    </ComboBox>

                                    <ComboBox Grid.Column="1" Name="FileTypeApngComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestApngExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.png'}"
                                              Visibility="{Binding IsChecked, ElementName=ApngRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                        <s:String>.png</s:String>
                                        <s:String>.apng</s:String>
                                    </ComboBox>

                                    <ComboBox Grid.Column="1" Name="FileTypeVideoComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestVideoExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.mp4'}"
                                              Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                        <s:String>.avi</s:String>
                                        <s:String>.mp4</s:String>
                                        <s:String>.webm</s:String>
                                        <s:String>.wmv</s:String>
                                    </ComboBox>

                                    <ComboBox Grid.Column="1" Name="FileTypeImageComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestImageExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.png'}"
                                              Visibility="{Binding IsChecked, ElementName=ImagesRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                        <s:String>.zip</s:String>
                                        <s:String>.png</s:String>
                                    </ComboBox>

                                    <ComboBox Grid.Column="1" Name="FileTypeProjectComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestProjectExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.stg'}"
                                              Visibility="{Binding IsChecked, ElementName=ProjectRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                        <s:String>.stg</s:String>
                                        <s:String>.zip</s:String>
                                    </ComboBox>

                                    <ComboBox Grid.Column="1" Name="FileTypePsdComboBox" Margin="1,3" MinHeight="25" ToolTip="{DynamicResource S.SaveAs.File.Format}"
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=LatestPhotoshopExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='.psd'}"
                                              Visibility="{Binding IsChecked, ElementName=PsdRadioButton, Converter={StaticResource Bool2Visibility}}" SelectionChanged="SaveType_Checked">
                                        <s:String>.psd</s:String>
                                    </ComboBox>

                                    <n:ImageButton Grid.Column="2" x:Name="IncreaseCountButton" Style="{StaticResource Style.Button.NoText}" 
                                                   Content="{StaticResource Vector.Add}" ContentWidth="15" Click="IncreaseNumber_Click"
                                                   ToolTip="{DynamicResource S.SaveAs.File.Increase}" ToolTipService.Placement="Bottom"/>
                                    <n:ImageButton Grid.Column="3" x:Name="DecreaseCountButton" Style="{StaticResource Style.Button.NoText}" 
                                                   Content="{StaticResource Vector.Subtract}" ContentWidth="15" Click="DecreaseNumber_Click"
                                                   ToolTip="{DynamicResource S.SaveAs.File.Decrease}" ToolTipService.Placement="Bottom"/>
                                </Grid>
                            </Grid>

                            <Grid Grid.Row="8" Name="FileExistsGrid" Visibility="Collapsed" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Row="0" Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Warning}" />
                                <TextBlock Grid.Row="0" Grid.Column="1" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="11" Padding="3" TextWrapping="WrapWithOverflow">
                                    
                                    <Hyperlink Click="FileHyperlink_OnClick" ToolTip="{DynamicResource Encoder.OpenFile}" Cursor="Hand">
                                        <Run Text="{DynamicResource S.SaveAs.File.Exists}"/>
                                    </Hyperlink>
                                </TextBlock>
                            </Grid>
                        </Grid>

                        <Grid x:Name="LoadRecentGrid" Visibility="Collapsed" Height="{Binding ElementName=ActionScrollViewer, Path=ActualHeight, FallbackValue=100}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Recent.Projects}" Margin="5,0" Padding="0,5"/>
                            <DataGrid Grid.Row="1" x:Name="RecentDataGrid" Margin="10,5,5,5" MinHeight="60" SelectionMode="Single" SelectionUnit="FullRow" MouseDoubleClick="RecentDataGrid_MouseDoubleClick" PreviewKeyDown="RecentDataGrid_PreviewKeyDown">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{DynamicResource Recent.CreationDate}" Width="*" IsReadOnly="True" Binding="{Binding Path=CreationDate, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:G}', ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}"/>
                                    <DataGridTextColumn Header="{DynamicResource Recent.FrameCount}" Width="100" IsReadOnly="True" Binding="{Binding Path=Frames.Count, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                        <Grid x:Name="ClipboardGrid" Visibility="Collapsed" Height="{Binding ElementName=ActionScrollViewer, Path=ActualHeight, FallbackValue=100}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Clipboard.Entries}"/>
                            <ListBox Grid.Row="1" x:Name="ClipboardListBox" Margin="10,5,5,5" MinHeight="60" VerticalAlignment="Stretch" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.Resources>
                                    <ContextMenu x:Key="ClipboardContextMenu">
                                        <n:ImageMenuItem Header="{DynamicResource Clipboard.Entry}" Image="{StaticResource Vector.Paste}" ContentHeight="16" ContentWidth="16" IsHitTestVisible="False"/>
                                        <Separator/>
                                        <n:ImageMenuItem Header="{DynamicResource Clipboard.Explore}" Image="{StaticResource Vector.Open}" ContentHeight="16" ContentWidth="16" Command="u:Commands.ExploreClipboard"/>
                                        <n:ImageMenuItem Header="{DynamicResource Clipboard.Remove}" Image="{StaticResource Vector.Remove}" ContentHeight="16" ContentWidth="16" Command="u:Commands.RemoveClipboardEntry"/>
                                    </ContextMenu>
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="ContextMenu" Value="{StaticResource ClipboardContextMenu}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Clipboard.Behavior}"/>
                            <RadioButton Grid.Row="3" x:Name="PasteBeforeRadioButton" Content="{DynamicResource Clipboard.Before}" Margin="10,5,5,5" 
                                         IsChecked="{Binding PasteBehavior, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:PasteBehavior.BeforeSelected}}"/>
                            <RadioButton Grid.Row="4" x:Name="PasteAfterRadioButton" Content="{DynamicResource Clipboard.After}" Margin="10,5,5,5"
                                         IsChecked="{Binding PasteBehavior, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:PasteBehavior.AfterSelected}}"/>
                        </Grid>

                        <Grid x:Name="ResizeGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Resize.CurrentProperties}"/>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,0,0,0">
                                <Label x:Name="CurrentWidthLabel" Content="100"/>
                                <Label Content="x"/>
                                <Label x:Name="CurrentHeightLabel" Content="100"/>
                                <Label Content="•"/>
                                <Label x:Name="CurrentDpiLabel" Content="100"/>
                                <Label Content="{DynamicResource Resize.Dpi}"/>
                            </StackPanel>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Resize.NewProperties}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Resize.Dpi2}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="DpiNumericUpDown" Minimum="72" Maximum="1000" Margin="10,5" MinWidth="70"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="WidthResizeNumericUpDown" Minimum="1" Maximum="5000" Margin="10,5" 
                                                 MinWidth="70" ValueChanged="WidthResizeIntegerUpDown_ValueChanged"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource ImportVideo.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="HeightResizeNumericUpDown" Minimum="1" Maximum="5000" Margin="10,5" 
                                                 MinWidth="70" ValueChanged="HeightResizeIntegerUpDown_ValueChanged"/>

                                <Viewbox Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" Child="{StaticResource Vector.No}" MaxHeight="25"
                                     Visibility="{Binding ElementName=KeepAspectCheckBox, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            </Grid>

                            <CheckBox Grid.Row="4" x:Name="KeepAspectCheckBox" Content="{DynamicResource Resize.KeepAspect}" Margin="10,5" IsChecked="True" 
                                      Checked="KeepAspectCheckBox_Checked"/>
                        </Grid>

                        <Grid x:Name="CropGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Preview}"/>
                            <Image Grid.Row="1" x:Name="CropImage" Height="120" Stretch="Uniform" Margin="10,5,5,5" Effect="{StaticResource Shadow.Black.Large}"/>
                            <Label Grid.Row="2" x:Name="CropSizeLabel" Content="0 × 0" HorizontalAlignment="Center" Padding="2"/>

                            <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Crop.Points}"/>
                            <Grid Grid.Row="4" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="TopCropNumericUpDown" Minimum="0" Margin="10,3" MinWidth="70"
                                                 ValueChanged="CropIntegerUpDown_ValueChanged">
                                    <n:IntegerUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="BottomCropNumericUpDown" Path="Value" />
                                            <Binding ElementName="BottomCropNumericUpDown" Path="Minimum" FallbackValue="0"/>
                                        </MultiBinding>
                                    </n:IntegerUpDown.Maximum>
                                </n:IntegerUpDown>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="LeftCropNumericUpDown" Minimum="0" Margin="10,3" MinWidth="70"
                                                 ValueChanged="CropIntegerUpDown_ValueChanged">
                                    <n:IntegerUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="RightCropNumericUpDown" Path="Value" />
                                            <Binding ElementName="RightCropNumericUpDown" Path="Minimum" FallbackValue="0"/>
                                        </MultiBinding>
                                    </n:IntegerUpDown.Maximum>
                                </n:IntegerUpDown>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Crop.Bottom}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="BottomCropNumericUpDown" Minimum="10" Margin="10,3" 
                                                 MinWidth="70" ValueChanged="CropIntegerUpDown_ValueChanged">
                                    <n:IntegerUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="CropAreaGrid" Path="Height" FallbackValue="0"/>
                                            <!--<Binding ElementName="TopCropNumericUpDown" Path="Value" FallbackValue="0"/>-->
                                        </MultiBinding>
                                    </n:IntegerUpDown.Maximum>
                                </n:IntegerUpDown>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Crop.Right}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="RightCropNumericUpDown" Minimum="10" Margin="10,3" 
                                                 MinWidth="70" ValueChanged="CropIntegerUpDown_ValueChanged">
                                    <n:IntegerUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="CropAreaGrid" Path="Width" FallbackValue="0"/>
                                            <!--<Binding ElementName="LeftCropNumericUpDown" Path="Value" FallbackValue="0"/>-->
                                        </MultiBinding>
                                    </n:IntegerUpDown.Maximum>
                                </n:IntegerUpDown>
                            </Grid>
                        </Grid>

                        <Grid x:Name="FlipRotateGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Editor.Image.FlipRotate}"/>
                            <Grid Grid.Row="1" Margin="10,0" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ImageRadioButton Grid.Row="0" x:Name="FlipHorizontalRadioButton" Text="{DynamicResource FlipRotate.FlipHorizontal}"
                                                    Content="{StaticResource Vector.FlipHorizontal}" Cursor="Hand" MaxSize="25" Padding="0,5"
                                                    IsChecked="True"/>

                                <n:ImageRadioButton Grid.Row="1" x:Name="FlipVerticalRadioButton" Text="{DynamicResource FlipRotate.FlipVertical}"
                                                    Content="{StaticResource Vector.FlipVertical}" Cursor="Hand" MaxSize="25" Padding="0,5"/>


                                <n:ImageRadioButton Grid.Row="2" x:Name="RotateLeftRadioButton" Text="{DynamicResource FlipRotate.RotateLeft}"
                                                    Content="{StaticResource Vector.RotateLeft90}" Cursor="Hand" MaxSize="25" Padding="0,5"/>


                                <n:ImageRadioButton Grid.Row="3" x:Name="RotateRightRadioButton" Text="{DynamicResource FlipRotate.RotateRight}"
                                                    Content="{StaticResource Vector.RotateRight90}" Cursor="Hand" MaxSize="25" Padding="0,5"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="CaptionGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Caption.Text}"/>
                            <n:ExtendedTextBox Grid.Row="1" x:Name="CaptionTextBox" Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionText}"/>

                            <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsCaptionFontGroupExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="CaptionFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontFamily}">
                                        <ComboBox.ItemsSource>
                                            <Binding Source="{StaticResource MyFonts}"/>
                                        </ComboBox.ItemsSource>

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CaptionFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontStyle}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                        <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                        <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" x:Name="CaptionFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontWeight}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                        <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                        <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                        <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                        <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                        <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                        <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                        <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                        <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                        <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                        <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                        <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                        <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                        <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                        <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                        <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                                    </ComboBox>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="CaptionFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionFontSize, Mode=TwoWay}"/>

                                    <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="4" Grid.Column="1" x:Name="CaptionFontColorBox" Margin="10,5"
                                                SelectedColor="{Binding CaptionFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Expander>

                            <Expander Grid.Row="3" Header="{DynamicResource Caption.Outline}" IsExpanded="{Binding IsCaptionOutlineGroupExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="CaptionOutlineThicknessNumericUpDown" Minimum="0" Maximum="20" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionOutlineThickness, Mode=TwoWay}"/>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="1" Grid.Column="1" x:Name="CaptionOutlineColorBox" Margin="10,5"
                                                SelectedColor="{Binding CaptionOutlineColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Expander>

                            <Expander Grid.Row="4" Header="{DynamicResource Caption.Layout}" IsExpanded="{Binding IsCaptionLayoutGroupExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="CaptionVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"
                                              SelectedValuePath="VerticalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionVerticalAligment, Mode=TwoWay}">

                                        <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                                        <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CaptionHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                              SelectedValuePath="HorizontalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionHorizontalAligment, Mode=TwoWay}">

                                        <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                                        <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                                        <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="CaptionMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=CaptionMargin, Mode=TwoWay}"/>
                                </Grid>
                            </Expander>
                        </Grid>

                        <Grid x:Name="FreeTextGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Caption.Text}"/>
                            <n:ExtendedTextBox Grid.Row="1" x:Name="FreeTextTextBox"  Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextText, Mode=TwoWay}"
                                               TextChanged="FreeTextTextBox_OnTextChanged"/>

                            <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsFreeTextFontGroupExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="FreeTextFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" 
                                              SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontFamily, Mode=TwoWay}">
                                        <ComboBox.ItemsSource>
                                            <Binding Source="{StaticResource MyFonts}" />
                                        </ComboBox.ItemsSource>

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" x:Name="FreeTextFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontStyle, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                        <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                        <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" x:Name="FreeTextFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontWeight, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                        <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                        <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                        <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                        <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                        <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                        <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                        <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                        <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                        <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                        <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                        <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                        <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                        <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                        <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                        <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                                    </ComboBox>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="FreeTextFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeTextFontSize, Mode=TwoWay}"/>

                                    <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="4" Grid.Column="1" x:Name="FreeTextFontColorBox" Margin="10,5"
                                                SelectedColor="{Binding FreeTextFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Expander>

                            <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Caption.Layout}"/>
                            <Grid Grid.Row="4" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeTextPositionXNumericUpDown" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ElementName=FreeTextOverlayControl, Path=Left, Converter={StaticResource DoubleToIntConverter}, Mode=TwoWay, FallbackValue=0}"
                                                 Maximum="{Binding ElementName=FreeTextOverlayControl, Path=ActualWidth, FallbackValue=1000}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeTextPositionYNumericUpDown" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ElementName=FreeTextOverlayControl, Path=Top, Converter={StaticResource DoubleToIntConverter}, Mode=TwoWay, FallbackValue=0}"
                                                 Maximum="{Binding ElementName=FreeTextOverlayControl, Path=ActualHeight, FallbackValue=1000}"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="TitleFrameGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Caption.Text}"/>
                            <n:ExtendedTextBox Grid.Row="1" x:Name="TitleFrameTextBox" Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                               Text="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameText, Mode=TwoWay}"/>

                            <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsTitleFrameFontGroupExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontFamily, Mode=TwoWay}">
                                        <ComboBox.ItemsSource>
                                            <Binding Source="{StaticResource MyFonts}" />
                                        </ComboBox.ItemsSource>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TitleFrameFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontStyle, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                        <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                        <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" x:Name="TitleFrameFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontWeight, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                        <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                        <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                        <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                        <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                        <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                        <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                        <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                        <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                        <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                        <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                        <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                        <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                        <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                        <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                        <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                                    </ComboBox>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="TitleFrameFontSizeNumericUpDown" Minimum="5" Maximum="200" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameFontSize, Mode=TwoWay}"/>

                                    <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="4" Grid.Column="1" x:Name="TitleFrameFontColorBox" Margin="10,5"
                                                SelectedColor="{Binding TitleFrameFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </Expander>

                            <n:LabelSeparator Grid.Row="3" Text="{DynamicResource String.Delay}"/>
                            <Grid Grid.Row="4" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Column="1" x:Name="TitleFrameDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameDelay, Mode=TwoWay}"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="5" Text="{DynamicResource Caption.Layout}"/>
                            <Grid Grid.Row="6" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="150"
                                          SelectedValuePath="VerticalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameVerticalAligment, Mode=TwoWay}">

                                    <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                                    <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TitleFrameHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" 
                                          SelectedValuePath="HorizontalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameHorizontalAligment, Mode=TwoWay}">

                                    <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                                    <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                                    <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="2" Grid.Column="1" x:Name="TitleFrameMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=TitleFrameMargin, Mode=TwoWay}"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="7" Text="{DynamicResource String.Background}"/>
                            <Grid Grid.Row="8" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <n:ColorBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameBackgroundColorBox" Margin="10,5"
                                            SelectedColor="{Binding TitleFrameBackgroundColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="KeyStrokesGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Expander Grid.Row="0" Header="{DynamicResource KeyStrokes.Keys}" IsExpanded="{Binding IsKeyStrokesKeysExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageButton Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.Edit}" Content="{StaticResource Vector.Pen}"
                                                   Margin="0,3" ContentHeight="16" HorizontalAlignment="Center" Padding="5" Click="EditKeyStrokesButton_Click"/>

                                    <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.IgnoreModifiers}" Margin="0,5"
                                                        IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesIgnoreNonModifiers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ToolTip="{DynamicResource KeyStrokes.IgnoreModifiers.Info}"/>

                                    <n:ExtendedCheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.Extend}" Margin="0,5"
                                                        IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesExtended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="10,0,0,0" 
                                                Visibility="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesExtended, Converter={StaticResource Bool2Visibility}}">
                                        <Label Content="{DynamicResource KeyStrokes.By}" VerticalAlignment="Center" Padding="0"/>
                                        <n:IntegerUpDown Minimum="10" Maximum="1000" Margin="5" MinWidth="70" Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>

                                    <n:ExtendedCheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Text="{DynamicResource KeyStrokes.Earlier}" Margin="0,5"
                                                        IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesEarlier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="10,0,0,0" 
                                                Visibility="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesEarlier, Converter={StaticResource Bool2Visibility}}">
                                        <Label Content="{DynamicResource KeyStrokes.By}" VerticalAlignment="Center" Padding="0"/>
                                        <n:IntegerUpDown Minimum="10" Maximum="1000" Margin="5" MinWidth="70" Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesEarlierBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>

                                    <Label Grid.Row="6" Grid.Column="0" Content="{DynamicResource KeyStrokes.Separator}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ExtendedTextBox Grid.Row="6" Grid.Column="1" Margin="5,3" MinWidth="70"
                                                       Text="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Expander>

                            <Expander Grid.Row="1" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsKeyStrokesFontExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontFamily}">
                                        <ComboBox.ItemsSource>
                                            <Binding Source="{StaticResource MyFonts}"/>
                                        </ComboBox.ItemsSource>

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="10,5" MinWidth="100" SelectedValuePath="FontStyle" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontStyle}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                        <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                        <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" Margin="10,5" MinWidth="100" SelectedValuePath="FontWeight" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontWeight}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                        <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                        <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                        <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                        <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                        <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                        <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                        <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                        <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                        <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                        <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                        <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                        <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                        <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                        <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                        <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                                    </ComboBox>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontSize, Mode=TwoWay}"/>

                                    <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="4" Grid.Column="1" SelectedColor="{Binding KeyStrokesFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                                </Grid>
                            </Expander>

                            <Expander Grid.Row="2" Header="{DynamicResource Caption.Outline}" IsExpanded="{Binding IsKeyStrokesOutlineExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="20" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesOutlineThickness, Mode=TwoWay}"/>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="1" Grid.Column="1" SelectedColor="{Binding KeyStrokesOutlineColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Background}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="2" Grid.Column="1" SelectedColor="{Binding KeyStrokesBackgroundColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                                </Grid>
                            </Expander>

                            <Expander Grid.Row="3" Header="{DynamicResource Caption.Layout}" IsExpanded="{Binding IsKeyStrokesLayoutExpanded, Source={x:Static u:UserSettings.All}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" Margin="10,5" MinWidth="100" MaxWidth="150" SelectedValuePath="VerticalAlignment" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesVerticalAligment, Mode=TwoWay}">

                                        <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                                        <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                                        <TextBlock VerticalAlignment="Stretch" Text="{DynamicResource S.Alignment.Stretch}"/>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="10,5" MinWidth="100" MaxWidth="150" SelectedValuePath="HorizontalAlignment" 
                                              SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesHorizontalAligment, Mode=TwoWay}">

                                        <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                                        <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                                        <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                                        <TextBlock HorizontalAlignment="Stretch" Text="{DynamicResource S.Alignment.Stretch}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="2" Grid.Column="1" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesMargin, Mode=TwoWay}"/>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource String.Padding}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="100" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesPadding, Mode=TwoWay}"/>
                                </Grid>
                            </Expander>
                        </Grid>

                        <Grid x:Name="FreeDrawingGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource FreeDrawing.Mode}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="PenModeRadioButton" Content="{StaticResource Vector.Pen}" 
                                                    Text="{DynamicResource FreeDrawing.Pen}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>
                                <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EraserModeRadioButton" Content="{StaticResource Vector.Eraser}" 
                                                    Text="{DynamicResource FreeDrawing.Eraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="SelectorModeRadioButton" Content="{StaticResource Vector.Select}" 
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                                <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="EraserStrokeModeRadioButton" Content="{StaticResource Vector.StrokeEraser}" 
                                                    Text="{DynamicResource FreeDrawing.StrokeEraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource FreeDrawing.Pen}" Visibility="{Binding ElementName=PenModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0" Visibility="{Binding ElementName=PenModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeDrawingWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingPenWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeDrawingHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingPenHeight, Mode=TwoWay}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <n:ColorBox Grid.Row="2" Grid.Column="1" x:Name="FreeDrawingColorBox" Margin="10,5"
                                            SelectedColor="{Binding FreeDrawingColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleRadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EllipseRadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>

                                <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource FreeDrawing.Other}" VerticalAlignment="Center" Padding="0"/>
                                <CheckBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" x:Name="IsHighLighterCheckBox" Content="{DynamicResource FreeDrawing.Highlighter}" Margin="5"
                                          IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingIsHighlighter, Mode=TwoWay}"/>
                                <CheckBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" x:Name="FitToCurveCheckBox" Content="{DynamicResource FreeDrawing.FitToCurve}" Margin="5"
                                          IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingFitToCurve, Mode=TwoWay}"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="4" Text="{DynamicResource FreeDrawing.Eraser}" Visibility="{Binding ElementName=EraserModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0" Visibility="{Binding ElementName=EraserModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeDrawingEraserWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingEraserWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeDrawingEraserHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FreeDrawingEraserHeight, Mode=TwoWay}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleEraserRadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingEraserStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ElipseEraserRadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingEraserStylusTip, Source={x:Static u:UserSettings.All},
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>
                            </Grid>
                        </Grid>

                        <Grid x:Name="MouseClicksGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Border.Appearance}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!--Format(rectangle, circle, perforated circle), edit clicks? -->
                                <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource Caption.Style}" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,5" MinWidth="100" SelectedValuePath="FontStyle" 
                                          SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=KeyStrokesFontStyle}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                
                                                <Viewbox Margin="2">
                                                    <ContentPresenter Content="{Binding Tag}"/>
                                                </Viewbox>

                                                <TextBlock Grid.Column="1" FontSize="14" Text="{Binding Text}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>

                                    <TextBlock Text="Ellipse" Tag="{StaticResource Vector.Ellipse}"/>
                                    <TextBlock Text="Rectangle" Tag="{StaticResource Vector.Rectangle}"/>
                                </ComboBox>-->

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource Caption.Color}" VerticalAlignment="Center"/>
                                <n:ColorBox Grid.Row="1" Grid.Column="1" SelectedColor="{Binding Source={x:Static u:UserSettings.All}, Path=MouseClicksColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center"/>
                                <n:DoubleUpDown Grid.Row="2" Grid.Column="1" x:Name="ClickWidthDoubleUpDown" Minimum="1" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=MouseClicksWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock Grid.Row="3" Grid.Column="0" Text="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center"/>
                                <n:DoubleUpDown Grid.Row="3" Grid.Column="1" x:Name="ClickHeightDoubleUpDown" Minimum="1" Maximum="1000" Margin="10,5" MinWidth="70"
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=MouseClicksHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </Grid>
                        
                        <Grid x:Name="WatermarkGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Watermark.Image}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="35"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Watermark.File}" VerticalAlignment="Center" Padding="0"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" x:Name="ImagePathLabel" Margin="3" Padding="0" FontStyle="Italic" Foreground="#FF09012B" VerticalAlignment="Center"
                                           Text="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkFilePath, Converter={StaticResource PathToFilenameConverter}}" TextWrapping="WrapWithOverflow"
                                           ToolTip="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkFilePath}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                                <n:ImageButton Grid.Row="1" Grid.Column="1" x:Name="SelectWatermarkButton" Text="{DynamicResource FreeDrawing.Select}" 
                                               HorizontalAlignment="Right" Content="{StaticResource Vector.Image}" ContentWidth="20"
                                               Margin="5,3" MinWidth="70" Padding="2,5" Click="SelectWatermark_Click"/>
                            </Grid>

                            <Grid Grid.Row="2" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Watermark.Opacity}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="OpacityWatermarkNumericUpDown"  
                                                 Minimum="1" Maximum="100" Margin="5" Width="70" HorizontalAlignment="Left"
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkOpacity, 
                                                 Converter={StaticResource DoubleTimesAHundredToIntConverter}, Mode=TwoWay, FallbackValue=70}"/>
                                <Label Grid.Row="0" Grid.Column="2" Content="%" VerticalAlignment="Center" Padding="0"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Scale}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="SizeWatermarkNumericUpDown" 
                                                 Minimum="1" Maximum="200" Margin="5" Width="70" HorizontalAlignment="Left"
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=WatermarkSize, 
                                                 Converter={StaticResource DoubleTimesAHundredToIntConverter}, Mode=TwoWay, FallbackValue=100}"/>
                                <Label Grid.Row="1" Grid.Column="2" Content="%" VerticalAlignment="Center" Padding="0"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Crop.Points}"/>
                            <Grid Grid.Row="4" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                                <n:DoubleUpDown Grid.Row="0" Grid.Column="1" x:Name="TopWatermarkDoubleUpDown" Minimum="-999" Margin="10,3" MinWidth="70"
                                                Maximum="{Binding ElementName=EditorWindow, Path=FrameSize.Height, FallbackValue=1000, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                                <n:DoubleUpDown Grid.Row="1" Grid.Column="1" x:Name="LeftWatermarkDoubleUpDown" Minimum="-999" Margin="10,3" MinWidth="70"
                                                Maximum="{Binding ElementName=EditorWindow, Path=FrameSize.Width, FallbackValue=1000, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="BorderGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Border.Appearance}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <n:ColorBox Grid.Row="0" Grid.Column="1" x:Name="BorderColorBox" Margin="10,5"
                                            SelectedColor="{Binding BorderColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <Viewbox Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Top}" MaxWidth="15" MaxHeight="15"/>
                                        <n:IntegerUpDown Grid.Column="1" x:Name="BorderTopThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderTopThickness, Mode=TwoWay}"/>
                                    </Grid>

                                    <Viewbox Grid.Row="1" Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Left}" MaxWidth="15" MaxHeight="15" Margin="5,0,0,0"/>
                                    <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="BorderLeftThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderLeftThickness, Mode=TwoWay}"/>

                                    <Viewbox Grid.Row="1" Grid.Column="3" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="15" MaxHeight="15"/>
                                    <n:IntegerUpDown Grid.Row="1" Grid.Column="2" x:Name="BorderRightThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderRightThickness, Mode=TwoWay}"/>

                                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <Viewbox Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Bottom}" MaxWidth="15" MaxHeight="15"/>
                                        <n:IntegerUpDown Grid.Column="1" x:Name="BorderBottomThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                         Value="{Binding Source={x:Static u:UserSettings.All}, Path=BorderBottomThickness, Mode=TwoWay}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>

                        <Grid x:Name="ObfuscateGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource S.Obfuscate.Options}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.Obfuscate.PixelSize}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="PixelSizeIntegerUpDown" Minimum="2" Maximum="100" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=PixelSize, Mode=TwoWay}"/>

                                <n:ExtendedCheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" x:Name="UseMedianCheckBox" Text="{DynamicResource S.Obfuscate.UseAverage}"
                                                    IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=UseMedian}" Margin="3,5"/>
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}"/>
                                <TextBlock Grid.Column="1" Text="{DynamicResource S.Obfuscate.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="ProgressGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Progress.Type}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Column="0" x:Name="BarRadioButton" Content="{StaticResource Vector.Progress}" Text="{DynamicResource Progress.Type.Bar}" 
                                                    IsChecked="{Binding ProgressType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, 
                                                    ConverterParameter={x:Static u:ProgressType.Bar}}"/>

                                <n:ImageRadioButton Grid.Column="1" x:Name="TextRadioButton" Content="{StaticResource Vector.FreeText}" Text="{StaticResource Progress.Type.Text}"
                                                    IsChecked="{Binding ProgressType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, 
                                                    ConverterParameter={x:Static u:ProgressType.Text}}"/>
                            </Grid>

                            <Expander Grid.Row="2" Header="{DynamicResource Caption.Font}" IsExpanded="{Binding IsProgressFontGroupExpanded, Source={x:Static u:UserSettings.All}}"
                                      Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}">
                                <Grid Margin="10,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="ProgressFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                              ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontFamily, Mode=TwoWay}">
                                        <ComboBox.ItemsSource>
                                            <Binding Source="{StaticResource MyFonts}" />
                                        </ComboBox.ItemsSource>

                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>

                                    <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressFontStyleComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontStyle" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontStyle, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontStyle="{Binding FontStyle}" FontSize="14" Text="{Binding Text}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontStyle="Normal" Text="{DynamicResource S.FontStyles.Normal}"/>
                                        <TextBlock FontStyle="Italic" Text="{DynamicResource S.FontStyles.Italic}"/>
                                        <TextBlock FontStyle="Oblique" Text="{DynamicResource S.FontStyles.Oblique}"/>
                                    </ComboBox>

                                    <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" x:Name="ProgressFontWeightComboBox" Margin="10,5" MinWidth="100"
                                              SelectedValuePath="FontWeight" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontWeight, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                    <TextBlock FontWeight="{Binding FontWeight}" FontSize="14" Text="{Binding Text}" />
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <TextBlock FontWeight="UltraLight" Text="{DynamicResource S.FontWeights.UltraLight}"/>
                                        <TextBlock FontWeight="ExtraLight" Text="{DynamicResource S.FontWeights.ExtraLight}"/>
                                        <TextBlock FontWeight="Light" Text="{DynamicResource S.FontWeights.Light}"/>
                                        <TextBlock FontWeight="Thin" Text="{DynamicResource S.FontWeights.Thin}"/>
                                        <TextBlock FontWeight="Normal" Text="{DynamicResource S.FontWeights.Normal}"/>
                                        <TextBlock FontWeight="Regular" Text="{DynamicResource S.FontWeights.Regular}"/>
                                        <TextBlock FontWeight="Medium" Text="{DynamicResource S.FontWeights.Medium}"/>
                                        <TextBlock FontWeight="SemiBold" Text="{DynamicResource S.FontWeights.SemiBold}"/>
                                        <TextBlock FontWeight="DemiBold" Text="{DynamicResource S.FontWeights.DemiBold}"/>
                                        <TextBlock FontWeight="Bold" Text="{DynamicResource S.FontWeights.Bold}"/>
                                        <TextBlock FontWeight="Black" Text="{DynamicResource S.FontWeights.Black}"/>
                                        <TextBlock FontWeight="Heavy" Text="{DynamicResource S.FontWeights.Heavy}"/>
                                        <TextBlock FontWeight="ExtraBold" Text="{DynamicResource S.FontWeights.ExtraBold}"/>
                                        <TextBlock FontWeight="ExtraBlack" Text="{DynamicResource S.FontWeights.ExtraBlack}"/>
                                        <TextBlock FontWeight="UltraBold" Text="{DynamicResource S.FontWeights.UltraBold}"/>
                                        <TextBlock FontWeight="UltraBlack" Text="{DynamicResource S.FontWeights.UltraBlack}"/>
                                    </ComboBox>

                                    <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                    <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="ProgressFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                     Value="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFontSize, Mode=TwoWay}"/>

                                    <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                    <n:ColorBox Grid.Row="4" Grid.Column="1" SelectedColor="{Binding ProgressFontColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                                </Grid>
                            </Expander>

                            <n:LabelSeparator Grid.Row="3" Text="{DynamicResource Border.Appearance}"/>
                            <Grid Grid.Row="4" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Color}" VerticalAlignment="Center" Padding="0"/>
                                <n:ColorBox Grid.Row="0" Grid.Column="1" SelectedColor="{Binding ProgressColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Progress.Precision}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressPrecisionComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" IsEditable="True"
                                          SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressPrecision, Mode=TwoWay}"
                                          Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}"
                                          SelectionChanged="ProgressPrecisionComboBox_SelectionChanged">
                                    <ComboBoxItem Content="{DynamicResource Progress.Precision.Minutes}"/>
                                    <ComboBoxItem Content="{DynamicResource Progress.Precision.Seconds}"/>
                                    <ComboBoxItem Content="{DynamicResource Progress.Precision.Miliseconds}"/>
                                    <ComboBoxItem Content="{DynamicResource Progress.Precision.Percentage}"/>
                                    <ComboBoxItem Content="{DynamicResource Progress.Precision.Count}"/>
                                    <ComboBoxItem Content="{DynamicResource Progress.Precision.Custom}"/>
                                </ComboBox>

                                <CheckBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Content="{DynamicResource Progress.Precision.ShowTotal}" Margin="10,5,5,5"
                                          IsChecked="{Binding ProgressShowTotal, Source={x:Static u:UserSettings.All}, Mode=TwoWay}"
                                          Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2Visibility}}"/>

                                <Label Grid.Row="2" Grid.Column="0" x:Name="ProgressFormatLabel" Content="{DynamicResource Progress.Format}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding ElementName=ProgressPrecisionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=5}"/>
                                <n:ExtendedTextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="CustomProgressTextBox" Margin="10,5"
                                                   Text="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressFormat, Mode=TwoWay}"
                                                   Visibility="{Binding ElementName=ProgressPrecisionComboBox, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=5}"
                                                   TextChanged="CustomProgressTextBox_TextChanged">
                                    <n:ExtendedTextBox.ToolTip>
                                        <n:HeaderedTooltip Header="Format" StaysOpen="True">
                                            <Run Text="$ms = miliseconds"/>
                                            <LineBreak/>
                                            <Run Text="$s = seconds"/>
                                            <LineBreak/>
                                            <Run Text="$m = minutes"/>
                                            <LineBreak/>
                                            <Run Text="$p = percentage"/>
                                            <LineBreak/>
                                            <Run Text="$f = frame number"/>
                                            <LineBreak/>
                                            <LineBreak/>
                                            <Run Text="Totals:" FontWeight="SemiBold"/>
                                            <LineBreak/>
                                            <Run Text="@ms, @s, @m, @p, @f"/>
                                            <LineBreak/>
                                            <LineBreak/>
                                            <Run Text="Examples:" FontWeight="SemiBold"/>
                                            <LineBreak/>
                                            <Run Text="'$s/@s s' = 2/10 s"/>
                                            <LineBreak/>
                                            <Run Text="'$p/@p%' = 25/100%"/>
                                        </n:HeaderedTooltip>
                                    </n:ExtendedTextBox.ToolTip>
                                </n:ExtendedTextBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                <n:IntegerUpDown Grid.Row="3" Grid.Column="1" x:Name="ProgressThicknessNumericUpDown" Minimum="1" Maximum="30" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ProgressThickness, Source={x:Static u:UserSettings.All}, Mode=TwoWay}"
                                                 Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="5" Text="{DynamicResource Caption.Layout}"/>
                            <Grid Grid.Row="6" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="ProgressVerticalComboBox" Margin="10,5" MinWidth="100" MaxWidth="150"
                                          SelectedValuePath="VerticalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressVerticalAligment, Mode=TwoWay}">

                                    <TextBlock VerticalAlignment="Top" Text="{DynamicResource S.VerticalAlignment.Top}"/>
                                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource S.VerticalAlignment.Center}"/>
                                    <TextBlock VerticalAlignment="Bottom" Text="{DynamicResource S.VerticalAlignment.Bottom}"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressHorizontalComboBox" Margin="10,5" MinWidth="100" MaxWidth="150" 
                                          SelectedValuePath="HorizontalAlignment" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressHorizontalAligment, Mode=TwoWay}">

                                    <TextBlock HorizontalAlignment="Left" Text="{DynamicResource S.HorizontalAlignment.Left}"/>
                                    <TextBlock HorizontalAlignment="Center" Text="{DynamicResource S.HorizontalAlignment.Center}"/>
                                    <TextBlock HorizontalAlignment="Right" Text="{DynamicResource S.HorizontalAlignment.Right}"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Progress.Orientation}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="ProgressOrientationComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedValuePath="Tag" SelectedValue="{Binding Source={x:Static u:UserSettings.All}, Path=ProgressOrientation, Mode=TwoWay}"
                                          Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2Visibility}}">

                                    <TextBlock Text="{DynamicResource S.Orientation.Horizontal}">
                                        <TextBlock.Tag>
                                            <x:Static Member="Orientation.Horizontal"/>
                                        </TextBlock.Tag>
                                    </TextBlock>
                                    <TextBlock Text="{DynamicResource S.Orientation.Vertical}">
                                        <TextBlock.Tag>
                                            <x:Static Member="Orientation.Vertical"/>
                                        </TextBlock.Tag>
                                    </TextBlock>
                                </ComboBox>
                            </Grid>
                        </Grid>

                        <Grid x:Name="CinemagraphGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource FreeDrawing.Mode}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="PenMode2RadioButton" Content="{StaticResource Vector.Pen}" 
                                                    Text="{DynamicResource FreeDrawing.Pen}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>
                                <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EraserMode2RadioButton" Content="{StaticResource Vector.Eraser}" 
                                                    Text="{DynamicResource FreeDrawing.Eraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="SelectorMode2RadioButton" Content="{StaticResource Vector.Select}" 
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                                <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="EraserStrokeMode2RadioButton" Content="{StaticResource Vector.StrokeEraser}" 
                                                    Text="{DynamicResource FreeDrawing.StrokeEraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource FreeDrawing.Pen}" Visibility="{Binding ElementName=PenMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0" 
                                  Visibility="{Binding ElementName=PenMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="CinemagraphWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphPenWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="CinemagraphHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphPenHeight, Mode=TwoWay}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="Rectangle2RadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="Ellipse2RadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource FreeDrawing.Other}" VerticalAlignment="Center" Padding="0"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="FitToCurve2CheckBox" Content="{DynamicResource FreeDrawing.FitToCurve}" Margin="5"
                                          IsChecked="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphFitToCurve, Mode=TwoWay}"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource FreeDrawing.Eraser}" Visibility="{Binding ElementName=EraserMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0"
                                  Visibility="{Binding ElementName=EraserMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="CinemagraphEraserWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphEraserWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="CinemagraphEraserHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=CinemagraphEraserHeight, Mode=TwoWay}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleEraser2RadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphEraserStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ElipseEraser2RadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphEraserStylusTip, Source={x:Static u:UserSettings.All}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>
                            </Grid>

                            <Grid Grid.Row="4" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" Text="{DynamicResource Cinemagraph.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="OverrideDelayGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Delay.NewValue}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="NewDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=OverrideDelay, Mode=TwoWay}"/>
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" Text="{DynamicResource OverrideDelay.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="IncreaseDecreaseDelayGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Delay.DecreaseIncrease}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.ValueMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="IncreaseDecreaseDelayIntegerUpDown" Minimum="-10000" Maximum="10000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=IncrementDecrementDelay, Mode=TwoWay}"/>
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" Text="{DynamicResource IncreaseDecreaseDelay.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="ScaleDelayGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Delay.Scale}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.ScaleValue}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="ScaleDelayIntegerUpDown" Minimum="1" Maximum="1000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=ScaleDelay, Mode=TwoWay}"/>
                                <Label Grid.Row="0" Grid.Column="2" Content="%" VerticalAlignment="Center" HorizontalAlignment="Left"  Padding="0"/>
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" Text="{DynamicResource ScaleDelay.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="FadeGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Transitions.FadeTo}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="FadeToFrameRadioButton" Content="{StaticResource Vector.Image}" 
                                                    IsChecked="{Binding FadeToType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:FadeToType.NextFrame}}"
                                                    Text="{DynamicResource Transitions.FadeTo.Frame}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="FadeToColorRadioButton" Content="{StaticResource Vector.Colors}" 
                                                    IsChecked="{Binding FadeToType, Source={x:Static u:UserSettings.All}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:FadeToType.Color}}"
                                                    Text="{DynamicResource Transitions.FadeTo.Color}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Transitions.Color}" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <n:ColorBox Grid.Row="0" Grid.Column="1" SelectedColor="{Binding FadeToColor, Source={x:Static u:UserSettings.All}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,5"/>
                            </Grid>

                            <n:LabelSeparator Grid.Row="4" Text="{DynamicResource Transitions.Lenght}"/>
                            <Slider Grid.Row="5" Grid.Column="0" x:Name="FadeSlider" Margin="10,5,5,5" Minimum="1" Maximum="25" 
                                    AutoToolTipPlacement="TopLeft" SmallChange="1" IsSnapToTickEnabled="True"
                                    Value="{Binding Source={x:Static u:UserSettings.All}, Path=FadeTransitionLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <n:LabelSeparator Grid.Row="6" Text="{DynamicResource Transitions.Delay}"/>
                            <Grid Grid.Row="7" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="FadeDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=FadeTransitionDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                            <Grid Grid.Row="8" Margin="5,3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" x:Name="TransitionImage" 
                                       Source="{Binding ElementName=ZoomBoxControl, Path=ImageSource, Converter={StaticResource UriToBitmapConverter}}" Stretch="Uniform"
                                       Effect="{StaticResource Shadow.Black.Large}"/>

                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=FadeSlider, Path=Value, StringFormat='{} {0}x'}" 
                                           FontSize="16" Padding="2,0" Foreground="#FF289746" VerticalAlignment="Center"/>

                                <Viewbox Grid.Row="1" Grid.Column="1" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="13" MaxHeight="15"/>

                                <Border Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" BorderThickness="0" 
                                        Background="{Binding FadeToColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}"
                                        Width="{Binding ElementName=TransitionImage, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=TransitionImage, Path=ActualHeight, Mode=OneWay}"
                                        Effect="{StaticResource Shadow.Black.Large}" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>

                                <TextBlock Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Text="{DynamicResource Transitions.FadeTo.Frame}"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Visibility="{Binding ElementName=FadeToFrameRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>
                            </Grid>

                            <Grid Grid.Row="9" Grid.Column="0" Margin="10,10,5,0"
                                  Visibility="{Binding ElementName=FadeToFrameRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" Text="{DynamicResource Transitions.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="SlideGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Transitions.Lenght}"/>
                            <Slider Grid.Row="1" Grid.Column="0" x:Name="SlideSlider" Minimum="1" Maximum="20" 
                                    AutoToolTipPlacement="TopLeft" SmallChange="1" IsSnapToTickEnabled="True" Margin="10,5,5,5"/>

                            <n:LabelSeparator Grid.Row="2" Text="{DynamicResource Transitions.Delay}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="SlideDelayIntegerUpDown" Minimum="10" Maximum="25500" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=SlideTransitionDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                            <Grid Grid.Row="4" Margin="5,3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" x:Name="TransitionImage2" 
                                       Source="{Binding ElementName=ZoomBoxControl, Path=ImageSource, Converter={StaticResource UriToBitmapConverter}}" Stretch="Uniform"
                                       Effect="{StaticResource Shadow.Black.Large}"/>

                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=SlideSlider, Path=Value, StringFormat='{} {0}x'}" 
                                           FontSize="16" Padding="2,0" Foreground="#FF289746" VerticalAlignment="Center"/>

                                <Viewbox Grid.Row="1" Grid.Column="1" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="13" MaxHeight="15"/>

                                <!--Background="{Binding FadeToColor, Source={x:Static u:UserSettings.All}, Converter={StaticResourceExtension ColorToBrush}}"-->
                                <Border Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" BorderThickness="0" 
                                        Width="{Binding ElementName=TransitionImage, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=TransitionImage, Path=ActualHeight, Mode=OneWay}"
                                        Effect="{StaticResource Shadow.Black.Large}" Visibility="{Binding ElementName=FadeToColorRadioButton, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"/>

                                <TextBlock Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Text="{DynamicResource Transitions.FadeTo.Frame}"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>

                            <!--<Grid Grid.Row="2" Visibility="Visible">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Column="0" x:Name="FromRightRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>

                                <n:ImageRadioButton Grid.Column="1" x:Name="FromTopRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Column="2" x:Name="FromLeftRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Column="3" x:Name="FromBottomRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>-->

                            <Grid Grid.Row="5" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" Text="{DynamicResource Transitions.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                        </Grid>

                        <Grid x:Name="ReduceGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <n:LabelSeparator Grid.Row="0" Text="{DynamicResource Reduce.Header}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Reduce.Factor}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="0" Grid.Column="1" x:Name="ReduceFactorIntegerUpDown" Minimum="1" Maximum="20" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=ReduceFactor, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Reduce.Count}" VerticalAlignment="Center" Padding="0"/>
                                <n:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="ReduceCountIntegerUpDown" Minimum="1" Maximum="20" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static u:UserSettings.All}, Path=ReduceCount, Mode=TwoWay}"/>
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" x:Name="ReduceTextBlock" Foreground="#FF289746" Tag="{DynamicResource Reduce.Info}"
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource FormatConverter}">
                                            <Binding ElementName="ReduceTextBlock" Path="Tag"/>
                                            <Binding Source="{x:Static u:UserSettings.All}" Path="ReduceCount"/>
                                            <Binding Source="{x:Static u:UserSettings.All}" Path="ReduceFactor"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </Grid>

                        <Grid x:Name="RemoveDuplicatesGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource S.RemoveDuplicates.Header}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource S.RemoveDuplicates.Similarity}" VerticalAlignment="Center" Padding="0"/>
                                <n:DoubleUpDown Grid.Row="0" Grid.Column="1" x:Name="DuplicatesSimilarityDoubleUpDown" Minimum="0.1" Maximum="100" Margin="10,5" MinWidth="80" 
                                                Value="{Binding Source={x:Static u:UserSettings.All}, Path=DuplicatesSimilarity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource S.RemoveDuplicates.Removal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,5" 
                                          SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=DuplicatesRemoval, Converter={StaticResource EnumToInt}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Removal.First}"/>
                                    <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Removal.Last}"/>
                                </ComboBox>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource S.RemoveDuplicates.Delay}" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,5" 
                                          SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=DuplicatesDelay, Converter={StaticResource EnumToInt}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Delay.NoAdjustment}"/>
                                    <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Delay.Average}"/>
                                    <ComboBoxItem Content="{DynamicResource S.RemoveDuplicates.Delay.Sum}"/>
                                </ComboBox>
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                <TextBlock Grid.Column="1" x:Name="DuplicatesTextBlock" Foreground="#FF289746" Tag="{DynamicResource S.RemoveDuplicates.Info}"
                                           FontStyle="Italic" FontSize="12" Padding="3" TextWrapping="WrapWithOverflow">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource FormatConverter}">
                                            <Binding ElementName="DuplicatesTextBlock" Path="Tag"/>
                                            <Binding Source="{x:Static u:UserSettings.All}" Path="DuplicatesSimilarity"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </Grid>
                </ScrollViewer>

                <!--Apply/Save or Cancel-->
                <Grid Grid.Row="2" x:Name="ActionLowerGrid" Background="WhiteSmoke" Height="44">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <n:ImageButton Grid.Column="0" x:Name="ApplyButton" Text="{DynamicResource Action.Apply}" Padding="2,0" MinWidth="90" KeyGesture="Alt + E / Enter"
                                   FontSize="13" Margin="5" ContentHeight="22" Content="{StaticResource Vector.Ok}" Command="u:Commands.OkAction"/>

                    <n:ImageButton Grid.Column="1" x:Name="CancelButton" Text="{DynamicResource Action.Cancel}" Padding="2,0" MinWidth="90" KeyGesture="Esc"
                                   FontSize="13" Margin="5" ContentHeight="22" Content="{StaticResource Vector.Cancel}" Command="u:Commands.CancelAction"/>
                </Grid>
            </Grid>
        </Grid>

        <!--Lower part of the Window-->
        <ListView Grid.Row="2" x:Name="FrameListView" BorderThickness="0,1,0,0" IsTabStop="False" Focusable="False"
                  SelectionChanged="FrameListView_SelectionChanged" PreviewKeyDown="FrameListView_OnPreviewKeyDown"
                  IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}"
                  Visibility="{Binding RelativeSource={RelativeSource Self}, Path=HasItems, Converter={StaticResource Bool2Visibility}}">

            <ListView.Resources>
                <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
                <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

                <Style TargetType="{x:Type ListView}">
                    <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>

                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal" MinHeight="0" VirtualizationMode="Recycling" IsVirtualizing="True"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" Padding="2" SnapsToDevicePixels="true">
                                    <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" CanContentScroll="True">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ContextMenu x:Key="FrameListContextMenu">
                    <n:ImageMenuItem Header="{DynamicResource Editor.List.OpenImage}" Image="{StaticResource Vector.Image}" ContentHeight="16" ContentWidth="16" Command="u:Commands.OpenImage"/>
                    <n:ImageMenuItem Header="{DynamicResource Editor.List.ExploreFolder}" Image="{StaticResource Vector.Open}" ContentHeight="16" ContentWidth="16" Command="u:Commands.ExploreFolder"/>
                    <n:ImageMenuItem Header="{DynamicResource Editor.List.ExportImage}" Image="{StaticResource Vector.Save}" ContentHeight="16" ContentWidth="16" Command="u:Commands.ExportImages"/>
                </ContextMenu>
            </ListView.Resources>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Item_PreviewMouseLeftButtonDown"/>
                    <Setter Property="ContextMenu" Value="{StaticResource FrameListContextMenu}"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <!--Status bar-->
        <Border Grid.Row="3" x:Name="LowerGrid" Height="20">
            <Grid x:Name="LowerStatusBar" Height="20" Background="#FFF1F1F1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="7"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="StatusGrid" Grid.Column="0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" x:Name="StatusLabel" Content="Status" Padding="0" VerticalContentAlignment="Center" Margin="5,0" Foreground="#FF3C3C3C"/>
                    <ProgressBar Grid.Column="1" x:Name="StatusProgressBar" Height="8" Width="200" Margin="2,0" VerticalAlignment="Center"/>
                    <n:ImageButton Grid.Column="2" x:Name="CancelLoadingButton" Width="25" Content="{StaticResource Vector.Cancel}" Style="{StaticResource Style.Button.NoText}" ContentWidth="15"
                                   ToolTip="Cancel loading and discard project" Visibility="{Binding ElementName=EditorWindow, Path=IsCancelable, Converter={StaticResource Bool2Visibility}}" 
                                   Click="CancelLoadingButton_Click"/>
                </Grid>

                <Separator Grid.Column="1" Width="1" Margin="3,2"/>

                <StackPanel Grid.Column="2" x:Name="HintStackPanel" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Center" Visibility="Collapsed" ToolTip="{Binding ElementName=HintTextBlock, Path=Text}">
                    <Viewbox Child="{StaticResource Vector.Info}" Height="14" Margin="0,0,8,0" VerticalAlignment="Center"/>
                    <TextBlock x:Name="HintTextBlock" Foreground="DarkGreen" FontSize="13" VerticalAlignment="Center" Margin="0,-1,0,0" TextTrimming="CharacterEllipsis" TextDecorations="{x:Null}"/>
                </StackPanel>

                <Separator Grid.Column="3" Width="1" Margin="1,2" Visibility="{Binding ElementName=WelcomeGrid, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}, ConverterParameter=0}"/>

                <StackPanel Grid.Column="4" Orientation="Horizontal" Visibility="{Binding ElementName=WelcomeGrid, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}, ConverterParameter=0}"
                            IsEnabled="{Binding ElementName=Zoom100Button, Path=IsEnabled}" ToolTip="{DynamicResource Editor.Home.Zoom}">
                    <Viewbox Child="{StaticResource Vector.Zoom}" Height="16"/>
                    <n:IntegerUpDown Margin="1" Minimum="5" Maximum="500" Style="{StaticResource IntegerUpDown.Minimal}"
                                     Value="{Binding Zoom, Converter={StaticResource IntToDecimalConverter}, ElementName=ZoomBoxControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="%" VerticalAlignment="Center" Foreground="#FF707070"/>
                </StackPanel>

                <Separator Grid.Column="5" Width="1" Margin="1,2" Visibility="{Binding ElementName=WelcomeGrid, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}, ConverterParameter=0}"/>

                <Grid Grid.Column="6" x:Name="InfoGrid" Visibility="{Binding ElementName=WelcomeGrid, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}, ConverterParameter=0}"
                      ToolTip="{DynamicResource Editor.FrameNumbersInfo}" ToolTipService.Placement="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{Binding ElementName=FrameListView, Path=Items.Count}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FF00A000" Margin="3,0,3,0"/>
                    <Label Grid.Column="1" Content="{Binding ElementName=FrameListView, Path=SelectedItems.Count}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FFC80000" Margin="3,0,3,0"/>
                    <Label Grid.Column="2" Content="{Binding ElementName=FrameListView, Path=SelectedIndex}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FF0064C8" Margin="3,0,3,0"/>
                </Grid>

                <Separator Grid.Column="7" Width="1" Margin="1,2"/>

                <Grid Grid.Column="8" x:Name="CommandGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>

                    <n:ImageButton Grid.Column="0" x:Name="FirstRepeatButton" Content="{StaticResource Vector.First.Green}" ContentHeight="12"
                                   Width="40" Text="" Style="{StaticResource Style.Button.NoText}" Command="u:Commands.FirstFrame"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageRepeatButton Grid.Column="1" x:Name="PreviousRepeatButton" Content="{StaticResource Vector.Previous.Green}" MaxSize="18"
                                         Width="40" Text="" Style="{StaticResource Style.RepeatButton.NoText}" Command="u:Commands.PreviousFrame"
                                         ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                         ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageButton Grid.Column="2" x:Name="PlayPauseButton" Content="{StaticResource Vector.Play}" ContentHeight="15"
                                   Width="40" Style="{StaticResource Style.Button.NoText}" Command="u:Commands.Play"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageRepeatButton Grid.Column="3" x:Name="NextRepeatButton" Content="{StaticResource Vector.Next.Green}" MaxSize="18"
                                         Width="40" Style="{StaticResource Style.RepeatButton.NoText}" Command="u:Commands.NextFrame"
                                         ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                         ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageButton Grid.Column="4" x:Name="LastRepeatButton" Content="{StaticResource Vector.Last.Green}" ContentHeight="12"
                                   Width="40" Style="{StaticResource Style.Button.NoText}" Command="u:Commands.LastFrame"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>