<n:RecorderWindow x:Class="ScreenToGif.Windows.Other.RecorderNew"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:n="clr-namespace:ScreenToGif.Controls"
                  xmlns:c="clr-namespace:ScreenToGif.Util.Converters"
                  xmlns:u="clr-namespace:ScreenToGif.Util"
                  x:Name="GhostWindow" Title="ScreenToGif" Height="Auto" Width="Auto"
                  WindowStyle="None" AllowsTransparency="True" Topmost="True" ResizeMode="NoResize"
                  UseLayoutRounding="True" SnapsToDevicePixels="True" Background="Transparent"
                  Activated="Window_Activated" Loaded="Window_Loaded" StateChanged="Window_StateChanged" Closing="Window_Closing">

    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Command.Options}" CanExecute="Options_CanExecute" Executed="Options_Executed"/>
        <CommandBinding Command="{StaticResource Command.EnableSnapshot}" CanExecute="EnableSnapshot_CanExecute" Executed="EnableSnapshot_Executed"/>
    </Window.CommandBindings>

    <Window.Resources>
        <Storyboard x:Key="ShowDiscardStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="(Button.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideDiscardStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="DiscardButton" Storyboard.TargetProperty="(Button.Opacity)" 
                             From="{Binding ElementName=DiscardButton,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ShowReselectStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ReselectSplitButton" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ReselectSplitButton" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ReselectSplitButton" Storyboard.TargetProperty="(Button.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideReselectStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ReselectSplitButton" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ReselectSplitButton" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ReselectSplitButton" Storyboard.TargetProperty="(Button.Opacity)" 
                             From="{Binding ElementName=DiscardButton,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideRectangleStoryboard" FillBehavior="Stop" DesiredFrameRate="60" SpeedRatio="2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DashedRectangle" Storyboard.TargetProperty="(Rectangle.Opacity)" Duration="0:0:0.1" FillBehavior="Stop">
                <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(Border.Opacity)" Duration="0:0:0.1" FillBehavior="Stop">
                <DiscreteDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowRectangleStoryboard" FillBehavior="Stop" DesiredFrameRate="60">
            <DoubleAnimation Storyboard.TargetName="DashedRectangle" Storyboard.TargetProperty="(Rectangle.Opacity)" 
                             From="{Binding ElementName=DashedRectangle,Path=Opacity}" To="1" Duration="0:0:1" FillBehavior="Stop">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(Border.Opacity)" 
                             From="{Binding ElementName=MainBorder,Path=Opacity}" To="1" Duration="0:0:1" FillBehavior="Stop">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <c:StageToButtonString x:Key="StageToButtonStringConverter"/>
        <c:StageToCanvas x:Key="StageToCanvasConverter"/>
        <c:ShortcutKeys x:Key="ShortcutKeys"/>
        <c:IntToString x:Key="IntToStringConverter"/>
    </Window.Resources>

    <!--Selected="{Binding ElementName=GhostWindow, Path=Region, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
    <AdornerDecorator>
        <n:AdornedControl x:Name="AdornedControl" IsAdornerVisible="{Binding ElementName=GhostWindow, Path=IsPickingRegion}">
            <n:AdornedControl.AdornerContent>
                <n:SelectControl x:Name="SelectControl" Focusable="True" IsPickingRegion="{Binding ElementName=GhostWindow, Path=IsPickingRegion, UpdateSourceTrigger=PropertyChanged}" 
                                 SelectionAccepted="SelectControl_SelectionAccepted" SelectionCanceled="SelectControl_SelectionCanceled"/>
            </n:AdornedControl.AdornerContent>

            <Canvas x:Name="MainCanvas" Background="Transparent" SnapsToDevicePixels="True" Visibility="Collapsed">
                <Canvas.Resources>
                    <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
                </Canvas.Resources>

                <Border x:Name="MainBorder" Width="Auto" Height="Auto" Background="{DynamicResource Panel.Background}" BorderThickness="1" BorderBrush="{DynamicResource Element.Border.Weak}"
                        Visibility="{Binding ElementName=GhostWindow, Path=IsPickingRegion, Converter={StaticResource InvertedBoolToVisibility}}"
                        MouseLeftButtonDown="MainBorder_MouseLeftButtonDown" MouseMove="MainBorder_MouseMove" MouseLeftButtonUp="MainBorder_MouseLeftButtonUp">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" x:Name="FirstRow"/>
                            <RowDefinition Height="32" x:Name="SecondRow"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <n:ImageButton Grid.Column="0" Grid.RowSpan="2" x:Name="BackButton" Content="{DynamicResource Vector.Back}" Width="30" Padding="2"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" ContentHeight="20" 
                                           Foreground="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderForeground, Mode=TwoWay, Converter={StaticResource ColorToBrush}}"
                                           ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Back}" Click="BackButton_Click"/>

                            <TextBlock Grid.Column="1" x:Name="CaptionText" Text="{Binding ElementName=GhostWindow, Path=Title}" FontFamily="Segoe UI" FontSize="11" VerticalAlignment="Center"
                                       FontWeight="Regular" Margin="2,0,0,0" Effect="{StaticResource Shadow.Foreground.Small}" Foreground="{DynamicResource Element.Foreground.Header}"/>

                            <TextBlock Grid.Column="2" x:Name="NumberText" Text="{Binding ElementName=GhostWindow, Path=FrameCount, Converter={StaticResource IntToStringConverter}}" FontFamily="Segoe UI" FontSize="11" 
                                       VerticalAlignment="Center" FontWeight="Regular" Margin="2,0,0,0" HorizontalAlignment="Right" Foreground="{DynamicResource Element.Foreground.Medium}" 
                                       Effect="{StaticResource Shadow.Foreground.Small}"/>

                            <Viewbox Grid.Column="3" Child="{StaticResource Vector.Cursor}" Margin="3,5" ToolTip="Cursor following is enabled!" 
                                     Visibility="{Binding ElementName=GhostWindow, Path=IsFollowing, Converter={StaticResource Bool2Visibility}}"/>

                            <n:ImageButton Grid.Column="4" Grid.RowSpan="2" x:Name="CloseButton" Content="{DynamicResource Vector.Close}" Margin="0" 
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           ContentHeight="18" Padding="2" Click="CloseButton_Click"/>
                        </Grid>

                        <Grid Grid.Row="1" x:Name="RecordControlsGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26"/>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" MaxWidth="50"/>
                                <ColumnDefinition Width="Auto" MaxWidth="26"/>
                                <ColumnDefinition Width="26"/>
                                <ColumnDefinition Width="26"/>
                            </Grid.ColumnDefinitions>

                            <n:ImageButton Grid.Column="0" x:Name="OptionsButton" Content="{DynamicResource Vector.Options}" Margin="0" Padding="3" Command="{StaticResource Command.Options}"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" ContentHeight="22"
                                           ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Options}"/>

                            <Viewbox Grid.Column="1" Stretch="UniformToFill" ClipToBounds="True" Focusable="False" Opacity="{DynamicResource Element.Opacity}"
                                     Visibility="{Binding Path=SnapshotMode, Source={x:Static u:UserSettings.All}}"
                                     ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Recorder.FpsRange}">

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight" Margin="-4">
                                    <n:CircularProgressBar StrokeThickness="2" Percentage="100" SegmentColor="Gray" Radius="24" IsTabStop="False"/>
                                    <n:CircularProgressBar StrokeThickness="22" Percentage="100" SegmentColor="#FFF0F1F1" Radius="10" IsTabStop="False"/>

                                    <n:CircularProgressBar StrokeThickness="2" Value="{Binding ElementName=FpsIntegerUpDown, Path=Value, Mode=OneWay}" 
                                                           IsInverted="True" Minimum="1" Maximum="60" SegmentColor="#FFE28A73" Radius="24" IsTabStop="False"/>
                                    <n:CircularProgressBar StrokeThickness="22" Value="{Binding ElementName=FpsIntegerUpDown, Path=Value, Mode=OneWay}" 
                                                           IsInverted="True" Minimum="1" Maximum="60" SegmentColor="#FFE28A73" Radius="10" IsTabStop="False"/>
                                </Grid>
                            </Viewbox>

                            <n:IntegerUpDown Grid.Column="2" x:Name="FpsIntegerUpDown" Margin="1,3" StepValue="1" Minimum="1" Maximum="60" MinWidth="45" TabIndex="4"
                                             Value="{Binding Source={x:Static u:UserSettings.All}, Path=LatestFps, Mode=TwoWay}"
                                             Visibility="{Binding SnapshotMode, Source={x:Static u:UserSettings.All}, Converter={StaticResource InvertedBoolToVisibility}}"
                                             ToolTipService.HorizontalOffset="-5" ToolTipService.Placement="Bottom" ToolTip="{DynamicResource Recorder.Fps}"/>

                            <Label Grid.Column="3" Content="{StaticResource Recorder.Fps.Short}" FontSize="12" FontFamily="Segoe UI" Margin="1,0,0,0" 
                                   VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource Element.Foreground.Medium}" 
                                   Visibility="{Binding SnapshotMode, Source={x:Static u:UserSettings.All}, Converter={StaticResource InvertedBoolToVisibility}}"/>

                            <Separator Grid.Column="4" Width="1" Margin="5,2" HorizontalAlignment="Left"
                                       Visibility="{Binding SnapshotMode, Source={x:Static u:UserSettings.All}, Converter={StaticResource InvertedBoolToVisibility}}"/>

                            <n:SplitButton Grid.Column="5" x:Name="ReselectSplitButton" Style="{StaticResource Style.SplitButton.NoBorder.NoText}" ContentHeight="20" Padding="3"
                                           SelectedIndex="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderModeIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="{Binding Source={x:Static u:UserSettings.All}, Path=RecorderForeground, Mode=TwoWay, Converter={StaticResource ColorToBrush}}">
                                <n:ImageMenuItem Image="{StaticResource Vector.Crop}" Header="{DynamicResource S.Recorder.Area}" ContentHeight="16" ContentWidth="16" Click="RegionButton_Click"/>
                                <n:ImageMenuItem Image="{StaticResource Vector.Application}" Header="{DynamicResource S.Recorder.Window}" ContentHeight="16" ContentWidth="16" Click="WindowButton_Click"/>
                                <n:ImageMenuItem Image="{StaticResource Vector.Monitor}" Header="{DynamicResource S.Recorder.Screen}" ContentHeight="16" ContentWidth="16" Click="FullScreenButton_Click"/>
                            </n:SplitButton>

                            <n:ImageButton Grid.Column="6" x:Name="DiscardButton" Content="{DynamicResource Vector.Remove}" Visibility="Collapsed" 
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}" 
                                           ContentHeight="20" Padding="3" ToolTip="{DynamicResource Recorder.Discard}" Click="DiscardButton_Click"/>

                            <n:ImageButton Grid.Column="7" x:Name="RecordPauseButton"
                                           Content="{Binding Stage, ElementName=GhostWindow, Converter={StaticResource StageToCanvasConverter}, FallbackValue={StaticResource Vector.Record}}" 
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}"
                                           KeyGesture="{Binding Converter={StaticResource ShortcutKeys}, ConverterParameter='1'}"
                                           ContentHeight="20" Padding="3" Click="RecordPauseButton_Click"/>

                            <n:ImageButton Grid.Column="8" x:Name="StopButton" Content="{DynamicResource Vector.Stop}"
                                           Style="{DynamicResource Style.Button.NoText}" Effect="{DynamicResource Shadow.Foreground.Small}"
                                           KeyGesture="{Binding Converter={StaticResource ShortcutKeys}, ConverterParameter='2'}"
                                           ContentHeight="20" Padding="3" ToolTip="{DynamicResource Recorder.Stop}" Click="StopButton_Click"/>
                        </Grid>
                    </Grid>
                </Border>

                <Rectangle x:Name="DashedRectangle" StrokeDashArray="5" Stroke="#FFABABAB" StrokeThickness="1" IsHitTestVisible="False" Effect="{x:Null}"
                           Visibility="{Binding ElementName=GhostWindow, Path=IsPickingRegion, Converter={StaticResource InvertedBoolToVisibility}}"
                           Canvas.Left="{Binding ElementName=GhostWindow, Path=Region.Left}" Canvas.Top="{Binding ElementName=GhostWindow, Path=Region.Top}"
                           Width="{Binding ElementName=GhostWindow, Path=Region.Width}" Height="{Binding ElementName=GhostWindow, Path=Region.Height}"/>
            </Canvas>
        </n:AdornedControl>
    </AdornerDecorator>
</n:RecorderWindow>